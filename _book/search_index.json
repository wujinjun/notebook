{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["ai算法","cpp","introduct","leetecod","python和数据分析","tensorflow","uml和设计模式","uml笔记","个人技术学习笔记","为了方便索引和同步，逐步合并更新到这里来，后续会逐步完成填充，目前只有大纲","刷题","剑指offer","序","操作系统","数据结构","数据结构和算法","算法"],"datastructure_and_algorithm/":["数据结构和算法"],"datastructure_and_algorithm/data_sturcture.html":["数据结构","数据结构笔记"],"datastructure_and_algorithm/algorithm.html":["算法","算法笔记"],"UML_and_design_pattern/":["uml和设计模式"],"UML_and_design_pattern/UML.html":["a的关系，例如a是b，suv是汽车；猫是动物","b不知道a；","patterns.readthedocs.io/zh_cn/latest/read_uml.html#id2","uml的表示方法","uml笔记","与关联关系不同的是，它是一种临时性的关系，通常在运行期间产生，并且随着运行时的变化；","例如学生和学校，乘车人和车票；","依赖关系(dependency)","依赖关系也可能发生变化；","关联关系(association)","关联关系默认不强调方向，表示对象间相互知道；","参考来自：https://design","在最终代码中，依赖关系体现为类构造方法及类方法的传入参数，箭头的指向为调用关系；依赖关系除了临时知道对方外，还是“使用”对方的方法和属性；","如果特别强调方向，如下图，表示a知道b，但","它一般用来定义对象之间静态的、天然的结构；","它是一种静态关系，","实现关系(realize)","实现关系为实现抽象类（”车“就是c++中的抽象类，小汽车和自行车都是具体子类）","所以，关联关系是一种“强关联”的关系；","显然，依赖也有方向，双向依赖是一种非常糟糕的结构，我们总是应该保持单向依赖，杜绝双向依赖的产生；","泛化关系(generalization)","用一套带箭头的虚线表示，描述一个对象在运行期间会用到另一个对象的关系；","用实心菱形箭头的直线表示，表示a组成b，或者说b由a组成；","用实线+空心箭头表示","用带空心箭头的虚线表示","用带空心菱形箭头的直线表示，表示a聚合到b上，或者说b由a组成；","用带箭头的直线表示，用来描述不同类的对象之间的结构关系；","类之间的关系","组合关系(composition)","组合关系是强依赖的，b不存在以后a也不存在了，整体不存在了，部分也不存在了","聚合关系(aggregation)","聚合关系不是强依赖的，b不存在后a仍然可以存在，比如员工聚合成了部门，但部门不存在了以后员工仍然存在","表示i","通常与运行状态无关，一般由常识等因素决定的；"],"coding_practice/sword_offer/resolution.html":["&&","(node","*","*left;","*right;","/*","//","//path数组记录节点","//不能被递归，也不满足和值条件，就弹出该节点","1.搜索路径，应该想到是一个dfs问题，递归处理","2.边界条件的考虑：路径符合题意的话需要满足",":","==",">",">left",">left)",">left,",">right",">right)",">right,",">val",">val)",">val);","[toc]","class","dfsfind(nod","dfsfind(root,","dfsfind(treenode*","expectnumber)","expectnumber);","findpath(treenode*","int","left(null),","node","node,","null","null)","path.pop_back();","path.push_back(nod","path;","public:","res.push_back(path);","res;","return","return;","right(null)","root,int","solut","struct","sum","sum)","treenod","treenode(int","val(x),","val;","vector","vector>","void","x)","{","}","};","};*/","不是叶子节点就继续递归，直到递归到叶子节点为止。","不是叶子节点，继续递归","二叉树中和为某一值的路径","先把节点记录到path数组","判断是否为叶子节点，且满足和值条件","判断是否到达叶子节点，如果到达叶子节点，是否满足和值条件","剑指offer","加上结束节点的值恰好等于期望的sum值，这里需要从根节点递归到叶子节点，每递归一个节点，sum值减去节点的val，直到减去最后的叶子节点恰好等于0，条件等价于","在返回值的list中，数组长度大的数组靠前)","如果没有继续递归，也没有满足和值条件，那么从path数组中弹出这个节点","结束节点是一个叶子节点，实现为代码就是node","解决思路：","输入一颗二叉树的根节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。(注意:","输入判空","递归的设计："],"coding_practice/leetcode/resolution.html":["leetcod","leetecod","刷题","陆续做了一些题，后续会把题解和思路记录在这里"]},"length":8},"tokenStore":{"root":{"1":{"docs":{},".":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"想":{"docs":{},"到":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"处":{"docs":{},"理":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"边":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"：":{"docs":{},"路":{"docs":{},"径":{"docs":{},"符":{"docs":{},"合":{"docs":{},"题":{"docs":{},"意":{"docs":{},"的":{"docs":{},"话":{"docs":{},"需":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"a":{"docs":{},"i":{"docs":{},"算":{"docs":{},"法":{"docs":{"./":{"ref":"./","tf":0.0625}}}}},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"a":{"docs":{},"是":{"docs":{},"b":{"docs":{},"，":{"docs":{},"s":{"docs":{},"u":{"docs":{},"v":{"docs":{},"是":{"docs":{},"汽":{"docs":{},"车":{"docs":{},"；":{"docs":{},"猫":{"docs":{},"是":{"docs":{},"动":{"docs":{},"物":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"p":{"docs":{},"p":{"docs":{"./":{"ref":"./","tf":0.0625}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.015384615384615385}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"./":{"ref":"./","tf":0.0625},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":10}}}}}},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.3333333333333333}}}}}}},"f":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"t":{"docs":{},"h":{"docs":{},"o":{"docs":{},"n":{"docs":{},"和":{"docs":{},"数":{"docs":{},"据":{"docs":{},"分":{"docs":{},"析":{"docs":{"./":{"ref":"./","tf":0.0625}}}}}}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"z":{"docs":{},"h":{"docs":{},"_":{"docs":{},"c":{"docs":{},"n":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"u":{"docs":{},"m":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"#":{"docs":{},"i":{"docs":{},"d":{"2":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"n":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"f":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{"./":{"ref":"./","tf":0.0625}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.023076923076923078}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}},"u":{"docs":{},"m":{"docs":{},"l":{"docs":{},"和":{"docs":{},"设":{"docs":{},"计":{"docs":{},"模":{"docs":{},"式":{"docs":{"./":{"ref":"./","tf":0.0625},"UML_and_design_pattern/":{"ref":"UML_and_design_pattern/","tf":11}}}}}}},"笔":{"docs":{},"记":{"docs":{"./":{"ref":"./","tf":0.0625},"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":10}}}},"的":{"docs":{},"表":{"docs":{},"示":{"docs":{},"方":{"docs":{},"法":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}},"个":{"docs":{},"人":{"docs":{},"技":{"docs":{},"术":{"docs":{},"学":{"docs":{},"习":{"docs":{},"笔":{"docs":{},"记":{"docs":{"./":{"ref":"./","tf":0.0625}}}}}}}}}},"为":{"docs":{},"了":{"docs":{},"方":{"docs":{},"便":{"docs":{},"索":{"docs":{},"引":{"docs":{},"和":{"docs":{},"同":{"docs":{},"步":{"docs":{},"，":{"docs":{},"逐":{"docs":{},"步":{"docs":{},"合":{"docs":{},"并":{"docs":{},"更":{"docs":{},"新":{"docs":{},"到":{"docs":{},"这":{"docs":{},"里":{"docs":{},"来":{"docs":{},"，":{"docs":{},"后":{"docs":{},"续":{"docs":{},"会":{"docs":{},"逐":{"docs":{},"步":{"docs":{},"完":{"docs":{},"成":{"docs":{},"填":{"docs":{},"充":{"docs":{},"，":{"docs":{},"目":{"docs":{},"前":{"docs":{},"只":{"docs":{},"有":{"docs":{},"大":{"docs":{},"纲":{"docs":{"./":{"ref":"./","tf":0.0625}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"刷":{"docs":{},"题":{"docs":{"./":{"ref":"./","tf":0.0625},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.3333333333333333}}}},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"./":{"ref":"./","tf":0.0625},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":10.007692307692308}}}}}}}}},"序":{"docs":{"./":{"ref":"./","tf":0.0625}}},"操":{"docs":{},"作":{"docs":{},"系":{"docs":{},"统":{"docs":{"./":{"ref":"./","tf":0.0625}}}}}},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{"./":{"ref":"./","tf":0.0625},"datastructure_and_algorithm/data_sturcture.html":{"ref":"datastructure_and_algorithm/data_sturcture.html","tf":10}},"和":{"docs":{},"算":{"docs":{},"法":{"docs":{"./":{"ref":"./","tf":0.0625},"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":11}}}}},"笔":{"docs":{},"记":{"docs":{"datastructure_and_algorithm/data_sturcture.html":{"ref":"datastructure_and_algorithm/data_sturcture.html","tf":1}}}}}}}},"算":{"docs":{},"法":{"docs":{"./":{"ref":"./","tf":0.0625},"datastructure_and_algorithm/algorithm.html":{"ref":"datastructure_and_algorithm/algorithm.html","tf":10}},"笔":{"docs":{},"记":{"docs":{"datastructure_and_algorithm/algorithm.html":{"ref":"datastructure_and_algorithm/algorithm.html","tf":1}}}}}},"b":{"docs":{},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"a":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}},"与":{"docs":{},"关":{"docs":{},"联":{"docs":{},"关":{"docs":{},"系":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"临":{"docs":{},"时":{"docs":{},"性":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"期":{"docs":{},"间":{"docs":{},"产":{"docs":{},"生":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"随":{"docs":{},"着":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"的":{"docs":{},"变":{"docs":{},"化":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"如":{"docs":{},"学":{"docs":{},"生":{"docs":{},"和":{"docs":{},"学":{"docs":{},"校":{"docs":{},"，":{"docs":{},"乘":{"docs":{},"车":{"docs":{},"人":{"docs":{},"和":{"docs":{},"车":{"docs":{},"票":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}},"依":{"docs":{},"赖":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},")":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}},"关":{"docs":{},"联":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"不":{"docs":{},"强":{"docs":{},"调":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"对":{"docs":{},"象":{"docs":{},"间":{"docs":{},"相":{"docs":{},"互":{"docs":{},"知":{"docs":{},"道":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"考":{"docs":{},"来":{"docs":{},"自":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"最":{"docs":{},"终":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"，":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"关":{"docs":{},"系":{"docs":{},"体":{"docs":{},"现":{"docs":{},"为":{"docs":{},"类":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"及":{"docs":{},"类":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"传":{"docs":{},"入":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"为":{"docs":{},"调":{"docs":{},"用":{"docs":{},"关":{"docs":{},"系":{"docs":{},"；":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"关":{"docs":{},"系":{"docs":{},"除":{"docs":{},"了":{"docs":{},"临":{"docs":{},"时":{"docs":{},"知":{"docs":{},"道":{"docs":{},"对":{"docs":{},"方":{"docs":{},"外":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"“":{"docs":{},"使":{"docs":{},"用":{"docs":{},"”":{"docs":{},"对":{"docs":{},"方":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"属":{"docs":{},"性":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"的":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"靠":{"docs":{},"前":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"特":{"docs":{},"别":{"docs":{},"强":{"docs":{},"调":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"a":{"docs":{},"知":{"docs":{},"道":{"docs":{},"b":{"docs":{},"，":{"docs":{},"但":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"继":{"docs":{},"续":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"满":{"docs":{},"足":{"docs":{},"和":{"docs":{},"值":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"从":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"它":{"docs":{},"一":{"docs":{},"般":{"docs":{},"用":{"docs":{},"来":{"docs":{},"定":{"docs":{},"义":{"docs":{},"对":{"docs":{},"象":{"docs":{},"之":{"docs":{},"间":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"、":{"docs":{},"天":{"docs":{},"然":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"静":{"docs":{},"态":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}},"为":{"docs":{},"实":{"docs":{},"现":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"（":{"docs":{},"”":{"docs":{},"车":{"docs":{},"“":{"docs":{},"就":{"docs":{},"是":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"中":{"docs":{},"的":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"，":{"docs":{},"小":{"docs":{},"汽":{"docs":{},"车":{"docs":{},"和":{"docs":{},"自":{"docs":{},"行":{"docs":{},"车":{"docs":{},"都":{"docs":{},"是":{"docs":{},"具":{"docs":{},"体":{"docs":{},"子":{"docs":{},"类":{"docs":{},"）":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"关":{"docs":{},"联":{"docs":{},"关":{"docs":{},"系":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"“":{"docs":{},"强":{"docs":{},"关":{"docs":{},"联":{"docs":{},"”":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}},"显":{"docs":{},"然":{"docs":{},"，":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"也":{"docs":{},"有":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"双":{"docs":{},"向":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"非":{"docs":{},"常":{"docs":{},"糟":{"docs":{},"糕":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"总":{"docs":{},"是":{"docs":{},"应":{"docs":{},"该":{"docs":{},"保":{"docs":{},"持":{"docs":{},"单":{"docs":{},"向":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"，":{"docs":{},"杜":{"docs":{},"绝":{"docs":{},"双":{"docs":{},"向":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"的":{"docs":{},"产":{"docs":{},"生":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"泛":{"docs":{},"化":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"一":{"docs":{},"套":{"docs":{},"带":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"的":{"docs":{},"虚":{"docs":{},"线":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"描":{"docs":{},"述":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"期":{"docs":{},"间":{"docs":{},"会":{"docs":{},"用":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"心":{"docs":{},"菱":{"docs":{},"形":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"的":{"docs":{},"直":{"docs":{},"线":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"a":{"docs":{},"组":{"docs":{},"成":{"docs":{},"b":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"说":{"docs":{},"b":{"docs":{},"由":{"docs":{},"a":{"docs":{},"组":{"docs":{},"成":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"+":{"docs":{},"空":{"docs":{},"心":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"表":{"docs":{},"示":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}},"带":{"docs":{},"空":{"docs":{},"心":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"的":{"docs":{},"虚":{"docs":{},"线":{"docs":{},"表":{"docs":{},"示":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}},"菱":{"docs":{},"形":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"的":{"docs":{},"直":{"docs":{},"线":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"a":{"docs":{},"聚":{"docs":{},"合":{"docs":{},"到":{"docs":{},"b":{"docs":{},"上":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"说":{"docs":{},"b":{"docs":{},"由":{"docs":{},"a":{"docs":{},"组":{"docs":{},"成":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"箭":{"docs":{},"头":{"docs":{},"的":{"docs":{},"直":{"docs":{},"线":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"描":{"docs":{},"述":{"docs":{},"不":{"docs":{},"同":{"docs":{},"类":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"关":{"docs":{},"系":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}},"组":{"docs":{},"合":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}},"是":{"docs":{},"强":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"的":{"docs":{},"，":{"docs":{},"b":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"以":{"docs":{},"后":{"docs":{},"a":{"docs":{},"也":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"了":{"docs":{},"，":{"docs":{},"整":{"docs":{},"体":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"了":{"docs":{},"，":{"docs":{},"部":{"docs":{},"分":{"docs":{},"也":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"了":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"聚":{"docs":{},"合":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}},"不":{"docs":{},"是":{"docs":{},"强":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"的":{"docs":{},"，":{"docs":{},"b":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"后":{"docs":{},"a":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"员":{"docs":{},"工":{"docs":{},"聚":{"docs":{},"合":{"docs":{},"成":{"docs":{},"了":{"docs":{},"部":{"docs":{},"门":{"docs":{},"，":{"docs":{},"但":{"docs":{},"部":{"docs":{},"门":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"了":{"docs":{},"以":{"docs":{},"后":{"docs":{},"员":{"docs":{},"工":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"存":{"docs":{},"在":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"i":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}},"通":{"docs":{},"常":{"docs":{},"与":{"docs":{},"运":{"docs":{},"行":{"docs":{},"状":{"docs":{},"态":{"docs":{},"无":{"docs":{},"关":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"由":{"docs":{},"常":{"docs":{},"识":{"docs":{},"等":{"docs":{},"因":{"docs":{},"素":{"docs":{},"决":{"docs":{},"定":{"docs":{},"的":{"docs":{},"；":{"docs":{"UML_and_design_pattern/UML.html":{"ref":"UML_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}},"&":{"docs":{},"&":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.023076923076923078}}}},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.03076923076923077}}}}}}},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.015384615384615385}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}},"/":{"docs":{},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}},"/":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.015384615384615385}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"数":{"docs":{},"组":{"docs":{},"记":{"docs":{},"录":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"满":{"docs":{},"足":{"docs":{},"和":{"docs":{},"值":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"就":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}},"=":{"docs":{},"=":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.05384615384615385}}}},">":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.015384615384615385}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}},"r":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.015384615384615385}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.023076923076923078}}}}}}}},"[":{"docs":{},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.015384615384615385}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.046153846153846156}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.03076923076923077}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.015384615384615385}}}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.023076923076923078}}}}}}},"u":{"docs":{},"m":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.03076923076923077}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.015384615384615385}},">":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}},"x":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}},"{":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.07692307692307693}}},"}":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.06153846153846154}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}},"*":{"docs":{},"/":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}},"不":{"docs":{},"是":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"继":{"docs":{},"续":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"递":{"docs":{},"归":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"递":{"docs":{},"归":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"和":{"docs":{},"为":{"docs":{},"某":{"docs":{},"一":{"docs":{},"值":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}},"先":{"docs":{},"把":{"docs":{},"节":{"docs":{},"点":{"docs":{},"记":{"docs":{},"录":{"docs":{},"到":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"数":{"docs":{},"组":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"且":{"docs":{},"满":{"docs":{},"足":{"docs":{},"和":{"docs":{},"值":{"docs":{},"条":{"docs":{},"件":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}},"到":{"docs":{},"达":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"到":{"docs":{},"达":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"是":{"docs":{},"否":{"docs":{},"满":{"docs":{},"足":{"docs":{},"和":{"docs":{},"值":{"docs":{},"条":{"docs":{},"件":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"加":{"docs":{},"上":{"docs":{},"结":{"docs":{},"束":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"恰":{"docs":{},"好":{"docs":{},"等":{"docs":{},"于":{"docs":{},"期":{"docs":{},"望":{"docs":{},"的":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"递":{"docs":{},"归":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"每":{"docs":{},"递":{"docs":{},"归":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"值":{"docs":{},"减":{"docs":{},"去":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"减":{"docs":{},"去":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"恰":{"docs":{},"好":{"docs":{},"等":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"条":{"docs":{},"件":{"docs":{},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"为":{"docs":{},"代":{"docs":{},"码":{"docs":{},"就":{"docs":{},"是":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"思":{"docs":{},"路":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}},"输":{"docs":{},"入":{"docs":{},"一":{"docs":{},"颗":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"结":{"docs":{},"点":{"docs":{},"值":{"docs":{},"的":{"docs":{},"和":{"docs":{},"为":{"docs":{},"输":{"docs":{},"入":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{},"路":{"docs":{},"径":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"从":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"往":{"docs":{},"下":{"docs":{},"一":{"docs":{},"直":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"所":{"docs":{},"经":{"docs":{},"过":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"形":{"docs":{},"成":{"docs":{},"一":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{},"(":{"docs":{},"注":{"docs":{},"意":{"docs":{},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"空":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007692307692307693}}}}}}}},"陆":{"docs":{},"续":{"docs":{},"做":{"docs":{},"了":{"docs":{},"一":{"docs":{},"些":{"docs":{},"题":{"docs":{},"，":{"docs":{},"后":{"docs":{},"续":{"docs":{},"会":{"docs":{},"把":{"docs":{},"题":{"docs":{},"解":{"docs":{},"和":{"docs":{},"思":{"docs":{},"路":{"docs":{},"记":{"docs":{},"录":{"docs":{},"在":{"docs":{},"这":{"docs":{},"里":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.3333333333333333}}}}}}}}}}}}}}}}}}}}}}}}},"length":139},"corpusTokens":["&&","(node","*","*left;","*right;","/*","//","//path数组记录节点","//不能被递归，也不满足和值条件，就弹出该节点","1.搜索路径，应该想到是一个dfs问题，递归处理","2.边界条件的考虑：路径符合题意的话需要满足",":","==",">",">left",">left)",">left,",">right",">right)",">right,",">val",">val)",">val);","[toc]","ai算法","a的关系，例如a是b，suv是汽车；猫是动物","b不知道a；","class","cpp","dfsfind(nod","dfsfind(root,","dfsfind(treenode*","expectnumber)","expectnumber);","findpath(treenode*","int","introduct","leetcod","leetecod","left(null),","node","node,","null","null)","path.pop_back();","path.push_back(nod","path;","patterns.readthedocs.io/zh_cn/latest/read_uml.html#id2","public:","python和数据分析","res.push_back(path);","res;","return","return;","right(null)","root,int","solut","struct","sum","sum)","tensorflow","treenod","treenode(int","uml和设计模式","uml的表示方法","uml笔记","val(x),","val;","vector","vector>","void","x)","{","}","};","};*/","不是叶子节点就继续递归，直到递归到叶子节点为止。","不是叶子节点，继续递归","与关联关系不同的是，它是一种临时性的关系，通常在运行期间产生，并且随着运行时的变化；","个人技术学习笔记","为了方便索引和同步，逐步合并更新到这里来，后续会逐步完成填充，目前只有大纲","二叉树中和为某一值的路径","例如学生和学校，乘车人和车票；","依赖关系(dependency)","依赖关系也可能发生变化；","先把节点记录到path数组","关联关系(association)","关联关系默认不强调方向，表示对象间相互知道；","判断是否为叶子节点，且满足和值条件","判断是否到达叶子节点，如果到达叶子节点，是否满足和值条件","刷题","剑指offer","加上结束节点的值恰好等于期望的sum值，这里需要从根节点递归到叶子节点，每递归一个节点，sum值减去节点的val，直到减去最后的叶子节点恰好等于0，条件等价于","参考来自：https://design","在最终代码中，依赖关系体现为类构造方法及类方法的传入参数，箭头的指向为调用关系；依赖关系除了临时知道对方外，还是“使用”对方的方法和属性；","在返回值的list中，数组长度大的数组靠前)","如果没有继续递归，也没有满足和值条件，那么从path数组中弹出这个节点","如果特别强调方向，如下图，表示a知道b，但","它一般用来定义对象之间静态的、天然的结构；","它是一种静态关系，","实现关系(realize)","实现关系为实现抽象类（”车“就是c++中的抽象类，小汽车和自行车都是具体子类）","序","所以，关联关系是一种“强关联”的关系；","操作系统","数据结构","数据结构和算法","数据结构笔记","显然，依赖也有方向，双向依赖是一种非常糟糕的结构，我们总是应该保持单向依赖，杜绝双向依赖的产生；","泛化关系(generalization)","用一套带箭头的虚线表示，描述一个对象在运行期间会用到另一个对象的关系；","用实心菱形箭头的直线表示，表示a组成b，或者说b由a组成；","用实线+空心箭头表示","用带空心箭头的虚线表示","用带空心菱形箭头的直线表示，表示a聚合到b上，或者说b由a组成；","用带箭头的直线表示，用来描述不同类的对象之间的结构关系；","算法","算法笔记","类之间的关系","组合关系(composition)","组合关系是强依赖的，b不存在以后a也不存在了，整体不存在了，部分也不存在了","结束节点是一个叶子节点，实现为代码就是node","聚合关系(aggregation)","聚合关系不是强依赖的，b不存在后a仍然可以存在，比如员工聚合成了部门，但部门不存在了以后员工仍然存在","表示i","解决思路：","输入一颗二叉树的根节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。(注意:","输入判空","递归的设计：","通常与运行状态无关，一般由常识等因素决定的；","陆续做了一些题，后续会把题解和思路记录在这里"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"个人技术学习笔记\n为了方便索引和同步，逐步合并更新到这里来，后续会逐步完成填充，目前只有大纲\n\n序\n数据结构和算法\n数据结构\n算法\n\n\nUML和设计模式\nUML笔记\n\n\nCPP\n操作系统\npython和数据分析\nAI算法\nTensorflow\n刷题\n剑指offer\nleetecode\n\n\n\n"},"datastructure_and_algorithm/":{"url":"datastructure_and_algorithm/","title":"数据结构和算法","keywords":"","body":"数据结构和算法\n"},"datastructure_and_algorithm/data_sturcture.html":{"url":"datastructure_and_algorithm/data_sturcture.html","title":"数据结构","keywords":"","body":"数据结构笔记\n"},"datastructure_and_algorithm/algorithm.html":{"url":"datastructure_and_algorithm/algorithm.html","title":"算法","keywords":"","body":"算法笔记\n"},"UML_and_design_pattern/":{"url":"UML_and_design_pattern/","title":"UML和设计模式","keywords":"","body":"UML和设计模式\n"},"UML_and_design_pattern/UML.html":{"url":"UML_and_design_pattern/UML.html","title":"UML笔记","keywords":"","body":"UML的表示方法\n类之间的关系\n泛化关系(generalization)\n用实线+空心箭头表示\n\n表示is-a的关系，例如A是B，suv是汽车；猫是动物\n\n\n实现关系(realize)\n用带空心箭头的虚线表示\n\n实现关系为实现抽象类（”车“就是C++中的抽象类，小汽车和自行车都是具体子类）\n\n\n聚合关系(aggregation)\n用带空心菱形箭头的直线表示，表示A聚合到B上，或者说B由A组成；\n\n聚合关系不是强依赖的，B不存在后A仍然可以存在，比如员工聚合成了部门，但部门不存在了以后员工仍然存在\n\n\n组合关系(composition)\n用实心菱形箭头的直线表示，表示A组成B，或者说B由A组成；\n\n组合关系是强依赖的，B不存在以后A也不存在了，整体不存在了，部分也不存在了\n\n\n关联关系(association)\n用带箭头的直线表示，用来描述不同类的对象之间的结构关系；\n\n它是一种静态关系， 通常与运行状态无关，一般由常识等因素决定的；\n它一般用来定义对象之间静态的、天然的结构； 所以，关联关系是一种“强关联”的关系；\n例如学生和学校，乘车人和车票；\n关联关系默认不强调方向，表示对象间相互知道；\n如果特别强调方向，如下图，表示A知道B，但 B不知道A；\n\n\n依赖关系(dependency)\n用一套带箭头的虚线表示，描述一个对象在运行期间会用到另一个对象的关系；\n\n与关联关系不同的是，它是一种临时性的关系，通常在运行期间产生，并且随着运行时的变化； 依赖关系也可能发生变化；\n显然，依赖也有方向，双向依赖是一种非常糟糕的结构，我们总是应该保持单向依赖，杜绝双向依赖的产生；\n在最终代码中，依赖关系体现为类构造方法及类方法的传入参数，箭头的指向为调用关系；依赖关系除了临时知道对方外，还是“使用”对方的方法和属性；\n\n\n参考来自：https://design-patterns.readthedocs.io/zh_CN/latest/read_uml.html#id2\n"},"coding_practice/sword_offer/resolution.html":{"url":"coding_practice/sword_offer/resolution.html","title":"剑指offer","keywords":"","body":"剑指Offer\n[TOC]\n二叉树中和为某一值的路径\n输入一颗二叉树的根节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。(注意: 在返回值的list中，数组长度大的数组靠前)\n\n解决思路： \n  1.搜索路径，应该想到是一个dfs问题，递归处理\n  2.边界条件的考虑：路径符合题意的话需要满足\n  * 结束节点是一个叶子节点，实现为代码就是node->left == NULL && node->right == NULL\n  * 加上结束节点的值恰好等于期望的sum值，这里需要从根节点递归到叶子节点，每递归一个节点，sum值减去节点的val，直到减去最后的叶子节点恰好等于0，条件等价于 sum == node->val\n\n递归的设计：\n\n输入判空\n先把节点记录到path数组\n判断是否到达叶子节点，如果到达叶子节点，是否满足和值条件\n不是叶子节点就继续递归，直到递归到叶子节点为止。\n如果没有继续递归，也没有满足和值条件，那么从path数组中弹出这个节点\n\n\n\n/*\nstruct TreeNode {\n    int val;\n    struct TreeNode *left;\n    struct TreeNode *right;\n    TreeNode(int x) :\n            val(x), left(NULL), right(NULL) {\n    }\n};*/\nclass Solution {\npublic:\n    vector> res;\n    vector path;\n    void dfsFind(TreeNode* node, int sum) {\n        if (node == NULL) {\n            return;\n        }\n        path.push_back(node->val);        //path数组记录节点\n          // 判断是否为叶子节点，且满足和值条件\n        if (node->left == NULL && node->right == NULL && sum == node->val) {\n            res.push_back(path);\n        } else {    // 不是叶子节点，继续递归\n            if (node->left) {\n                dfsFind(node->left, sum - node->val);\n            }\n            if (node->right) {\n                dfsFind(node->right, sum - node->val);\n            }\n        }\n        path.pop_back();     //不能被递归，也不满足和值条件，就弹出该节点\n    }\n\n    vector > FindPath(TreeNode* root,int expectNumber) {\n        dfsFind(root, expectNumber);\n        return res;\n    }\n};\n\n"},"coding_practice/leetcode/resolution.html":{"url":"coding_practice/leetcode/resolution.html","title":"leetecode","keywords":"","body":"Leetcode 刷题\n陆续做了一些题，后续会把题解和思路记录在这里\n"}}}
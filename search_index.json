{"index":{"version":"0.5.12","fields":[{"name":"title","boost":10},{"name":"keywords","boost":15},{"name":"body","boost":1}],"ref":"url","documentStore":{"store":{"./":["introduct","欢迎来到主页"],"datastructure_and_algorithm/":["[","[x]","]","k","lru算法","n","todo:","top","两个有序的链表合并","个结点","优先级队列","删除链表倒数第","单链表反转","双向链表","堆的应用","循环链表","数据结构","数据结构与算法之美","数据结构和算法","整理链表相关知识点","极客时间","求","求中位数","求链表的中间结点","算法","约瑟夫环问题","跳表","链表","链表中环的检测"],"datastructure_and_algorithm/sort.html":["!=","&&","((hi","(int","(low","(下标从0开始)","(下标从1开始)",")","*arr,","+","//","//k是堆的元素个数，i是堆化的对象","//下标i从0开始，","//下沉堆化操作有些难以理解","//为了循环中","//为了循环中++i操作后，得到arr[i]","//初始化大顶堆","//原因是经过循环里的","//堆化操作的开始节点,用下标的方式寻找最大","//堆顶和最后一个元素进行交换","//对堆顶进行一次下沉堆化操作","//弹出堆顶元素，并堆化","//循环结束后一定是","//最后一个非叶子节点的下标怎么计算的？是一个证明题，暂且记住是len/2","//目标节点a[i]比两个子节点都大，直接返回","//移除最大元素","//返回的是切分值的坐标，目的就是把小的数丢到左边，大的数丢到右边，然后为pivot找个位置并返回坐标","//这个地方非常细节，为什么要arr[j]和arr[low]交换？","0","0);","0,","0;","0;i=","1","1)/2","1);","1.","1;","1，后面数字就是有序的","2.","3.快速排序","4.","5.归并排序","6.",";","=","==",">",">=","a[],","a[son])","a[son]);","arr[++i]","arr[],","arr[high]","arr[low+1]","arr[low];","aux,","aux[],","aux[len];","break;","bubble_sort(int","build_heap(arr,","build_heap(int","end1","end2","for(int","heap_sort(int","hi)","hi);","hi;","high)","high);","high){","high+1;","i)","i);","i;","i=","i=0;","if(2*i+1","insert_sort(int","int","j","j)","j;","j操作后，arr[j]右边的数组都比pivot大，arr[j]左边的数字逗比pivot小","j操作后，得到arr[j]","k","k,","key","len","len)","len);","len){","len,","len/2","lo)>>1)","lo,","lo;","low,","low;","maxpo","merge(arr,","merge(int","merge_sort(int","mid","mid);","mid+1,","mid,","pivot","quick_partial(arr,","quick_partial(int","quick_sort(arr,","quick_sort(arr,0,len","quick_sort(int","return","return;","select_sort(int","sink1(int","sink2(arr,","son;","sort(arr,","start1","start2","static","swap(a[i],","swap(arr[0],arr[k]);","swap(arr[i],arr[j]);","swap(arr[low],arr[j]);","temp;","void","while(1)","while(pivot","while(start1","while(true)","{","}","冒泡排序","初始化堆：将数组看成一个堆的结构，从后往前遍历非叶子节点，对每个叶子节点做下沉操作","删除堆顶元素：把堆顶元素与最后一个元素进行交换，再把数组临时长度n","堆化收敛：对执行一次下沉操作，即可保持堆的有序化","堆排序","堆排序（假设需要从小到大的堆排序）","堆的数据结构和特性","对应的位置就是pivot,","左子节点下标为2i+1，右子节点下标为2i+2，父亲节点下标为(i","思路1：先初始化大顶堆，然后循环==>(删除堆顶元素+堆化收敛)，直到堆空为止","排序","插入排序","此时的arr[j]","选择排序"],"datastructure_and_algorithm/list.html":["链表"],"datastructure_and_algorithm/code/":["2020.3.10","2020.3.27","[","[x]","]","add","bubl","heap","insert","merg","quick","review","select","sort","todo:","代码"],"uml_and_design_pattern/":["uml和设计模式"],"uml_and_design_pattern/UML.html":["a的关系，例如a是b，suv是汽车；猫是动物","b不知道a；","patterns.readthedocs.io/zh_cn/latest/read_uml.html#id2","uml的表示方法","uml笔记","与关联关系不同的是，它是一种临时性的关系，通常在运行期间产生，并且随着运行时的变化；","例如学生和学校，乘车人和车票；","依赖关系(dependency)","依赖关系也可能发生变化；","关联关系(association)","关联关系默认不强调方向，表示对象间相互知道；","参考来自：https://design","在最终代码中，依赖关系体现为类构造方法及类方法的传入参数，箭头的指向为调用关系；依赖关系除了临时知道对方外，还是“使用”对方的方法和属性；","如果特别强调方向，如下图，表示a知道b，但","它一般用来定义对象之间静态的、天然的结构；","它是一种静态关系，","实现关系(realize)","实现关系为实现抽象类（”车“就是c++中的抽象类，小汽车和自行车都是具体子类）","所以，关联关系是一种“强关联”的关系；","显然，依赖也有方向，双向依赖是一种非常糟糕的结构，我们总是应该保持单向依赖，杜绝双向依赖的产生；","泛化关系(generalization)","用一套带箭头的虚线表示，描述一个对象在运行期间会用到另一个对象的关系；","用实心菱形箭头的直线表示，表示a组成b，或者说b由a组成；","用实线+空心箭头表示","用带空心箭头的虚线表示","用带空心菱形箭头的直线表示，表示a聚合到b上，或者说b由a组成；","用带箭头的直线表示，用来描述不同类的对象之间的结构关系；","类之间的关系","组合关系(composition)","组合关系是强依赖的，b不存在以后a也不存在了，整体不存在了，部分也不存在了","聚合关系(aggregation)","聚合关系不是强依赖的，b不存在后a仍然可以存在，比如员工聚合成了部门，但部门不存在了以后员工仍然存在","表示i","通常与运行状态无关，一般由常识等因素决定的；"],"coding_practice/sword_offer/resolution.html":["!=","!=0)","%","&","&&","&a,","&arr,","&list)","&res,","&str,","(!phead)","(arr.size()","(cur","(cur)","(high","(int","(lo","(matrix.size()));","(node","(p","(p1","(p2","(proot","(root","(start","(从个位往高位分析)",")","*","*/","*=","*cur","*left;","*newcur","*newhead","*next,","*next,*cur;","*next;","*node","*p1,","*p;","*pre,","*proot)","*ptemp","*random;","*right;","+","+1","+=","+high*dight+digit","+high*dight+low*1","+high*digit","+low=4","/","/*","//","//1.第一次更新，复制节点","//2.第二次遍历，更新random指针","//3.","//begin位置","//path数组记录节点","//不能被递归，也不满足和值条件，就弹出该节点","//中序遍历，并把节点存储到数组中","//分治递归检查","//压入一个，尝试弹出一次，如果最后能够全部弹出，就说明是弹出序列","//把数组中的节点处理成双向链表","//拆分步骤需要思考：其实就是依次更新原链表和新链表的next指针，然后再迭代遍历链表","//最后一次循环的边界条件，避免访问空指针","//用于辅助做剪枝","//第一个节点的后继指向第二个节点","//第二个节点的前驱指向第一个节点","//该条件说明数组遍历结束，符合有序","//递归算法","/=","0","0)","0);","0,","0;","1","1)","1);","1,","1,2,1,","1,2,1]","1.","1.搜索路径，应该想到是一个dfs问题，递归处理","1.遍历第一遍，在原始链表的每个节点后面插入一个新的节点","10","10,11,12,...,19,20","100","1000","10;","10==>","11","11,12,13,14","12","13","14","15","16","1:","1;","1]","1]&","1];","1]>0时","1个数的最大值","1，此时应当把字符串存起来；","1：","1；票数减到0就说明干掉这个数字了，让新的数字上任：","1～n整数中1出现的次数","2","2,","2,1,","2.","2.边界条件的考虑：路径符合题意的话需要满足","2.遍历第二遍，用random指针来遍历，将每个节点的后继节点的random指向本节点random节点的next；","23","234","2345","23456，分解成高位high=234","2]","2：","3","3,","3,4,","3.","3.拆分链表，其实就是依次更新原链表和新链表的next指针，然后再迭代遍历链表；注意边界条件，不要访问到空指针","38","38.字符串的排列","39.","4","4,","40.","41.数据流中的中位数","42.","456","4矩阵：","5","5,","5,4]","56","6","6。","7","8","9",":",";","=","=234个1","==","==0)","==>",">",">=",">label);",">left",">left)",">left);",">left,",">left,list);",">left;",">next",">next)",">next;",">random",">random)",">right",">right)",">right);",">right,",">right,list);",">right;",">val",">val)",">val);",">val){","[","[0,1,2,1],","[1,","[2,1]","[3,2,1],","[4,","[toc]","\\","a[","a[end])","a[end];);","abcd，a分别和b,c,d交换，这是第一层递归；固定a，用b依次与c,d交换，这是第二次递归；固定ab，用c和d交换，这是第三次递归；轮到d时，d的下标就是长度n","arr","arr,","arr.size()","arr[i])","arr[j]","arr[lo];","begin)","begin;","bool","break;","by/","chuan","class","clone(randomlistnode*","cn.com/problems/lian","cn.com/problems/numb","cn.com/problems/zi","convert(p","convert(prootoftree,","convert(treenode*","copy(matrix);","copy[0].size()","countdigitone(int","cur","cur*dight;","cur;","cur=0时，无影响，不加1；","cur=1时，还要考虑low位的影响，有low+1个1（从0数到low）；","cur==0:","cur==1:","cur>1时，考虑10，11，12，...，19","cur>1：","da","de","dfs+回溯+剪枝","dfsfind(nod","dfsfind(root,","dfsfind(treenode*","dfs的剪枝可以用一个set辅助来做，如abbcd，用下标为1的b依次与bcd交换时，和自己相同的b就不做交换","dight","digit","digit;","digit从个位开始","dp(nums.size(),0);","dp[0]","dp[i","dp[i]","dp[i];","end","end)","end;","expectnumber)","expectnumber);","fa","false;","findpath(treenode*","for(int","for(pivot","fu","getleastnumbers(vector&","hash;","hassubtree(proot1","hassubtree(treenode*","head","head;","help_set;","helper(res,","helper(vector","hi)","hi);","hi+1;","high","high%10","high*digit","high*digit;","high/10","https://leetcod","hui","i)","i=1;ileft","if(!res)","if(a[i]","if(arr.size()","if(begin","if(cur","if(dp[i","if(i","if(newcur","if(p","if(p1","if(proot1","if(prootoftre","if(s_min.empty()","if(sequence.size()==0)","int","isbst(a,","isbst(sequence,","isbst(vector","ispoporder(vector","issubtree(p1","issubtree(proot1,proot2);","issubtree(treenod","j","j)","j+1,","j;","k","k)","label(x),","label;","lcof","lcof/solution/mian","left(null),","len","len/2)","lie","line.front();","line.pop();","line.push(p","line.push(root);","line;","list)","list);","list.push_back(p);","list;","list[0];","listnod","listnode(int","listnode*","lo","lo,","long","low","m","major","majorityelement(vector&","matrix)","matrix[0].size()","max","max)","max;","mirror(proot","mirror(treenod","n","n%10,","n)","n/10,","new","newcur","newhead;","next","next(null)","next(null),","next;","node","node,","node;","null","null)","null;","num","nums)","nums.size();","nums[0];","nums[i]+dp[i","nums[i];","o(nlogk)","o(nlogn)","one/","p","p,","p2","p2)","pai","partition(arr,","partition(vector","path.pop_back();","path.push_back(nod","path;","permutation(str","phead","phead)","phead;","pivot","pivot)","pivot);","pivot+1,","pivot;","pivot]","popv)","pre","pre;","printfromtoptobottom(treenode*","printmatrix(vector","priority_queu","processlist(list);","processlist(vector","proot","proot1,","proot2","proot2)","proot2);","prootoftree)","ptemp;","public:","push(int","pushv,vector","que.pop();","que.push(arr[i]);","que;","queue","quick_sort(arr,","random(null)","randomlistnod","randomlistnode(cur","randomlistnode(int","randomlistnode*","re","res(matrix[0].size(),","res.end());","res.push_back(p","res.push_back(path);","res.push_back(str);","res;","return","return;","reverselist(listnode*","right(null)","root)","root,int","rotate(vector","s)","s,","s.push(value);","s;","s_min;","sequence)","sequence.size()","set","shi","shu","solut","sort(res.begin(),","stack","start,","str.length())","string","struct","su","sum","sum)","swap(arr[i],arr[j]);","swap(arr[lo],arr[j]);","temp;","ti","todo","treenod","treenode(int","treenode*","true;","unordered_map","val(x),","val;","valu","value)","vector","vector>","verifysquenceofbst(vector","void","vote","while(!line.empty())","while(++i","while(copy.size()","while(true)","x","x)","xu","zi","zu","zui","{","||","}","};","};*/","一个数字分成三部分：高位high，","不是叶子节点就继续递归，直到递归到叶子节点为止。","不是叶子节点，继续递归","个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。","为什么high和cur都为0才是边界条件","为什么加1?","为什么加digit？","为什么加low?","二叉搜索树与双向链表","二叉搜索树的后序遍历序列","二叉树中和为某一值的路径","二叉树的镜像","二叉树的镜像定义：源二叉树","从上往下打印出二叉树的每个节点，同层节点从左至右打印。","从个位到高位逐位分析：例如","以后做题遇到计数类的题目还是不要用dp了；","但是指针的指向关系是原始链表的指向关系，复制到新链表的话还是指向原始链表；","位因子digit=1","位因子digit=10的x次方","低位依赖高位！所以先处理低位再处理高位：","你可以假设数组是非空的，并且给定的数组总是存在多数元素。","例如，输入12，1～12这些整数中包含1","依次从数组中取出二叉树的节点串成双向链表","先对二叉树进行中序遍历，把中序遍历的结果存储到一个数组中，","先把节点记录到path数组","分析cur=1时已经覆盖该情况；","分析cur位的影响：","分析high位的影响：","分析low位影响：","分析每位出现1的次数，依次从个位分析到高位","则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.","判断是否为叶子节点，且满足和值条件","判断是否到达叶子节点，如果到达叶子节点，是否满足和值条件","前面求和是正贡献，加起来","剑指offer","加上结束节点的值恰好等于期望的sum值，这里需要从根节点递归到叶子节点，每递归一个节点，sum值减去节点的val，直到减去最后的叶子节点恰好等于0，条件等价于","动态规划题","包含min函数的栈","即","反转链表","只有10个","只有high和cur同时为0时，才会使low覆盖到最高位","可以看看注释里的状态转移方程表示了递推关系，从正贡献和负贡献的角度去思考：","哈希法，找到出现数组长度二分之一的数字就返回","回忆一下动态规划三要素：","因为不满足最优子结构条件,","在返回值的list中，数组长度大的数组靠前)","复杂链表的复制","如何迭代：","如果没有继续递归，也没有满足和值条件，那么从path数组中弹出这个节点","子问题：第i个数对应状态的最大值，需要累加第i","定义栈的数据结构，请在该类型中实现一个能够得到栈中所含最小元素的min函数（时间复杂度应为o（1））。","实际上是通过跟踪旧链表random的指向来更新新链表的random指针","对应到该题中：","寻找切分点，从后往前寻找","左子树+右子树+根节点","当前位cur=5","当前位cur，低位low，","快排","思路：从头开始，用一个元素依次和字符串的每个元素交换，比如","思路：初始化一个大小为k的优先队列（大顶堆），然后遍历数组，比堆顶小的数就入堆，数组遍历结束后，堆里的k个数字就是最小的k个数字","我的理解是：逐个比较，遇到和自己相同的票数+1，遇到和自己不同的票数","或者","所以有三个逻辑处理分支：","操作给定的二叉树，将其变换为源二叉树的镜像。","数组中出现次数超过一半的数字","数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。","数组长度n*堆的删除插入logk","无后效型可以理解为动态规划表中只关注第i个数字之前的表项，而和第i个数字之后的没关系","无后效性（求解下一个状态只依赖前一个状态），","无论如何都会有234\\*digit","最优子结构就是找到累加起来的最大值；","最优子结构（最优解就是一个子问题）","最低位low=6","最后琢磨一个小时做不出来还是看了题解，看题解都费很大劲，思路各异；我选择推荐题解来理解一下，也算是做这种题目的一种思路吧！","最后返回一个排序的双向链表，因此：","最小的k个数","有缘再续，做到现在感觉做了后面的忘了前面的，接下来我想分类刷题4个月看看效果如何","本题是一个dfs算法题，每层递归处理一个字符，字符串的长度就是递归的层数，可以画一棵多叉树来分析。递归的遍历情况可以画一个树来表示，leetcode的题解有图，可以看看","来源：力扣（leetcode）","栈的压入、弹出序列","树的子结构","检查前半段数字是否都是符合小于根节点","每个阶段/状态：数组中从第i个数往前累加取得最大值的状态，只需记录最大值，无需记录其实下标","注意：保证测试中不会当栈为空的时候，对栈调用pop()或者min()或者top()方法。","状态转移方程:","的和最大，为","的数字有1、10、11和12，1一共出现了5次。","示例","示例1:","第三次遍历，拆分链表","结束节点是一个叶子节点，实现为代码就是node","结构：","而是计数为主;","肯定要直接算上10个1；","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","要求时间复杂度为o(n)。","解决思路：","解决方法1：","解法1：","解法2：堆","解法2：摩尔投票法：核心思想就是投票，出现相同的加票，出现不同的减票","解法：","解法：动态规划解决这道题目","解释:","输入:","输入一个复杂链表（每个节点中有节点值，以及两个指针，一个指向下一个节点，另一个特殊指针指向任意一个节点），返回结果为复制后复杂链表的head。（注意，输出结果中请不要返回参数中的节点引用，否则判题程序会直接返回空）","输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串abc,则打印出由字符a,b,c所能排列出来的所有字符串abc,acb,bac,bca,cab和cba。","输入一个整型数组，数组里有正数也有负数。数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。","输入一个整数","输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。如果是则输出yes,否则输出no。假设输入的数组的任意两个数字都互不相同。","输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，例如，如果输入如下4","输入一个链表，反转链表后，输出新链表的表头","输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。","输入一颗二叉树的根节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。(注意:","输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，序列4,5,3,2,1是该压栈序列对应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列。（注意：这两个序列的长度是相等的）","输入两棵二叉树a，b，判断b是不是a的子结构。（ps：我们约定空树不是任意一个树的子结构）","输入判空","输入描述:","输入整数数组","输入：arr","输入：n","输出:","输出：5","输出：6","输出：[0]","输出：[1,2]","边界条件：","连续子数组","连续子数组的最大和","递归的设计：","重复子问题就是动态规划表的每一次求值，可能会依赖前一个表项的值","重复子问题（后续子问题的求解，需要重复求解前面子问题的解）","链接：https://leetcod","镜像二叉树","限制：","面试题43.","顺时针打印矩阵","题解：","首先想到的办法是直接遍历一遍，把指针关系记录下来，复制的时候再把指针关系恢复上去；","首先排除暴力搜索，已验证会超时；这种题看起来像是dp可以做的题，但实际上并太好用dp去做,","，找出其中最小的","，求1～n这n个整数的十进制表示中1出现的次数。"],"coding_practice/leetcode/resolution.html":["!=","&&","'c'","'c'))","'c')re","'d')re","'d'||s[i+1]","'i'","'l')re","'l'||s[i+1]","'m'))","'m')re","'v'","'v')re","'x'","'x'))","'x')re","(cur","(p1","(pre","(s[i+1]","*","*/","*=","*cur","*cur,","*head)","*next;","*p1","*p1=head,","*p2","*p2=head","*pre","*prev,","*tmp;","+","++i)","+=","/**","//","//交换","//依次存储各个位置上的数字","//初始化：","//判断是否可以后移","//判断是否有环","//操作节点","//操作节点的前驱","//操作节点的后继","//注意，有几位数字，bcount就有几个0","//第一步先保存后边未操作的链表，因为要对cur","//第三步prev指针后移","//第二步就是将当前节点从“向后指”改变为“向前指”；","//第四步cur指针后移","//继续走读","//需要处理所有节点，但要判断第一个和第二个节点","/=","0;","0;i","1","1.","10","100","1000","1000;","100;","10;","13.","141.","17","170","175","1750","1753","1:","1;","2.然后让快慢指针后移，快指针后移两个，慢指针后移一个，不过移动之前需要检查条件，免得指针指空，但是如果指针可以指空那就说明没有环","206.","24.","26.","27.","2:","3","35.","400;","40;","4;","5","50","500","500;","50;","5;","7","7.","9.","900;","90;","9;",":","=","==",">next",">next)",">next,",">next;",">next;p2",">next先保存两个节点，然后交换他们p1",">next动手脚，所以先保存下来",">next就搞定了，但是对于前面的节点而言，需要先让它指向p2：pr",">next指向prev，也就是第二步。但是需要考虑一下几点：",">next；","[toc]","array","array/","bcount","bcount/10;","bool","c","cache.push_back(x%10);","cache;","class","continue;","cur","cur,","cur;","d","definit","duplic","element","false;","for(int","hascycle(listnod","hash;","head","head)","head;","head；","https://leetcode.com/problems/remov","https://leetcode.com/problems/two","i++;","i=0;","i=0;i","if(head","if(nums.empty()){","if(nums.size()==0)","if(nums[mid]","if(s[i+1]","if(s[i]","if(x","int","int_max","ispalindrome(int","j","j=0;","j=1;j","l","leetcod","leetecod","left","link","list.","listnod","listnode(int","listnode*","long","m","map;","map['c']","map['d']","map['i']","map['l']","map['m']","map['v']","map['x']","map[s[i]];","mid","mid;","next(null)","note","null","null)","null;","null；","nums)","nums,","nums.end()),nums.end());","nums.end());","nums.end(),","nums.erase(std::remove(nums.begin(),nums.end(),val),","nums.erase(std::unique(nums.begin(),","nums.size()","nums.size();","oth","p1","p1,","p1;","p1=cur,p2","p2","p2)","p2,","p2;","p2，然后再让前面的几点pre=p1","pre","prev","prev;","prev这一步ok以后才算大功告成，","pre用来衔接前驱，p1和p2用来交换操作，cur用来走读链表","public:","re","remov","removeduplicates(vector&","removeelement(vector&","res;","resolut","return","reverse(int","reverselist(listnode*","right","romantoint(str","s)","s.length();","s[i+1]","searchinsert(vector&","singli","solut","sort","std::distance(nums.begin(),","std::remov","std::remove(nums.begin(),","std::remove）","std:unique删除重复元素","struct","sum/","swappairs(listnode*","target)","tmp","tmp;","true;","twosum(vector&","unordered_map","v","val(x),","val)","val));","val;","vector","while(left","while(p1","while(tmp)","while(x)","x","x)","y","{","{}","||","}","};","两两交换链表中的数字","两个下标（减法结果值下标，轮询值下标）","两数之和","为什么要让前面的节点这样做呢？p1和p2交换了位置，所以pre必须指向p2；而p1指向的又是后面两个新的可迭代处理的节点，所以需要pre当然是后面两个节点的pre；","二分查找，但是边界条件需要非常仔细地考虑清楚","例如输入3571，需要对比1753，那怎么构造呢？","依次fanzhuan","依次将数字乘以位数后翻转","关键是前面的节点和后面的节点怎么维护呢？实际上后面的节点p1","分别有两种解法，迭代和递归","初始化的时候就得做了，在循环里是不太好操作的","判断依据是快指针和慢指针","双指针法","反转链表需要使用三个临时变量来解决","回文数判断","处理思路的关注点是将cur","字符","存储每个位的数字","实际上是利用数学归纳法来做","循环体：","快慢指针还是不错的","搜索插入位置","数值","整数翻转","暴力搜索法","检查是否溢出","然后","环形链表","第一遍哈希表，key作为数组值，value作为数组下标","第二遍哈希表，根据目标做减法，减法所得值在哈希表中查询o(1)，如果有就返回","罗马数字转整数","考虑循环结束时候的边界条件，注意是cur—>next","考虑链表丢失的问题先存个tmp","考虑需要依次处理整个链表，所以prev和tmp节点都需要往后滑动","解法1:","解法2:","解法2：两遍哈希表","这个没什么难的","迭代：4个指针来操作，pre,","链表反转","首先需要稳妥地把head保存为head","（std::distanc","（std::vector::eras","）"]},"length":9},"tokenStore":{"root":{"0":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.006540222367560497}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.016025641025641024},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.009810333551340745},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0110803324099723}},"i":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"=":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"1":{"0":{"0":{"0":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}},",":{"1":{"1":{"docs":{},",":{"1":{"2":{"docs":{},",":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},",":{"1":{"9":{"docs":{},",":{"2":{"0":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}}},"=":{"docs":{},"=":{"docs":{},">":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"1":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}},",":{"1":{"2":{"docs":{},",":{"1":{"3":{"docs":{},",":{"1":{"4":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"2":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"3":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},".":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"4":{"1":{"docs":{},".":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"5":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"6":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"7":{"0":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"5":{"0":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"3":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"/":{"2":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"docs":{}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.009615384615384616},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}}}},".":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"搜":{"docs":{},"索":{"docs":{},"路":{"docs":{},"径":{"docs":{},"，":{"docs":{},"应":{"docs":{},"该":{"docs":{},"想":{"docs":{},"到":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"问":{"docs":{},"题":{"docs":{},"，":{"docs":{},"递":{"docs":{},"归":{"docs":{},"处":{"docs":{},"理":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"第":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"在":{"docs":{},"原":{"docs":{},"始":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"后":{"docs":{},"面":{"docs":{},"插":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.009615384615384616},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.00554016620498615}}},"，":{"docs":{},"后":{"docs":{},"面":{"docs":{},"数":{"docs":{},"字":{"docs":{},"就":{"docs":{},"是":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}},"此":{"docs":{},"时":{"docs":{},"应":{"docs":{},"当":{"docs":{},"把":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"存":{"docs":{},"起":{"docs":{},"来":{"docs":{},"；":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}},",":{"2":{"docs":{},",":{"1":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},"&":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},">":{"0":{"docs":{},"时":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}}},"个":{"docs":{},"数":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"；":{"docs":{},"票":{"docs":{},"数":{"docs":{},"减":{"docs":{},"到":{"0":{"docs":{},"就":{"docs":{},"说":{"docs":{},"明":{"docs":{},"干":{"docs":{},"掉":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"了":{"docs":{},"，":{"docs":{},"让":{"docs":{},"新":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"上":{"docs":{},"任":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}},"～":{"docs":{},"n":{"docs":{},"整":{"docs":{},"数":{"docs":{},"中":{"1":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"docs":{}}}}}}},"2":{"0":{"2":{"0":{"docs":{},".":{"3":{"docs":{},".":{"1":{"0":{"docs":{"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.0392156862745098}}},"docs":{}},"2":{"7":{"docs":{"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.0196078431372549}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"6":{"docs":{},".":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{}},"3":{"4":{"5":{"6":{"docs":{},"，":{"docs":{},"分":{"docs":{},"解":{"docs":{},"成":{"docs":{},"高":{"docs":{},"位":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"=":{"2":{"3":{"4":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}},"docs":{}},"docs":{}}}}}}}}}}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"4":{"docs":{},".":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"6":{"docs":{},".":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"7":{"docs":{},".":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}},".":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"边":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{},"的":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"：":{"docs":{},"路":{"docs":{},"径":{"docs":{},"符":{"docs":{},"合":{"docs":{},"题":{"docs":{},"意":{"docs":{},"的":{"docs":{},"话":{"docs":{},"需":{"docs":{},"要":{"docs":{},"满":{"docs":{},"足":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}},"遍":{"docs":{},"历":{"docs":{},"第":{"docs":{},"二":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"用":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{},"来":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"将":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"后":{"docs":{},"继":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"向":{"docs":{},"本":{"docs":{},"节":{"docs":{},"点":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"；":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"然":{"docs":{},"后":{"docs":{},"让":{"docs":{},"快":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"后":{"docs":{},"移":{"docs":{},"，":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"后":{"docs":{},"移":{"docs":{},"两":{"docs":{},"个":{"docs":{},"，":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"后":{"docs":{},"移":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"不":{"docs":{},"过":{"docs":{},"移":{"docs":{},"动":{"docs":{},"之":{"docs":{},"前":{"docs":{},"需":{"docs":{},"要":{"docs":{},"检":{"docs":{},"查":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"免":{"docs":{},"得":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"空":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"如":{"docs":{},"果":{"docs":{},"指":{"docs":{},"针":{"docs":{},"可":{"docs":{},"以":{"docs":{},"指":{"docs":{},"空":{"docs":{},"那":{"docs":{},"就":{"docs":{},"说":{"docs":{},"明":{"docs":{},"没":{"docs":{},"有":{"docs":{},"环":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"1":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}}},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},":":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}},"3":{"5":{"docs":{},".":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"8":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},".":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"排":{"docs":{},"列":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}},"9":{"docs":{},".":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},".":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"快":{"docs":{},"速":{"docs":{},"排":{"docs":{},"序":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"拆":{"docs":{},"分":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"依":{"docs":{},"次":{"docs":{},"更":{"docs":{},"新":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"和":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{},"；":{"docs":{},"注":{"docs":{},"意":{"docs":{},"边":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"不":{"docs":{},"要":{"docs":{},"访":{"docs":{},"问":{"docs":{},"到":{"docs":{},"空":{"docs":{},"指":{"docs":{},"针":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},",":{"4":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"4":{"0":{"0":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{},".":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"1":{"docs":{},".":{"docs":{},"数":{"docs":{},"据":{"docs":{},"流":{"docs":{},"中":{"docs":{},"的":{"docs":{},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"5":{"6":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},".":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"矩":{"docs":{},"阵":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"5":{"0":{"0":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"6":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}},".":{"docs":{},"归":{"docs":{},"并":{"docs":{},"排":{"docs":{},"序":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}},",":{"4":{"docs":{},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"6":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.003924133420536298}},".":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"7":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},".":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"8":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}}},"9":{"0":{"0":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}},".":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.09615384615384616},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.020274689339437543},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.03185595567867036}},"r":{"docs":{},"o":{"docs":{},"d":{"docs":{},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"./":{"ref":"./","tf":10}}}}}}}},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"x":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.0392156862745098}},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}},")":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"=":{"0":{"docs":{},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"i":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}},"1":{"docs":{},";":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"f":{"docs":{},"(":{"2":{"docs":{},"*":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"docs":{}}}}},"docs":{},"!":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}}}},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},"{":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{}}}}}}}}}},"[":{"docs":{},"m":{"docs":{},"i":{"docs":{},"d":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}},"p":{"1":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},"s":{"docs":{},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},"=":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}}}}}}}}}}}}}}}}},"[":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.008310249307479225}}}},"docs":{}},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}},"x":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"s":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}},"s":{"docs":{},"e":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"1":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"2":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"docs":{}}}}}}}},"docs":{}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}}}}}},"欢":{"docs":{},"迎":{"docs":{},"来":{"docs":{},"到":{"docs":{},"主":{"docs":{},"页":{"docs":{"./":{"ref":"./","tf":1}}}}}}}},"[":{"0":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"1":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}}},"3":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},"]":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"docs":{}}},"docs":{}}},"4":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.10256410256410256},"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.0784313725490196},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"x":{"docs":{},"]":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.10256410256410256},"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.1568627450980392}}}},"t":{"docs":{},"o":{"docs":{},"c":{"docs":{},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"]":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.10256410256410256},"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.0784313725490196}}},"k":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564},"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.009615384615384616},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.01282051282051282}}},"e":{"docs":{},"y":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}},"l":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"r":{"docs":{},"u":{"docs":{},"算":{"docs":{},"法":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}}},"e":{"docs":{},"n":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.009615384615384616},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},")":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.016025641025641024}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"{":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641}}}},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"/":{"2":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}}},"f":{"docs":{},"t":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}}}}}}}}}}},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"e":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":10}}}}}}}}},"o":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},")":{"docs":{},">":{"docs":{},">":{"1":{"docs":{},")":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},"docs":{}}}},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.01282051282051282},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641}}},"w":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.003924133420536298}},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.01282051282051282}}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},"n":{"docs":{},"g":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"c":{"docs":{},"o":{"docs":{},"f":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"/":{"docs":{},"s":{"docs":{},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"/":{"docs":{},"m":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"p":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"k":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},".":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"p":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"docs":{}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.013850415512465374}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}}}}}}},"n":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},"%":{"1":{"0":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}},"docs":{}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"/":{"1":{"0":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}},"docs":{}},"e":{"docs":{},"w":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}}}}},"x":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.006540222367560497}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"t":{"docs":{},"e":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007194244604316547},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}},"；":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}},"m":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"s":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{},"e":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},")":{"docs":{},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},"+":{"docs":{},"d":{"docs":{},"p":{"docs":{},"[":{"docs":{},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.008310249307479225}}}}}}},"t":{"docs":{},"o":{"docs":{},"d":{"docs":{},"o":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},":":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564},"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.0196078431372549}}}}},"p":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}}},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.012426422498364944}},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}}}}}},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}}}}}}}}},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"a":{"docs":{},"r":{"docs":{},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},")":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.00554016620498615}}}}}}}},"m":{"docs":{},"p":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.00554016620498615}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"w":{"docs":{},"o":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"有":{"docs":{},"序":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"合":{"docs":{},"并":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}}}}}},"下":{"docs":{},"标":{"docs":{},"（":{"docs":{},"减":{"docs":{},"法":{"docs":{},"结":{"docs":{},"果":{"docs":{},"值":{"docs":{},"下":{"docs":{},"标":{"docs":{},"，":{"docs":{},"轮":{"docs":{},"询":{"docs":{},"值":{"docs":{},"下":{"docs":{},"标":{"docs":{},"）":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"交":{"docs":{},"换":{"docs":{},"链":{"docs":{},"表":{"docs":{},"中":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}},"数":{"docs":{},"之":{"docs":{},"和":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"个":{"docs":{},"结":{"docs":{},"点":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}},"数":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"输":{"docs":{},"入":{"4":{"docs":{},"、":{"5":{"docs":{},"、":{"1":{"docs":{},"、":{"6":{"docs":{},"、":{"2":{"docs":{},"、":{"7":{"docs":{},"、":{"3":{"docs":{},"、":{"8":{"docs":{},"这":{"8":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"则":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"4":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"1":{"docs":{},"、":{"2":{"docs":{},"、":{"3":{"docs":{},"、":{"4":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}},"docs":{}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}},"优":{"docs":{},"先":{"docs":{},"级":{"docs":{},"队":{"docs":{},"列":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}}}},"删":{"docs":{},"除":{"docs":{},"链":{"docs":{},"表":{"docs":{},"倒":{"docs":{},"数":{"docs":{},"第":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}}}},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"：":{"docs":{},"把":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"与":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"再":{"docs":{},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"临":{"docs":{},"时":{"docs":{},"长":{"docs":{},"度":{"docs":{},"n":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"单":{"docs":{},"链":{"docs":{},"表":{"docs":{},"反":{"docs":{},"转":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}}}},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}},"指":{"docs":{},"针":{"docs":{},"法":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}},"堆":{"docs":{},"的":{"docs":{},"应":{"docs":{},"用":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"和":{"docs":{},"特":{"docs":{},"性":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}},"化":{"docs":{},"收":{"docs":{},"敛":{"docs":{},"：":{"docs":{},"对":{"docs":{},"执":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"下":{"docs":{},"沉":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"即":{"docs":{},"可":{"docs":{},"保":{"docs":{},"持":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"有":{"docs":{},"序":{"docs":{},"化":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}},"（":{"docs":{},"假":{"docs":{},"设":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"小":{"docs":{},"到":{"docs":{},"大":{"docs":{},"的":{"docs":{},"堆":{"docs":{},"排":{"docs":{},"序":{"docs":{},"）":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"链":{"docs":{},"表":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}},"体":{"docs":{},"：":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}},"与":{"docs":{},"算":{"docs":{},"法":{"docs":{},"之":{"docs":{},"美":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}}}},"和":{"docs":{},"算":{"docs":{},"法":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":10.025641025641026}}}}}}}},"组":{"docs":{},"中":{"docs":{},"出":{"docs":{},"现":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"一":{"docs":{},"半":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}},"有":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"超":{"docs":{},"过":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"的":{"docs":{},"一":{"docs":{},"半":{"docs":{},"，":{"docs":{},"请":{"docs":{},"找":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"长":{"docs":{},"度":{"docs":{},"n":{"docs":{},"*":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"删":{"docs":{},"除":{"docs":{},"插":{"docs":{},"入":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"k":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}},"值":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"整":{"docs":{},"理":{"docs":{},"链":{"docs":{},"表":{"docs":{},"相":{"docs":{},"关":{"docs":{},"知":{"docs":{},"识":{"docs":{},"点":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}}}}}}},"数":{"docs":{},"翻":{"docs":{},"转":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"极":{"docs":{},"客":{"docs":{},"时":{"docs":{},"间":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}}},"求":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}},"中":{"docs":{},"位":{"docs":{},"数":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"中":{"docs":{},"间":{"docs":{},"结":{"docs":{},"点":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}}}}}}},"算":{"docs":{},"法":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}},"约":{"docs":{},"瑟":{"docs":{},"夫":{"docs":{},"环":{"docs":{},"问":{"docs":{},"题":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}}}}},"跳":{"docs":{},"表":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}},"链":{"docs":{},"表":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.05128205128205128},"datastructure_and_algorithm/list.html":{"ref":"datastructure_and_algorithm/list.html","tf":11}},"中":{"docs":{},"环":{"docs":{},"的":{"docs":{},"检":{"docs":{},"测":{"docs":{"datastructure_and_algorithm/":{"ref":"datastructure_and_algorithm/","tf":0.02564102564102564}}}}}}},"反":{"docs":{},"转":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"接":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}},"!":{"docs":{},"=":{"0":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007848266841072597},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}},"&":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"&":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.005886200130804447},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.009695290858725761}}},"a":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"(":{"docs":{},"(":{"docs":{},"h":{"docs":{},"i":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}}}}},"l":{"docs":{},"o":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"w":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}},"下":{"docs":{},"标":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},")":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"1":{"docs":{},"开":{"docs":{},"始":{"docs":{},")":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"docs":{}}}},"!":{"docs":{},"p":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}}}}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}}}}}},"p":{"1":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}},"2":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}}}}},"e":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"[":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}}}},"docs":{}}}}},"从":{"docs":{},"个":{"docs":{},"位":{"docs":{},"往":{"docs":{},"高":{"docs":{},"位":{"docs":{},"分":{"docs":{},"析":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},")":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.009615384615384616},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.003924133420536298},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.01662049861495845}},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"/":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}},"=":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}}}}}}},"n":{"docs":{},"e":{"docs":{},"w":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"x":{"docs":{},"t":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"*":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}}},"p":{"1":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"=":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}},"2":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"=":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}},"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"r":{"docs":{},"e":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"v":{"docs":{},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},")":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"+":{"1":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.006925207756232687}},"=":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.009695290858725761}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"*":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},"+":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"*":{"1":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}}}}}}}},"i":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"4":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}}}}},"+":{"docs":{},"i":{"docs":{},")":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"/":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.003924133420536298}},"/":{"1":{"docs":{},".":{"docs":{},"第":{"docs":{},"一":{"docs":{},"次":{"docs":{},"更":{"docs":{},"新":{"docs":{},"，":{"docs":{},"复":{"docs":{},"制":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},"2":{"docs":{},".":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"更":{"docs":{},"新":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}},"3":{"docs":{},".":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.009810333551340745},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"k":{"docs":{},"是":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"元":{"docs":{},"素":{"docs":{},"个":{"docs":{},"数":{"docs":{},"，":{"docs":{},"i":{"docs":{},"是":{"docs":{},"堆":{"docs":{},"化":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}},"下":{"docs":{},"标":{"docs":{},"i":{"docs":{},"从":{"0":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"docs":{}}}},"沉":{"docs":{},"堆":{"docs":{},"化":{"docs":{},"操":{"docs":{},"作":{"docs":{},"有":{"docs":{},"些":{"docs":{},"难":{"docs":{},"以":{"docs":{},"理":{"docs":{},"解":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}},"为":{"docs":{},"了":{"docs":{},"循":{"docs":{},"环":{"docs":{},"中":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{},"操":{"docs":{},"作":{"docs":{},"后":{"docs":{},"，":{"docs":{},"得":{"docs":{},"到":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"大":{"docs":{},"顶":{"docs":{},"堆":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641}}}}},"：":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"原":{"docs":{},"因":{"docs":{},"是":{"docs":{},"经":{"docs":{},"过":{"docs":{},"循":{"docs":{},"环":{"docs":{},"里":{"docs":{},"的":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}},"堆":{"docs":{},"化":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"开":{"docs":{},"始":{"docs":{},"节":{"docs":{},"点":{"docs":{},",":{"docs":{},"用":{"docs":{},"下":{"docs":{},"标":{"docs":{},"的":{"docs":{},"方":{"docs":{},"式":{"docs":{},"寻":{"docs":{},"找":{"docs":{},"最":{"docs":{},"大":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}},"顶":{"docs":{},"和":{"docs":{},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"进":{"docs":{},"行":{"docs":{},"交":{"docs":{},"换":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}},"对":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"进":{"docs":{},"行":{"docs":{},"一":{"docs":{},"次":{"docs":{},"下":{"docs":{},"沉":{"docs":{},"堆":{"docs":{},"化":{"docs":{},"操":{"docs":{},"作":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}},"弹":{"docs":{},"出":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"，":{"docs":{},"并":{"docs":{},"堆":{"docs":{},"化":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}},"循":{"docs":{},"环":{"docs":{},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"一":{"docs":{},"定":{"docs":{},"是":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}},"最":{"docs":{},"后":{"docs":{},"一":{"docs":{},"个":{"docs":{},"非":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"计":{"docs":{},"算":{"docs":{},"的":{"docs":{},"？":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"证":{"docs":{},"明":{"docs":{},"题":{"docs":{},"，":{"docs":{},"暂":{"docs":{},"且":{"docs":{},"记":{"docs":{},"住":{"docs":{},"是":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"/":{"2":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"次":{"docs":{},"循":{"docs":{},"环":{"docs":{},"的":{"docs":{},"边":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"避":{"docs":{},"免":{"docs":{},"访":{"docs":{},"问":{"docs":{},"空":{"docs":{},"指":{"docs":{},"针":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}},"目":{"docs":{},"标":{"docs":{},"节":{"docs":{},"点":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"比":{"docs":{},"两":{"docs":{},"个":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"大":{"docs":{},"，":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}},"移":{"docs":{},"除":{"docs":{},"最":{"docs":{},"大":{"docs":{},"元":{"docs":{},"素":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}},"返":{"docs":{},"回":{"docs":{},"的":{"docs":{},"是":{"docs":{},"切":{"docs":{},"分":{"docs":{},"值":{"docs":{},"的":{"docs":{},"坐":{"docs":{},"标":{"docs":{},"，":{"docs":{},"目":{"docs":{},"的":{"docs":{},"就":{"docs":{},"是":{"docs":{},"把":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"丢":{"docs":{},"到":{"docs":{},"左":{"docs":{},"边":{"docs":{},"，":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"丢":{"docs":{},"到":{"docs":{},"右":{"docs":{},"边":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"为":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"找":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"并":{"docs":{},"返":{"docs":{},"回":{"docs":{},"坐":{"docs":{},"标":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"地":{"docs":{},"方":{"docs":{},"非":{"docs":{},"常":{"docs":{},"细":{"docs":{},"节":{"docs":{},"，":{"docs":{},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"要":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"和":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},"交":{"docs":{},"换":{"docs":{},"？":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"位":{"docs":{},"置":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"数":{"docs":{},"组":{"docs":{},"记":{"docs":{},"录":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},"不":{"docs":{},"能":{"docs":{},"被":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"也":{"docs":{},"不":{"docs":{},"满":{"docs":{},"足":{"docs":{},"和":{"docs":{},"值":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"就":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"该":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"并":{"docs":{},"把":{"docs":{},"节":{"docs":{},"点":{"docs":{},"存":{"docs":{},"储":{"docs":{},"到":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}},"分":{"docs":{},"治":{"docs":{},"递":{"docs":{},"归":{"docs":{},"检":{"docs":{},"查":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"压":{"docs":{},"入":{"docs":{},"一":{"docs":{},"个":{"docs":{},"，":{"docs":{},"尝":{"docs":{},"试":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"一":{"docs":{},"次":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"最":{"docs":{},"后":{"docs":{},"能":{"docs":{},"够":{"docs":{},"全":{"docs":{},"部":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"，":{"docs":{},"就":{"docs":{},"说":{"docs":{},"明":{"docs":{},"是":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"序":{"docs":{},"列":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"处":{"docs":{},"理":{"docs":{},"成":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}},"拆":{"docs":{},"分":{"docs":{},"步":{"docs":{},"骤":{"docs":{},"需":{"docs":{},"要":{"docs":{},"思":{"docs":{},"考":{"docs":{},"：":{"docs":{},"其":{"docs":{},"实":{"docs":{},"就":{"docs":{},"是":{"docs":{},"依":{"docs":{},"次":{"docs":{},"更":{"docs":{},"新":{"docs":{},"原":{"docs":{},"链":{"docs":{},"表":{"docs":{},"和":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"链":{"docs":{},"表":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"于":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"做":{"docs":{},"剪":{"docs":{},"枝":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"后":{"docs":{},"继":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}},"步":{"docs":{},"先":{"docs":{},"保":{"docs":{},"存":{"docs":{},"后":{"docs":{},"边":{"docs":{},"未":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"因":{"docs":{},"为":{"docs":{},"要":{"docs":{},"对":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"指":{"docs":{},"向":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}},"步":{"docs":{},"就":{"docs":{},"是":{"docs":{},"将":{"docs":{},"当":{"docs":{},"前":{"docs":{},"节":{"docs":{},"点":{"docs":{},"从":{"docs":{},"“":{"docs":{},"向":{"docs":{},"后":{"docs":{},"指":{"docs":{},"”":{"docs":{},"改":{"docs":{},"变":{"docs":{},"为":{"docs":{},"“":{"docs":{},"向":{"docs":{},"前":{"docs":{},"指":{"docs":{},"”":{"docs":{},"；":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}}}},"三":{"docs":{},"步":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"指":{"docs":{},"针":{"docs":{},"后":{"docs":{},"移":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}},"四":{"docs":{},"步":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"指":{"docs":{},"针":{"docs":{},"后":{"docs":{},"移":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}},"该":{"docs":{},"条":{"docs":{},"件":{"docs":{},"说":{"docs":{},"明":{"docs":{},"数":{"docs":{},"组":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"束":{"docs":{},"，":{"docs":{},"符":{"docs":{},"合":{"docs":{},"有":{"docs":{},"序":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"算":{"docs":{},"法":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"交":{"docs":{},"换":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}},"依":{"docs":{},"次":{"docs":{},"存":{"docs":{},"储":{"docs":{},"各":{"docs":{},"个":{"docs":{},"位":{"docs":{},"置":{"docs":{},"上":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"以":{"docs":{},"后":{"docs":{},"移":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"有":{"docs":{},"环":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}},"操":{"docs":{},"作":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"的":{"docs":{},"前":{"docs":{},"驱":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"后":{"docs":{},"继":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"有":{"docs":{},"几":{"docs":{},"位":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"b":{"docs":{},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"就":{"docs":{},"有":{"docs":{},"几":{"docs":{},"个":{"0":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"docs":{}}}}}}}}}}}}}}}}}}}},"继":{"docs":{},"续":{"docs":{},"走":{"docs":{},"读":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"需":{"docs":{},"要":{"docs":{},"处":{"docs":{},"理":{"docs":{},"所":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"但":{"docs":{},"要":{"docs":{},"判":{"docs":{},"断":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"和":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}}},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.005232177894048398}},"*":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}},"=":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"=":{"2":{"3":{"4":{"docs":{},"个":{"1":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}}},"docs":{}},"docs":{}},"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.07051282051282051},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.05428384565075212},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.07479224376731301}},"=":{"0":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.013734466971877043},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.02631578947368421}},">":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}},">":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.005886200130804447}},"=":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.01282051282051282},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}}},"l":{"docs":{},"a":{"docs":{},"b":{"docs":{},"e":{"docs":{},"l":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.004578155657292348},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.02077562326869806}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.007194244604316547},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0110803324099723}},"p":{"2":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"docs":{}}},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"先":{"docs":{},"保":{"docs":{},"存":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"交":{"docs":{},"换":{"docs":{},"他":{"docs":{},"们":{"docs":{},"p":{"1":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"docs":{}}}}}}}}}}}}}}}},"动":{"docs":{},"手":{"docs":{},"脚":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"先":{"docs":{},"保":{"docs":{},"存":{"docs":{},"下":{"docs":{},"来":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}},"就":{"docs":{},"搞":{"docs":{},"定":{"docs":{},"了":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"对":{"docs":{},"于":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"而":{"docs":{},"言":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"先":{"docs":{},"让":{"docs":{},"它":{"docs":{},"指":{"docs":{},"向":{"docs":{},"p":{"2":{"docs":{},"：":{"docs":{},"p":{"docs":{},"r":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}},"指":{"docs":{},"向":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"，":{"docs":{},"也":{"docs":{},"就":{"docs":{},"是":{"docs":{},"第":{"docs":{},"二":{"docs":{},"步":{"docs":{},"。":{"docs":{},"但":{"docs":{},"是":{"docs":{},"需":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"一":{"docs":{},"下":{"docs":{},"几":{"docs":{},"点":{"docs":{},"：":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}}}}},"；":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}}}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}}},"{":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"a":{"docs":{},"[":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"]":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},"s":{"docs":{},"o":{"docs":{},"n":{"docs":{},"]":{"docs":{},")":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"]":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},";":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}},"r":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"[":{"docs":{},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{},"]":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"]":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.028846153846153848}}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"]":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},"docs":{}},"]":{"docs":{},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}},"]":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"i":{"docs":{},"]":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"j":{"docs":{},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"a":{"docs":{},"y":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"/":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"u":{"docs":{},"x":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.01282051282051282}}},"[":{"docs":{},"]":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"]":{"docs":{},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}},"d":{"docs":{},"d":{"docs":{"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.0196078431372549}}}},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"a":{"docs":{},"是":{"docs":{},"b":{"docs":{},"，":{"docs":{},"s":{"docs":{},"u":{"docs":{},"v":{"docs":{},"是":{"docs":{},"汽":{"docs":{},"车":{"docs":{},"；":{"docs":{},"猫":{"docs":{},"是":{"docs":{},"动":{"docs":{},"物":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"，":{"docs":{},"a":{"docs":{},"分":{"docs":{},"别":{"docs":{},"和":{"docs":{},"b":{"docs":{},",":{"docs":{},"c":{"docs":{},",":{"docs":{},"d":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"第":{"docs":{},"一":{"docs":{},"层":{"docs":{},"递":{"docs":{},"归":{"docs":{},"；":{"docs":{},"固":{"docs":{},"定":{"docs":{},"a":{"docs":{},"，":{"docs":{},"用":{"docs":{},"b":{"docs":{},"依":{"docs":{},"次":{"docs":{},"与":{"docs":{},"c":{"docs":{},",":{"docs":{},"d":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"第":{"docs":{},"二":{"docs":{},"次":{"docs":{},"递":{"docs":{},"归":{"docs":{},"；":{"docs":{},"固":{"docs":{},"定":{"docs":{},"a":{"docs":{},"b":{"docs":{},"，":{"docs":{},"用":{"docs":{},"c":{"docs":{},"和":{"docs":{},"d":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"这":{"docs":{},"是":{"docs":{},"第":{"docs":{},"三":{"docs":{},"次":{"docs":{},"递":{"docs":{},"归":{"docs":{},"；":{"docs":{},"轮":{"docs":{},"到":{"docs":{},"d":{"docs":{},"时":{"docs":{},"，":{"docs":{},"d":{"docs":{},"的":{"docs":{},"下":{"docs":{},"标":{"docs":{},"就":{"docs":{},"是":{"docs":{},"长":{"docs":{},"度":{"docs":{},"n":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"b":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"k":{"docs":{},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"u":{"docs":{},"b":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}},"l":{"docs":{"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.0392156862745098}}}},"i":{"docs":{},"l":{"docs":{},"d":{"docs":{},"_":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}},"不":{"docs":{},"知":{"docs":{},"道":{"docs":{},"a":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"o":{"docs":{},"o":{"docs":{},"l":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.003924133420536298},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}},"y":{"docs":{},"/":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"c":{"docs":{},"o":{"docs":{},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}},"/":{"1":{"0":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{}},"docs":{}}}}}}}},"e":{"docs":{},"n":{"docs":{},"d":{"1":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"2":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"x":{"docs":{},"p":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}},"f":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.01282051282051282},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.005232177894048398},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.008310249307479225}}}}},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}},"a":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"l":{"docs":{},"s":{"docs":{},"e":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}}}}}}},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}},"u":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"p":{"docs":{"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.0392156862745098}},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.00554016620498615}}},")":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}},"；":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"l":{"docs":{},"p":{"docs":{},"_":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"e":{"docs":{},"r":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},"i":{"docs":{},")":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"g":{"docs":{},"h":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.005232177894048398}},")":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.009615384615384616}}},"{":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},"+":{"1":{"docs":{},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},"docs":{}},"%":{"1":{"0":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}},"docs":{}},"*":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"/":{"1":{"0":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}},"docs":{}}}},"+":{"1":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}}},"a":{"docs":{},"s":{"docs":{},"h":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"s":{"docs":{},"u":{"docs":{},"b":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"1":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"docs":{}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}},"c":{"docs":{},"y":{"docs":{},"c":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},"e":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"t":{"docs":{},"w":{"docs":{},"o":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"u":{"docs":{},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"j":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.016025641025641024},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.003924133420536298},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},")":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"操":{"docs":{},"作":{"docs":{},"后":{"docs":{},"，":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"右":{"docs":{},"边":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"都":{"docs":{},"比":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"大":{"docs":{},"，":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},"左":{"docs":{},"边":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"逗":{"docs":{},"比":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},"小":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"得":{"docs":{},"到":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}},"+":{"1":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}},"=":{"0":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"1":{"docs":{},";":{"docs":{},"j":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"docs":{}}},"m":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"a":{"docs":{},"x":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},"p":{"docs":{},"o":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"j":{"docs":{},"o":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}}}}}}}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}},"docs":{}}}}}},"p":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"[":{"docs":{},"'":{"docs":{},"c":{"docs":{},"'":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"d":{"docs":{},"'":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"i":{"docs":{},"'":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"l":{"docs":{},"'":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"m":{"docs":{},"'":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"v":{"docs":{},"'":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"x":{"docs":{},"'":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},"]":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}},"e":{"docs":{},"r":{"docs":{},"g":{"docs":{"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.0392156862745098}},"e":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}},"i":{"docs":{},"d":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.009615384615384616},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},")":{"docs":{},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},"+":{"1":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.009615384615384616}}}},"docs":{}},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.009615384615384616}}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"r":{"docs":{},"r":{"docs":{},"o":{"docs":{},"r":{"docs":{},"(":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}},"p":{"1":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.008310249307479225}},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}}},"=":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},",":{"docs":{},"p":{"2":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"docs":{}}}}}}}},"2":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0110803324099723}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"再":{"docs":{},"让":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"几":{"docs":{},"点":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"=":{"docs":{},"p":{"1":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"docs":{}}}}}}}}}}}}}}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"+":{"1":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"a":{"docs":{},"t":{"docs":{},"t":{"docs":{},"e":{"docs":{},"r":{"docs":{},"n":{"docs":{},"s":{"docs":{},".":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"t":{"docs":{},"h":{"docs":{},"e":{"docs":{},"d":{"docs":{},"o":{"docs":{},"c":{"docs":{},"s":{"docs":{},".":{"docs":{},"i":{"docs":{},"o":{"docs":{},"/":{"docs":{},"z":{"docs":{},"h":{"docs":{},"_":{"docs":{},"c":{"docs":{},"n":{"docs":{},"/":{"docs":{},"l":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"t":{"docs":{},"/":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"_":{"docs":{},"u":{"docs":{},"m":{"docs":{},"l":{"docs":{},".":{"docs":{},"h":{"docs":{},"t":{"docs":{},"m":{"docs":{},"l":{"docs":{},"#":{"docs":{},"i":{"docs":{},"d":{"2":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"h":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"e":{"docs":{},"r":{"docs":{},"m":{"docs":{},"u":{"docs":{},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}}}}}}},"o":{"docs":{},"p":{"docs":{},"v":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"r":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"v":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.006925207756232687}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}},"这":{"docs":{},"一":{"docs":{},"步":{"docs":{},"o":{"docs":{},"k":{"docs":{},"以":{"docs":{},"后":{"docs":{},"才":{"docs":{},"算":{"docs":{},"大":{"docs":{},"功":{"docs":{},"告":{"docs":{},"成":{"docs":{},"，":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}},"用":{"docs":{},"来":{"docs":{},"衔":{"docs":{},"接":{"docs":{},"前":{"docs":{},"驱":{"docs":{},"，":{"docs":{},"p":{"1":{"docs":{},"和":{"docs":{},"p":{"2":{"docs":{},"用":{"docs":{},"来":{"docs":{},"交":{"docs":{},"换":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"用":{"docs":{},"来":{"docs":{},"走":{"docs":{},"读":{"docs":{},"链":{"docs":{},"表":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"f":{"docs":{},"r":{"docs":{},"o":{"docs":{},"m":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"t":{"docs":{},"o":{"docs":{},"b":{"docs":{},"o":{"docs":{},"t":{"docs":{},"t":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}},"o":{"docs":{},"r":{"docs":{},"i":{"docs":{},"t":{"docs":{},"y":{"docs":{},"_":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"u":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}},"o":{"docs":{},"c":{"docs":{},"e":{"docs":{},"s":{"docs":{},"s":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}},"o":{"docs":{},"t":{"1":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"2":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}},"t":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"u":{"docs":{},"b":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.011118378024852845},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.019390581717451522}}}}}}},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"v":{"docs":{},",":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"i":{"docs":{},"c":{"docs":{},"k":{"docs":{"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.0392156862745098}},"_":{"docs":{},"p":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"docs":{},"i":{"docs":{},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"0":{"docs":{},",":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}},"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641}}}}}}}}}}}}}},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"u":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"r":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}},"t":{"docs":{},"u":{"docs":{},"r":{"docs":{},"n":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.01765860039241334},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.018005540166204988}},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}}}}}}},"v":{"docs":{},"i":{"docs":{},"e":{"docs":{},"w":{"docs":{"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.11764705882352941}}}}},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}},"s":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},"docs":{}}}}}}}}},".":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"p":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.010464355788096796},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}}},"o":{"docs":{},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}}}}}}},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}},"e":{"docs":{},"d":{"docs":{},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}}}}}}}}}}}}}}}},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"e":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}}}}}}}}}}}}}}}}}}}}}},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.004578155657292348}},"e":{"docs":{},"(":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"l":{"docs":{},"l":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}}}}}}}}}}}},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},",":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"t":{"docs":{},"a":{"docs":{},"t":{"docs":{},"e":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}},"m":{"docs":{},"a":{"docs":{},"n":{"docs":{},"t":{"docs":{},"o":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{},"(":{"docs":{},"s":{"docs":{},"t":{"docs":{},"r":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}},"s":{"docs":{},"e":{"docs":{},"l":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.0392156862745098}},"_":{"docs":{},"s":{"docs":{},"o":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"a":{"docs":{},"r":{"docs":{},"c":{"docs":{},"h":{"docs":{},"i":{"docs":{},"n":{"docs":{},"s":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"k":{"1":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}},"2":{"docs":{},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641}}}}}}}},"docs":{}},"g":{"docs":{},"l":{"docs":{},"i":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}}},"o":{"docs":{},"n":{"docs":{},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},"r":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":0.23529411764705882},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}},"(":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.009615384615384616}}}}}},"r":{"docs":{},"e":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}},"l":{"docs":{},"u":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.011118378024852845},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.019390581717451522}}}}}},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"2":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}},"t":{"docs":{},"i":{"docs":{},"c":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}},"c":{"docs":{},"k":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}},"r":{"docs":{},".":{"docs":{},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},"i":{"docs":{},"n":{"docs":{},"g":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"u":{"docs":{},"c":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.012426422498364944},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}},"r":{"docs":{},"e":{"docs":{},"m":{"docs":{},"o":{"docs":{},"v":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"e":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"b":{"docs":{},"e":{"docs":{},"g":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}},"）":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}},"u":{"docs":{},"n":{"docs":{},"i":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"删":{"docs":{},"除":{"docs":{},"重":{"docs":{},"复":{"docs":{},"元":{"docs":{},"素":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}},"w":{"docs":{},"a":{"docs":{},"p":{"docs":{},"(":{"docs":{},"a":{"docs":{},"[":{"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"r":{"docs":{},"r":{"docs":{},"[":{"0":{"docs":{},"]":{"docs":{},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"k":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}},"docs":{},"i":{"docs":{},"]":{"docs":{},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"]":{"docs":{},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}},"]":{"docs":{},",":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}},"p":{"docs":{},"a":{"docs":{},"i":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"(":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"n":{"docs":{},"g":{"docs":{},"t":{"docs":{},"h":{"docs":{},"(":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"_":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"h":{"docs":{},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"u":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"u":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"m":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"/":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"[":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{}}}}},"v":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"o":{"docs":{},"i":{"docs":{},"d":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.03205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}}}},"t":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"a":{"docs":{},"l":{"docs":{},"(":{"docs":{},"x":{"docs":{},")":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.003924133420536298},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.003924133420536298},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}},"u":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"e":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},")":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}},")":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.011772400261608895},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.006925207756232687}},">":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"r":{"docs":{},"i":{"docs":{},"f":{"docs":{},"y":{"docs":{},"s":{"docs":{},"q":{"docs":{},"u":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"e":{"docs":{},"o":{"docs":{},"f":{"docs":{},"b":{"docs":{},"s":{"docs":{},"t":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}},"w":{"docs":{},"h":{"docs":{},"i":{"docs":{},"l":{"docs":{},"e":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}},"docs":{},"p":{"1":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.00641025641025641}}}}}}},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"r":{"docs":{},"t":{"1":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}},"docs":{}}}}}},"t":{"docs":{},"r":{"docs":{},"u":{"docs":{},"e":{"docs":{},")":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"m":{"docs":{},"p":{"docs":{},")":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"!":{"docs":{},"l":{"docs":{},"i":{"docs":{},"n":{"docs":{},"e":{"docs":{},".":{"docs":{},"e":{"docs":{},"m":{"docs":{},"p":{"docs":{},"t":{"docs":{},"y":{"docs":{},"(":{"docs":{},")":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}},"+":{"docs":{},"+":{"docs":{},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"c":{"docs":{},"o":{"docs":{},"p":{"docs":{},"y":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}},"l":{"docs":{},"e":{"docs":{},"f":{"docs":{},"t":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"x":{"docs":{},")":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}},"{":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.04807692307692308},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.06540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.062326869806094184}},"}":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}},"}":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.04487179487179487},"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.04643557880967953},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.030470914127423823}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.009156311314584695},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.012465373961218837}},"*":{"docs":{},"/":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.003924133420536298}}}}}},"冒":{"docs":{},"泡":{"docs":{},"排":{"docs":{},"序":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"堆":{"docs":{},"：":{"docs":{},"将":{"docs":{},"数":{"docs":{},"组":{"docs":{},"看":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"堆":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"从":{"docs":{},"后":{"docs":{},"往":{"docs":{},"前":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"非":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"对":{"docs":{},"每":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"做":{"docs":{},"下":{"docs":{},"沉":{"docs":{},"操":{"docs":{},"作":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"就":{"docs":{},"得":{"docs":{},"做":{"docs":{},"了":{"docs":{},"，":{"docs":{},"在":{"docs":{},"循":{"docs":{},"环":{"docs":{},"里":{"docs":{},"是":{"docs":{},"不":{"docs":{},"太":{"docs":{},"好":{"docs":{},"操":{"docs":{},"作":{"docs":{},"的":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"位":{"docs":{},"置":{"docs":{},"就":{"docs":{},"是":{"docs":{},"p":{"docs":{},"i":{"docs":{},"v":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}},"到":{"docs":{},"该":{"docs":{},"题":{"docs":{},"中":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"左":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"2":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"，":{"docs":{},"右":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"2":{"docs":{},"i":{"docs":{},"+":{"2":{"docs":{},"，":{"docs":{},"父":{"docs":{},"亲":{"docs":{},"节":{"docs":{},"点":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"docs":{},"(":{"docs":{},"i":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}},"docs":{}}}},"docs":{}}}}}},"树":{"docs":{},"+":{"docs":{},"右":{"docs":{},"子":{"docs":{},"树":{"docs":{},"+":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}},"思":{"docs":{},"路":{"1":{"docs":{},"：":{"docs":{},"先":{"docs":{},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"大":{"docs":{},"顶":{"docs":{},"堆":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"循":{"docs":{},"环":{"docs":{},"=":{"docs":{},"=":{"docs":{},">":{"docs":{},"(":{"docs":{},"删":{"docs":{},"除":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"元":{"docs":{},"素":{"docs":{},"+":{"docs":{},"堆":{"docs":{},"化":{"docs":{},"收":{"docs":{},"敛":{"docs":{},")":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"堆":{"docs":{},"空":{"docs":{},"为":{"docs":{},"止":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{},"：":{"docs":{},"从":{"docs":{},"头":{"docs":{},"开":{"docs":{},"始":{"docs":{},"，":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"依":{"docs":{},"次":{"docs":{},"和":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"元":{"docs":{},"素":{"docs":{},"交":{"docs":{},"换":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}},"初":{"docs":{},"始":{"docs":{},"化":{"docs":{},"一":{"docs":{},"个":{"docs":{},"大":{"docs":{},"小":{"docs":{},"为":{"docs":{},"k":{"docs":{},"的":{"docs":{},"优":{"docs":{},"先":{"docs":{},"队":{"docs":{},"列":{"docs":{},"（":{"docs":{},"大":{"docs":{},"顶":{"docs":{},"堆":{"docs":{},"）":{"docs":{},"，":{"docs":{},"然":{"docs":{},"后":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"比":{"docs":{},"堆":{"docs":{},"顶":{"docs":{},"小":{"docs":{},"的":{"docs":{},"数":{"docs":{},"就":{"docs":{},"入":{"docs":{},"堆":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"结":{"docs":{},"束":{"docs":{},"后":{"docs":{},"，":{"docs":{},"堆":{"docs":{},"里":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"就":{"docs":{},"是":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"序":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":10.003205128205128}}}},"插":{"docs":{},"入":{"docs":{},"排":{"docs":{},"序":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"此":{"docs":{},"时":{"docs":{},"的":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{},"[":{"docs":{},"j":{"docs":{},"]":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}}}}}}},"选":{"docs":{},"择":{"docs":{},"排":{"docs":{},"序":{"docs":{"datastructure_and_algorithm/sort.html":{"ref":"datastructure_and_algorithm/sort.html","tf":0.003205128205128205}}}}}},"代":{"docs":{},"码":{"docs":{"datastructure_and_algorithm/code/":{"ref":"datastructure_and_algorithm/code/","tf":10}}}},"u":{"docs":{},"m":{"docs":{},"l":{"docs":{},"和":{"docs":{},"设":{"docs":{},"计":{"docs":{},"模":{"docs":{},"式":{"docs":{"uml_and_design_pattern/":{"ref":"uml_and_design_pattern/","tf":11}}}}}}},"的":{"docs":{},"表":{"docs":{},"示":{"docs":{},"方":{"docs":{},"法":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}},"笔":{"docs":{},"记":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":10}}}}}},"n":{"docs":{},"o":{"docs":{},"r":{"docs":{},"d":{"docs":{},"e":{"docs":{},"r":{"docs":{},"e":{"docs":{},"d":{"docs":{},"_":{"docs":{},"m":{"docs":{},"a":{"docs":{},"p":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}}}}}}}}}}},"与":{"docs":{},"关":{"docs":{},"联":{"docs":{},"关":{"docs":{},"系":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"是":{"docs":{},"，":{"docs":{},"它":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"临":{"docs":{},"时":{"docs":{},"性":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"通":{"docs":{},"常":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"期":{"docs":{},"间":{"docs":{},"产":{"docs":{},"生":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"随":{"docs":{},"着":{"docs":{},"运":{"docs":{},"行":{"docs":{},"时":{"docs":{},"的":{"docs":{},"变":{"docs":{},"化":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"例":{"docs":{},"如":{"docs":{},"学":{"docs":{},"生":{"docs":{},"和":{"docs":{},"学":{"docs":{},"校":{"docs":{},"，":{"docs":{},"乘":{"docs":{},"车":{"docs":{},"人":{"docs":{},"和":{"docs":{},"车":{"docs":{},"票":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}},"，":{"docs":{},"输":{"docs":{},"入":{"1":{"2":{"docs":{},"，":{"1":{"docs":{},"～":{"1":{"2":{"docs":{},"这":{"docs":{},"些":{"docs":{},"整":{"docs":{},"数":{"docs":{},"中":{"docs":{},"包":{"docs":{},"含":{"1":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}}}}}}}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}}},"输":{"docs":{},"入":{"3":{"5":{"7":{"1":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"对":{"docs":{},"比":{"1":{"7":{"5":{"3":{"docs":{},"，":{"docs":{},"那":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"构":{"docs":{},"造":{"docs":{},"呢":{"docs":{},"？":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}},"docs":{}},"docs":{}}}}},"依":{"docs":{},"赖":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"d":{"docs":{},"e":{"docs":{},"p":{"docs":{},"e":{"docs":{},"n":{"docs":{},"d":{"docs":{},"e":{"docs":{},"n":{"docs":{},"c":{"docs":{},"y":{"docs":{},")":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}},"也":{"docs":{},"可":{"docs":{},"能":{"docs":{},"发":{"docs":{},"生":{"docs":{},"变":{"docs":{},"化":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}},"次":{"docs":{},"从":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"取":{"docs":{},"出":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"串":{"docs":{},"成":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}},"f":{"docs":{},"a":{"docs":{},"n":{"docs":{},"z":{"docs":{},"h":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}},"将":{"docs":{},"数":{"docs":{},"字":{"docs":{},"乘":{"docs":{},"以":{"docs":{},"位":{"docs":{},"数":{"docs":{},"后":{"docs":{},"翻":{"docs":{},"转":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}},"关":{"docs":{},"联":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{},"o":{"docs":{},"c":{"docs":{},"i":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}},"默":{"docs":{},"认":{"docs":{},"不":{"docs":{},"强":{"docs":{},"调":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"对":{"docs":{},"象":{"docs":{},"间":{"docs":{},"相":{"docs":{},"互":{"docs":{},"知":{"docs":{},"道":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}},"键":{"docs":{},"是":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"怎":{"docs":{},"么":{"docs":{},"维":{"docs":{},"护":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"p":{"1":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"参":{"docs":{},"考":{"docs":{},"来":{"docs":{},"自":{"docs":{},"：":{"docs":{},"h":{"docs":{},"t":{"docs":{},"t":{"docs":{},"p":{"docs":{},"s":{"docs":{},":":{"docs":{},"/":{"docs":{},"/":{"docs":{},"d":{"docs":{},"e":{"docs":{},"s":{"docs":{},"i":{"docs":{},"g":{"docs":{},"n":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}},"在":{"docs":{},"最":{"docs":{},"终":{"docs":{},"代":{"docs":{},"码":{"docs":{},"中":{"docs":{},"，":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"关":{"docs":{},"系":{"docs":{},"体":{"docs":{},"现":{"docs":{},"为":{"docs":{},"类":{"docs":{},"构":{"docs":{},"造":{"docs":{},"方":{"docs":{},"法":{"docs":{},"及":{"docs":{},"类":{"docs":{},"方":{"docs":{},"法":{"docs":{},"的":{"docs":{},"传":{"docs":{},"入":{"docs":{},"参":{"docs":{},"数":{"docs":{},"，":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"为":{"docs":{},"调":{"docs":{},"用":{"docs":{},"关":{"docs":{},"系":{"docs":{},"；":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"关":{"docs":{},"系":{"docs":{},"除":{"docs":{},"了":{"docs":{},"临":{"docs":{},"时":{"docs":{},"知":{"docs":{},"道":{"docs":{},"对":{"docs":{},"方":{"docs":{},"外":{"docs":{},"，":{"docs":{},"还":{"docs":{},"是":{"docs":{},"“":{"docs":{},"使":{"docs":{},"用":{"docs":{},"”":{"docs":{},"对":{"docs":{},"方":{"docs":{},"的":{"docs":{},"方":{"docs":{},"法":{"docs":{},"和":{"docs":{},"属":{"docs":{},"性":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"值":{"docs":{},"的":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"中":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"大":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"靠":{"docs":{},"前":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}},"如":{"docs":{},"果":{"docs":{},"特":{"docs":{},"别":{"docs":{},"强":{"docs":{},"调":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"如":{"docs":{},"下":{"docs":{},"图":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"a":{"docs":{},"知":{"docs":{},"道":{"docs":{},"b":{"docs":{},"，":{"docs":{},"但":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}},"没":{"docs":{},"有":{"docs":{},"继":{"docs":{},"续":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"也":{"docs":{},"没":{"docs":{},"有":{"docs":{},"满":{"docs":{},"足":{"docs":{},"和":{"docs":{},"值":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"那":{"docs":{},"么":{"docs":{},"从":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"这":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"何":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"它":{"docs":{},"一":{"docs":{},"般":{"docs":{},"用":{"docs":{},"来":{"docs":{},"定":{"docs":{},"义":{"docs":{},"对":{"docs":{},"象":{"docs":{},"之":{"docs":{},"间":{"docs":{},"静":{"docs":{},"态":{"docs":{},"的":{"docs":{},"、":{"docs":{},"天":{"docs":{},"然":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"静":{"docs":{},"态":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}},"实":{"docs":{},"现":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"r":{"docs":{},"e":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},")":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}},"为":{"docs":{},"实":{"docs":{},"现":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"（":{"docs":{},"”":{"docs":{},"车":{"docs":{},"“":{"docs":{},"就":{"docs":{},"是":{"docs":{},"c":{"docs":{},"+":{"docs":{},"+":{"docs":{},"中":{"docs":{},"的":{"docs":{},"抽":{"docs":{},"象":{"docs":{},"类":{"docs":{},"，":{"docs":{},"小":{"docs":{},"汽":{"docs":{},"车":{"docs":{},"和":{"docs":{},"自":{"docs":{},"行":{"docs":{},"车":{"docs":{},"都":{"docs":{},"是":{"docs":{},"具":{"docs":{},"体":{"docs":{},"子":{"docs":{},"类":{"docs":{},"）":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"际":{"docs":{},"上":{"docs":{},"是":{"docs":{},"通":{"docs":{},"过":{"docs":{},"跟":{"docs":{},"踪":{"docs":{},"旧":{"docs":{},"链":{"docs":{},"表":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"来":{"docs":{},"更":{"docs":{},"新":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"指":{"docs":{},"针":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"利":{"docs":{},"用":{"docs":{},"数":{"docs":{},"学":{"docs":{},"归":{"docs":{},"纳":{"docs":{},"法":{"docs":{},"来":{"docs":{},"做":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}},"所":{"docs":{},"以":{"docs":{},"，":{"docs":{},"关":{"docs":{},"联":{"docs":{},"关":{"docs":{},"系":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"“":{"docs":{},"强":{"docs":{},"关":{"docs":{},"联":{"docs":{},"”":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}},"有":{"docs":{},"三":{"docs":{},"个":{"docs":{},"逻":{"docs":{},"辑":{"docs":{},"处":{"docs":{},"理":{"docs":{},"分":{"docs":{},"支":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},"显":{"docs":{},"然":{"docs":{},"，":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"也":{"docs":{},"有":{"docs":{},"方":{"docs":{},"向":{"docs":{},"，":{"docs":{},"双":{"docs":{},"向":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"是":{"docs":{},"一":{"docs":{},"种":{"docs":{},"非":{"docs":{},"常":{"docs":{},"糟":{"docs":{},"糕":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"我":{"docs":{},"们":{"docs":{},"总":{"docs":{},"是":{"docs":{},"应":{"docs":{},"该":{"docs":{},"保":{"docs":{},"持":{"docs":{},"单":{"docs":{},"向":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"，":{"docs":{},"杜":{"docs":{},"绝":{"docs":{},"双":{"docs":{},"向":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"的":{"docs":{},"产":{"docs":{},"生":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"泛":{"docs":{},"化":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"g":{"docs":{},"e":{"docs":{},"n":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"l":{"docs":{},"i":{"docs":{},"z":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}},"用":{"docs":{},"一":{"docs":{},"套":{"docs":{},"带":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"的":{"docs":{},"虚":{"docs":{},"线":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"描":{"docs":{},"述":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"在":{"docs":{},"运":{"docs":{},"行":{"docs":{},"期":{"docs":{},"间":{"docs":{},"会":{"docs":{},"用":{"docs":{},"到":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"对":{"docs":{},"象":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"实":{"docs":{},"心":{"docs":{},"菱":{"docs":{},"形":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"的":{"docs":{},"直":{"docs":{},"线":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"a":{"docs":{},"组":{"docs":{},"成":{"docs":{},"b":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"说":{"docs":{},"b":{"docs":{},"由":{"docs":{},"a":{"docs":{},"组":{"docs":{},"成":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"线":{"docs":{},"+":{"docs":{},"空":{"docs":{},"心":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"表":{"docs":{},"示":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}},"带":{"docs":{},"空":{"docs":{},"心":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"的":{"docs":{},"虚":{"docs":{},"线":{"docs":{},"表":{"docs":{},"示":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}},"菱":{"docs":{},"形":{"docs":{},"箭":{"docs":{},"头":{"docs":{},"的":{"docs":{},"直":{"docs":{},"线":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"表":{"docs":{},"示":{"docs":{},"a":{"docs":{},"聚":{"docs":{},"合":{"docs":{},"到":{"docs":{},"b":{"docs":{},"上":{"docs":{},"，":{"docs":{},"或":{"docs":{},"者":{"docs":{},"说":{"docs":{},"b":{"docs":{},"由":{"docs":{},"a":{"docs":{},"组":{"docs":{},"成":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"箭":{"docs":{},"头":{"docs":{},"的":{"docs":{},"直":{"docs":{},"线":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"用":{"docs":{},"来":{"docs":{},"描":{"docs":{},"述":{"docs":{},"不":{"docs":{},"同":{"docs":{},"类":{"docs":{},"的":{"docs":{},"对":{"docs":{},"象":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"结":{"docs":{},"构":{"docs":{},"关":{"docs":{},"系":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"类":{"docs":{},"之":{"docs":{},"间":{"docs":{},"的":{"docs":{},"关":{"docs":{},"系":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}},"组":{"docs":{},"合":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"p":{"docs":{},"o":{"docs":{},"s":{"docs":{},"i":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}},"是":{"docs":{},"强":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"的":{"docs":{},"，":{"docs":{},"b":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"以":{"docs":{},"后":{"docs":{},"a":{"docs":{},"也":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"了":{"docs":{},"，":{"docs":{},"整":{"docs":{},"体":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"了":{"docs":{},"，":{"docs":{},"部":{"docs":{},"分":{"docs":{},"也":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"了":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"聚":{"docs":{},"合":{"docs":{},"关":{"docs":{},"系":{"docs":{},"(":{"docs":{},"a":{"docs":{},"g":{"docs":{},"g":{"docs":{},"r":{"docs":{},"e":{"docs":{},"g":{"docs":{},"a":{"docs":{},"t":{"docs":{},"i":{"docs":{},"o":{"docs":{},"n":{"docs":{},")":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}},"不":{"docs":{},"是":{"docs":{},"强":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"的":{"docs":{},"，":{"docs":{},"b":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"后":{"docs":{},"a":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"可":{"docs":{},"以":{"docs":{},"存":{"docs":{},"在":{"docs":{},"，":{"docs":{},"比":{"docs":{},"如":{"docs":{},"员":{"docs":{},"工":{"docs":{},"聚":{"docs":{},"合":{"docs":{},"成":{"docs":{},"了":{"docs":{},"部":{"docs":{},"门":{"docs":{},"，":{"docs":{},"但":{"docs":{},"部":{"docs":{},"门":{"docs":{},"不":{"docs":{},"存":{"docs":{},"在":{"docs":{},"了":{"docs":{},"以":{"docs":{},"后":{"docs":{},"员":{"docs":{},"工":{"docs":{},"仍":{"docs":{},"然":{"docs":{},"存":{"docs":{},"在":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"表":{"docs":{},"示":{"docs":{},"i":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}},"通":{"docs":{},"常":{"docs":{},"与":{"docs":{},"运":{"docs":{},"行":{"docs":{},"状":{"docs":{},"态":{"docs":{},"无":{"docs":{},"关":{"docs":{},"，":{"docs":{},"一":{"docs":{},"般":{"docs":{},"由":{"docs":{},"常":{"docs":{},"识":{"docs":{},"等":{"docs":{},"因":{"docs":{},"素":{"docs":{},"决":{"docs":{},"定":{"docs":{},"的":{"docs":{},"；":{"docs":{"uml_and_design_pattern/UML.html":{"ref":"uml_and_design_pattern/UML.html","tf":0.030303030303030304}}}}}}}}}}}}}}}}}}}}}}}},"%":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.004578155657292348},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}},"\\":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.003924133420536298}}},"c":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"h":{"docs":{},"u":{"docs":{},"a":{"docs":{},"n":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}}},"l":{"docs":{},"a":{"docs":{},"s":{"docs":{},"s":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.011118378024852845},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.019390581717451522}}}}},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"r":{"docs":{},"a":{"docs":{},"n":{"docs":{},"d":{"docs":{},"o":{"docs":{},"m":{"docs":{},"l":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}},"n":{"docs":{},".":{"docs":{},"c":{"docs":{},"o":{"docs":{},"m":{"docs":{},"/":{"docs":{},"p":{"docs":{},"r":{"docs":{},"o":{"docs":{},"b":{"docs":{},"l":{"docs":{},"e":{"docs":{},"m":{"docs":{},"s":{"docs":{},"/":{"docs":{},"l":{"docs":{},"i":{"docs":{},"a":{"docs":{},"n":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"z":{"docs":{},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"n":{"docs":{},"v":{"docs":{},"e":{"docs":{},"r":{"docs":{},"t":{"docs":{},"(":{"docs":{},"p":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},"o":{"docs":{},"f":{"docs":{},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}}}}}}}}}}}}},"t":{"docs":{},"i":{"docs":{},"n":{"docs":{},"u":{"docs":{},"e":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}}}}}}}}},"p":{"docs":{},"y":{"docs":{},"(":{"docs":{},"m":{"docs":{},"a":{"docs":{},"t":{"docs":{},"r":{"docs":{},"i":{"docs":{},"x":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}},"docs":{}}}},"u":{"docs":{},"n":{"docs":{},"t":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"o":{"docs":{},"n":{"docs":{},"e":{"docs":{},"(":{"docs":{},"i":{"docs":{},"n":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}},"u":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.01765860039241334},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.01662049861495845}},"*":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}},"=":{"0":{"docs":{},"时":{"docs":{},"，":{"docs":{},"无":{"docs":{},"影":{"docs":{},"响":{"docs":{},"，":{"docs":{},"不":{"docs":{},"加":{"1":{"docs":{},"；":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}}}}}}}}}},"1":{"docs":{},"时":{"docs":{},"，":{"docs":{},"还":{"docs":{},"要":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"位":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"，":{"docs":{},"有":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"+":{"1":{"docs":{},"个":{"1":{"docs":{},"（":{"docs":{},"从":{"0":{"docs":{},"数":{"docs":{},"到":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"）":{"docs":{},"；":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}},"docs":{}}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}},"docs":{},"=":{"0":{"docs":{},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"1":{"docs":{},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}}},">":{"1":{"docs":{},"时":{"docs":{},"，":{"docs":{},"考":{"docs":{},"虑":{"1":{"0":{"docs":{},"，":{"1":{"1":{"docs":{},"，":{"1":{"2":{"docs":{},"，":{"docs":{},".":{"docs":{},".":{"docs":{},".":{"docs":{},"，":{"1":{"9":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}},"docs":{}}}}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}}}},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"a":{"docs":{},"c":{"docs":{},"h":{"docs":{},"e":{"docs":{},".":{"docs":{},"p":{"docs":{},"u":{"docs":{},"s":{"docs":{},"h":{"docs":{},"_":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},"k":{"docs":{},"(":{"docs":{},"x":{"docs":{},"%":{"1":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"docs":{}},"docs":{}}}}}}}}}}}}}},";":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}},"d":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},"a":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.001962066710268149}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"i":{"docs":{},"t":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}}}},"f":{"docs":{},"s":{"docs":{},"+":{"docs":{},"回":{"docs":{},"溯":{"docs":{},"+":{"docs":{},"剪":{"docs":{},"枝":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"f":{"docs":{},"i":{"docs":{},"n":{"docs":{},"d":{"docs":{},"(":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}},"r":{"docs":{},"o":{"docs":{},"o":{"docs":{},"t":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"t":{"docs":{},"r":{"docs":{},"e":{"docs":{},"e":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"*":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}},"的":{"docs":{},"剪":{"docs":{},"枝":{"docs":{},"可":{"docs":{},"以":{"docs":{},"用":{"docs":{},"一":{"docs":{},"个":{"docs":{},"s":{"docs":{},"e":{"docs":{},"t":{"docs":{},"辅":{"docs":{},"助":{"docs":{},"来":{"docs":{},"做":{"docs":{},"，":{"docs":{},"如":{"docs":{},"a":{"docs":{},"b":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"，":{"docs":{},"用":{"docs":{},"下":{"docs":{},"标":{"docs":{},"为":{"1":{"docs":{},"的":{"docs":{},"b":{"docs":{},"依":{"docs":{},"次":{"docs":{},"与":{"docs":{},"b":{"docs":{},"c":{"docs":{},"d":{"docs":{},"交":{"docs":{},"换":{"docs":{},"时":{"docs":{},"，":{"docs":{},"和":{"docs":{},"自":{"docs":{},"己":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"b":{"docs":{},"就":{"docs":{},"不":{"docs":{},"做":{"docs":{},"交":{"docs":{},"换":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"i":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.002616088947024199}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"从":{"docs":{},"个":{"docs":{},"位":{"docs":{},"开":{"docs":{},"始":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}},"p":{"docs":{},"(":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"s":{"docs":{},".":{"docs":{},"s":{"docs":{},"i":{"docs":{},"z":{"docs":{},"e":{"docs":{},"(":{"docs":{},")":{"docs":{},",":{"0":{"docs":{},")":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"docs":{}}}}}}}}}}}}}},"[":{"0":{"docs":{},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"u":{"docs":{},"p":{"docs":{},"l":{"docs":{},"i":{"docs":{},"c":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}}}}}},"g":{"docs":{},"e":{"docs":{},"t":{"docs":{},"l":{"docs":{},"e":{"docs":{},"a":{"docs":{},"s":{"docs":{},"t":{"docs":{},"n":{"docs":{},"u":{"docs":{},"m":{"docs":{},"b":{"docs":{},"e":{"docs":{},"r":{"docs":{},"s":{"docs":{},"(":{"docs":{},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},"&":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}}}}}}}}}}}}}}}}}}}}}},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},"l":{"docs":{},"o":{"docs":{},"g":{"docs":{},"k":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"n":{"docs":{},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"n":{"docs":{},"e":{"docs":{},"/":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"t":{"docs":{},"h":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"x":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}},")":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.004578155657292348},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.00554016620498615}}},"u":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"z":{"docs":{},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"u":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"|":{"docs":{},"|":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484},"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.004155124653739612}}}},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"分":{"docs":{},"成":{"docs":{},"三":{"docs":{},"部":{"docs":{},"分":{"docs":{},"：":{"docs":{},"高":{"docs":{},"位":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"，":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}},"不":{"docs":{},"是":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"就":{"docs":{},"继":{"docs":{},"续":{"docs":{},"递":{"docs":{},"归":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"递":{"docs":{},"归":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"为":{"docs":{},"止":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"继":{"docs":{},"续":{"docs":{},"递":{"docs":{},"归":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}},"为":{"docs":{},"什":{"docs":{},"么":{"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"和":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"都":{"docs":{},"为":{"0":{"docs":{},"才":{"docs":{},"是":{"docs":{},"边":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"docs":{}}}}}}}}}}},"加":{"1":{"docs":{},"?":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"？":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"?":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"要":{"docs":{},"让":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"这":{"docs":{},"样":{"docs":{},"做":{"docs":{},"呢":{"docs":{},"？":{"docs":{},"p":{"1":{"docs":{},"和":{"docs":{},"p":{"2":{"docs":{},"交":{"docs":{},"换":{"docs":{},"了":{"docs":{},"位":{"docs":{},"置":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"必":{"docs":{},"须":{"docs":{},"指":{"docs":{},"向":{"docs":{},"p":{"2":{"docs":{},"；":{"docs":{},"而":{"docs":{},"p":{"1":{"docs":{},"指":{"docs":{},"向":{"docs":{},"的":{"docs":{},"又":{"docs":{},"是":{"docs":{},"后":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"新":{"docs":{},"的":{"docs":{},"可":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"处":{"docs":{},"理":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"需":{"docs":{},"要":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"当":{"docs":{},"然":{"docs":{},"是":{"docs":{},"后":{"docs":{},"面":{"docs":{},"两":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"；":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}}}},"docs":{}}}}}}}}}}}}}}}}}},"docs":{}}}},"docs":{}}}}}}}}}}}}}}}}},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"与":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"序":{"docs":{},"列":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},"树":{"docs":{},"中":{"docs":{},"和":{"docs":{},"为":{"docs":{},"某":{"docs":{},"一":{"docs":{},"值":{"docs":{},"的":{"docs":{},"路":{"docs":{},"径":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}},"的":{"docs":{},"镜":{"docs":{},"像":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"定":{"docs":{},"义":{"docs":{},"：":{"docs":{},"源":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},"分":{"docs":{},"查":{"docs":{},"找":{"docs":{},"，":{"docs":{},"但":{"docs":{},"是":{"docs":{},"边":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{},"需":{"docs":{},"要":{"docs":{},"非":{"docs":{},"常":{"docs":{},"仔":{"docs":{},"细":{"docs":{},"地":{"docs":{},"考":{"docs":{},"虑":{"docs":{},"清":{"docs":{},"楚":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}},"从":{"docs":{},"上":{"docs":{},"往":{"docs":{},"下":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"同":{"docs":{},"层":{"docs":{},"节":{"docs":{},"点":{"docs":{},"从":{"docs":{},"左":{"docs":{},"至":{"docs":{},"右":{"docs":{},"打":{"docs":{},"印":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}},"个":{"docs":{},"位":{"docs":{},"到":{"docs":{},"高":{"docs":{},"位":{"docs":{},"逐":{"docs":{},"位":{"docs":{},"分":{"docs":{},"析":{"docs":{},"：":{"docs":{},"例":{"docs":{},"如":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}},"以":{"docs":{},"后":{"docs":{},"做":{"docs":{},"题":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"计":{"docs":{},"数":{"docs":{},"类":{"docs":{},"的":{"docs":{},"题":{"docs":{},"目":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"要":{"docs":{},"用":{"docs":{},"d":{"docs":{},"p":{"docs":{},"了":{"docs":{},"；":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}},"但":{"docs":{},"是":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"关":{"docs":{},"系":{"docs":{},"是":{"docs":{},"原":{"docs":{},"始":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"复":{"docs":{},"制":{"docs":{},"到":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"话":{"docs":{},"还":{"docs":{},"是":{"docs":{},"指":{"docs":{},"向":{"docs":{},"原":{"docs":{},"始":{"docs":{},"链":{"docs":{},"表":{"docs":{},"；":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"位":{"docs":{},"因":{"docs":{},"子":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{},"=":{"1":{"0":{"docs":{},"的":{"docs":{},"x":{"docs":{},"次":{"docs":{},"方":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}}}}}}}}}},"低":{"docs":{},"位":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"高":{"docs":{},"位":{"docs":{},"！":{"docs":{},"所":{"docs":{},"以":{"docs":{},"先":{"docs":{},"处":{"docs":{},"理":{"docs":{},"低":{"docs":{},"位":{"docs":{},"再":{"docs":{},"处":{"docs":{},"理":{"docs":{},"高":{"docs":{},"位":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}},"你":{"docs":{},"可":{"docs":{},"以":{"docs":{},"假":{"docs":{},"设":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"非":{"docs":{},"空":{"docs":{},"的":{"docs":{},"，":{"docs":{},"并":{"docs":{},"且":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"总":{"docs":{},"是":{"docs":{},"存":{"docs":{},"在":{"docs":{},"多":{"docs":{},"数":{"docs":{},"元":{"docs":{},"素":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"先":{"docs":{},"对":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"进":{"docs":{},"行":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"把":{"docs":{},"中":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"存":{"docs":{},"储":{"docs":{},"到":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"，":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"把":{"docs":{},"节":{"docs":{},"点":{"docs":{},"记":{"docs":{},"录":{"docs":{},"到":{"docs":{},"p":{"docs":{},"a":{"docs":{},"t":{"docs":{},"h":{"docs":{},"数":{"docs":{},"组":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}},"分":{"docs":{},"析":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"=":{"1":{"docs":{},"时":{"docs":{},"已":{"docs":{},"经":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"该":{"docs":{},"情":{"docs":{},"况":{"docs":{},"；":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}},"docs":{}},"位":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"位":{"docs":{},"的":{"docs":{},"影":{"docs":{},"响":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"位":{"docs":{},"影":{"docs":{},"响":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"每":{"docs":{},"位":{"docs":{},"出":{"docs":{},"现":{"1":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"，":{"docs":{},"依":{"docs":{},"次":{"docs":{},"从":{"docs":{},"个":{"docs":{},"位":{"docs":{},"分":{"docs":{},"析":{"docs":{},"到":{"docs":{},"高":{"docs":{},"位":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}},"docs":{}}}}}},"别":{"docs":{},"有":{"docs":{},"两":{"docs":{},"种":{"docs":{},"解":{"docs":{},"法":{"docs":{},"，":{"docs":{},"迭":{"docs":{},"代":{"docs":{},"和":{"docs":{},"递":{"docs":{},"归":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}},"则":{"docs":{},"依":{"docs":{},"次":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"数":{"docs":{},"字":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},",":{"8":{"docs":{},",":{"1":{"2":{"docs":{},",":{"1":{"6":{"docs":{},",":{"1":{"5":{"docs":{},",":{"1":{"4":{"docs":{},",":{"1":{"3":{"docs":{},",":{"9":{"docs":{},",":{"5":{"docs":{},",":{"6":{"docs":{},",":{"7":{"docs":{},",":{"1":{"1":{"docs":{},",":{"1":{"0":{"docs":{},".":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}},"判":{"docs":{},"断":{"docs":{},"是":{"docs":{},"否":{"docs":{},"为":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"且":{"docs":{},"满":{"docs":{},"足":{"docs":{},"和":{"docs":{},"值":{"docs":{},"条":{"docs":{},"件":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}},"到":{"docs":{},"达":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"到":{"docs":{},"达":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"是":{"docs":{},"否":{"docs":{},"满":{"docs":{},"足":{"docs":{},"和":{"docs":{},"值":{"docs":{},"条":{"docs":{},"件":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}},"依":{"docs":{},"据":{"docs":{},"是":{"docs":{},"快":{"docs":{},"指":{"docs":{},"针":{"docs":{},"和":{"docs":{},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}},"前":{"docs":{},"面":{"docs":{},"求":{"docs":{},"和":{"docs":{},"是":{"docs":{},"正":{"docs":{},"贡":{"docs":{},"献":{"docs":{},"，":{"docs":{},"加":{"docs":{},"起":{"docs":{},"来":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},"剑":{"docs":{},"指":{"docs":{},"o":{"docs":{},"f":{"docs":{},"f":{"docs":{},"e":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":10.000654022236755}}}}}}}}},"加":{"docs":{},"上":{"docs":{},"结":{"docs":{},"束":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"值":{"docs":{},"恰":{"docs":{},"好":{"docs":{},"等":{"docs":{},"于":{"docs":{},"期":{"docs":{},"望":{"docs":{},"的":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"值":{"docs":{},"，":{"docs":{},"这":{"docs":{},"里":{"docs":{},"需":{"docs":{},"要":{"docs":{},"从":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"递":{"docs":{},"归":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"每":{"docs":{},"递":{"docs":{},"归":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"s":{"docs":{},"u":{"docs":{},"m":{"docs":{},"值":{"docs":{},"减":{"docs":{},"去":{"docs":{},"节":{"docs":{},"点":{"docs":{},"的":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"，":{"docs":{},"直":{"docs":{},"到":{"docs":{},"减":{"docs":{},"去":{"docs":{},"最":{"docs":{},"后":{"docs":{},"的":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"恰":{"docs":{},"好":{"docs":{},"等":{"docs":{},"于":{"0":{"docs":{},"，":{"docs":{},"条":{"docs":{},"件":{"docs":{},"等":{"docs":{},"价":{"docs":{},"于":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"题":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"包":{"docs":{},"含":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"的":{"docs":{},"栈":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}},"即":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"反":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"需":{"docs":{},"要":{"docs":{},"使":{"docs":{},"用":{"docs":{},"三":{"docs":{},"个":{"docs":{},"临":{"docs":{},"时":{"docs":{},"变":{"docs":{},"量":{"docs":{},"来":{"docs":{},"解":{"docs":{},"决":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}},"只":{"docs":{},"有":{"1":{"0":{"docs":{},"个":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}},"docs":{},"h":{"docs":{},"i":{"docs":{},"g":{"docs":{},"h":{"docs":{},"和":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"同":{"docs":{},"时":{"docs":{},"为":{"0":{"docs":{},"时":{"docs":{},"，":{"docs":{},"才":{"docs":{},"会":{"docs":{},"使":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"覆":{"docs":{},"盖":{"docs":{},"到":{"docs":{},"最":{"docs":{},"高":{"docs":{},"位":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"看":{"docs":{},"注":{"docs":{},"释":{"docs":{},"里":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},"表":{"docs":{},"示":{"docs":{},"了":{"docs":{},"递":{"docs":{},"推":{"docs":{},"关":{"docs":{},"系":{"docs":{},"，":{"docs":{},"从":{"docs":{},"正":{"docs":{},"贡":{"docs":{},"献":{"docs":{},"和":{"docs":{},"负":{"docs":{},"贡":{"docs":{},"献":{"docs":{},"的":{"docs":{},"角":{"docs":{},"度":{"docs":{},"去":{"docs":{},"思":{"docs":{},"考":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"哈":{"docs":{},"希":{"docs":{},"法":{"docs":{},"，":{"docs":{},"找":{"docs":{},"到":{"docs":{},"出":{"docs":{},"现":{"docs":{},"数":{"docs":{},"组":{"docs":{},"长":{"docs":{},"度":{"docs":{},"二":{"docs":{},"分":{"docs":{},"之":{"docs":{},"一":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}},"回":{"docs":{},"忆":{"docs":{},"一":{"docs":{},"下":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"三":{"docs":{},"要":{"docs":{},"素":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}},"文":{"docs":{},"数":{"docs":{},"判":{"docs":{},"断":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"因":{"docs":{},"为":{"docs":{},"不":{"docs":{},"满":{"docs":{},"足":{"docs":{},"最":{"docs":{},"优":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"条":{"docs":{},"件":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"复":{"docs":{},"制":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"：":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"数":{"docs":{},"对":{"docs":{},"应":{"docs":{},"状":{"docs":{},"态":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"累":{"docs":{},"加":{"docs":{},"第":{"docs":{},"i":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}},"定":{"docs":{},"义":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"数":{"docs":{},"据":{"docs":{},"结":{"docs":{},"构":{"docs":{},"，":{"docs":{},"请":{"docs":{},"在":{"docs":{},"该":{"docs":{},"类":{"docs":{},"型":{"docs":{},"中":{"docs":{},"实":{"docs":{},"现":{"docs":{},"一":{"docs":{},"个":{"docs":{},"能":{"docs":{},"够":{"docs":{},"得":{"docs":{},"到":{"docs":{},"栈":{"docs":{},"中":{"docs":{},"所":{"docs":{},"含":{"docs":{},"最":{"docs":{},"小":{"docs":{},"元":{"docs":{},"素":{"docs":{},"的":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"函":{"docs":{},"数":{"docs":{},"（":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"应":{"docs":{},"为":{"docs":{},"o":{"docs":{},"（":{"1":{"docs":{},"）":{"docs":{},"）":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"寻":{"docs":{},"找":{"docs":{},"切":{"docs":{},"分":{"docs":{},"点":{"docs":{},"，":{"docs":{},"从":{"docs":{},"后":{"docs":{},"往":{"docs":{},"前":{"docs":{},"寻":{"docs":{},"找":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},"当":{"docs":{},"前":{"docs":{},"位":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"=":{"5":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}},"，":{"docs":{},"低":{"docs":{},"位":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"，":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}},"快":{"docs":{},"排":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"慢":{"docs":{},"指":{"docs":{},"针":{"docs":{},"还":{"docs":{},"是":{"docs":{},"不":{"docs":{},"错":{"docs":{},"的":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}},"我":{"docs":{},"的":{"docs":{},"理":{"docs":{},"解":{"docs":{},"是":{"docs":{},"：":{"docs":{},"逐":{"docs":{},"个":{"docs":{},"比":{"docs":{},"较":{"docs":{},"，":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"和":{"docs":{},"自":{"docs":{},"己":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"票":{"docs":{},"数":{"docs":{},"+":{"1":{"docs":{},"，":{"docs":{},"遇":{"docs":{},"到":{"docs":{},"和":{"docs":{},"自":{"docs":{},"己":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"票":{"docs":{},"数":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}},"或":{"docs":{},"者":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"操":{"docs":{},"作":{"docs":{},"给":{"docs":{},"定":{"docs":{},"的":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"，":{"docs":{},"将":{"docs":{},"其":{"docs":{},"变":{"docs":{},"换":{"docs":{},"为":{"docs":{},"源":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"镜":{"docs":{},"像":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}},"无":{"docs":{},"后":{"docs":{},"效":{"docs":{},"型":{"docs":{},"可":{"docs":{},"以":{"docs":{},"理":{"docs":{},"解":{"docs":{},"为":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"表":{"docs":{},"中":{"docs":{},"只":{"docs":{},"关":{"docs":{},"注":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"之":{"docs":{},"前":{"docs":{},"的":{"docs":{},"表":{"docs":{},"项":{"docs":{},"，":{"docs":{},"而":{"docs":{},"和":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"之":{"docs":{},"后":{"docs":{},"的":{"docs":{},"没":{"docs":{},"关":{"docs":{},"系":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"性":{"docs":{},"（":{"docs":{},"求":{"docs":{},"解":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"只":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"状":{"docs":{},"态":{"docs":{},"）":{"docs":{},"，":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}},"论":{"docs":{},"如":{"docs":{},"何":{"docs":{},"都":{"docs":{},"会":{"docs":{},"有":{"2":{"3":{"4":{"docs":{},"\\":{"docs":{},"*":{"docs":{},"d":{"docs":{},"i":{"docs":{},"g":{"docs":{},"i":{"docs":{},"t":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}},"docs":{}},"docs":{}},"docs":{}}}}}}}},"最":{"docs":{},"优":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"就":{"docs":{},"是":{"docs":{},"找":{"docs":{},"到":{"docs":{},"累":{"docs":{},"加":{"docs":{},"起":{"docs":{},"来":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"；":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}},"（":{"docs":{},"最":{"docs":{},"优":{"docs":{},"解":{"docs":{},"就":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"）":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}},"低":{"docs":{},"位":{"docs":{},"l":{"docs":{},"o":{"docs":{},"w":{"docs":{},"=":{"6":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}}}}}}},"后":{"docs":{},"琢":{"docs":{},"磨":{"docs":{},"一":{"docs":{},"个":{"docs":{},"小":{"docs":{},"时":{"docs":{},"做":{"docs":{},"不":{"docs":{},"出":{"docs":{},"来":{"docs":{},"还":{"docs":{},"是":{"docs":{},"看":{"docs":{},"了":{"docs":{},"题":{"docs":{},"解":{"docs":{},"，":{"docs":{},"看":{"docs":{},"题":{"docs":{},"解":{"docs":{},"都":{"docs":{},"费":{"docs":{},"很":{"docs":{},"大":{"docs":{},"劲":{"docs":{},"，":{"docs":{},"思":{"docs":{},"路":{"docs":{},"各":{"docs":{},"异":{"docs":{},"；":{"docs":{},"我":{"docs":{},"选":{"docs":{},"择":{"docs":{},"推":{"docs":{},"荐":{"docs":{},"题":{"docs":{},"解":{"docs":{},"来":{"docs":{},"理":{"docs":{},"解":{"docs":{},"一":{"docs":{},"下":{"docs":{},"，":{"docs":{},"也":{"docs":{},"算":{"docs":{},"是":{"docs":{},"做":{"docs":{},"这":{"docs":{},"种":{"docs":{},"题":{"docs":{},"目":{"docs":{},"的":{"docs":{},"一":{"docs":{},"种":{"docs":{},"思":{"docs":{},"路":{"docs":{},"吧":{"docs":{},"！":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"返":{"docs":{},"回":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"因":{"docs":{},"此":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}},"小":{"docs":{},"的":{"docs":{},"k":{"docs":{},"个":{"docs":{},"数":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"有":{"docs":{},"缘":{"docs":{},"再":{"docs":{},"续":{"docs":{},"，":{"docs":{},"做":{"docs":{},"到":{"docs":{},"现":{"docs":{},"在":{"docs":{},"感":{"docs":{},"觉":{"docs":{},"做":{"docs":{},"了":{"docs":{},"后":{"docs":{},"面":{"docs":{},"的":{"docs":{},"忘":{"docs":{},"了":{"docs":{},"前":{"docs":{},"面":{"docs":{},"的":{"docs":{},"，":{"docs":{},"接":{"docs":{},"下":{"docs":{},"来":{"docs":{},"我":{"docs":{},"想":{"docs":{},"分":{"docs":{},"类":{"docs":{},"刷":{"docs":{},"题":{"4":{"docs":{},"个":{"docs":{},"月":{"docs":{},"看":{"docs":{},"看":{"docs":{},"效":{"docs":{},"果":{"docs":{},"如":{"docs":{},"何":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"本":{"docs":{},"题":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"d":{"docs":{},"f":{"docs":{},"s":{"docs":{},"算":{"docs":{},"法":{"docs":{},"题":{"docs":{},"，":{"docs":{},"每":{"docs":{},"层":{"docs":{},"递":{"docs":{},"归":{"docs":{},"处":{"docs":{},"理":{"docs":{},"一":{"docs":{},"个":{"docs":{},"字":{"docs":{},"符":{"docs":{},"，":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"就":{"docs":{},"是":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"层":{"docs":{},"数":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"画":{"docs":{},"一":{"docs":{},"棵":{"docs":{},"多":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"来":{"docs":{},"分":{"docs":{},"析":{"docs":{},"。":{"docs":{},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"情":{"docs":{},"况":{"docs":{},"可":{"docs":{},"以":{"docs":{},"画":{"docs":{},"一":{"docs":{},"个":{"docs":{},"树":{"docs":{},"来":{"docs":{},"表":{"docs":{},"示":{"docs":{},"，":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"的":{"docs":{},"题":{"docs":{},"解":{"docs":{},"有":{"docs":{},"图":{"docs":{},"，":{"docs":{},"可":{"docs":{},"以":{"docs":{},"看":{"docs":{},"看":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"来":{"docs":{},"源":{"docs":{},"：":{"docs":{},"力":{"docs":{},"扣":{"docs":{},"（":{"docs":{},"l":{"docs":{},"e":{"docs":{},"e":{"docs":{},"t":{"docs":{},"c":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{},"）":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}},"栈":{"docs":{},"的":{"docs":{},"压":{"docs":{},"入":{"docs":{},"、":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"序":{"docs":{},"列":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}},"树":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"检":{"docs":{},"查":{"docs":{},"前":{"docs":{},"半":{"docs":{},"段":{"docs":{},"数":{"docs":{},"字":{"docs":{},"是":{"docs":{},"否":{"docs":{},"都":{"docs":{},"是":{"docs":{},"符":{"docs":{},"合":{"docs":{},"小":{"docs":{},"于":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}},"是":{"docs":{},"否":{"docs":{},"溢":{"docs":{},"出":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}},"每":{"docs":{},"个":{"docs":{},"阶":{"docs":{},"段":{"docs":{},"/":{"docs":{},"状":{"docs":{},"态":{"docs":{},"：":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"从":{"docs":{},"第":{"docs":{},"i":{"docs":{},"个":{"docs":{},"数":{"docs":{},"往":{"docs":{},"前":{"docs":{},"累":{"docs":{},"加":{"docs":{},"取":{"docs":{},"得":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"的":{"docs":{},"状":{"docs":{},"态":{"docs":{},"，":{"docs":{},"只":{"docs":{},"需":{"docs":{},"记":{"docs":{},"录":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"，":{"docs":{},"无":{"docs":{},"需":{"docs":{},"记":{"docs":{},"录":{"docs":{},"其":{"docs":{},"实":{"docs":{},"下":{"docs":{},"标":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"注":{"docs":{},"意":{"docs":{},"：":{"docs":{},"保":{"docs":{},"证":{"docs":{},"测":{"docs":{},"试":{"docs":{},"中":{"docs":{},"不":{"docs":{},"会":{"docs":{},"当":{"docs":{},"栈":{"docs":{},"为":{"docs":{},"空":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"，":{"docs":{},"对":{"docs":{},"栈":{"docs":{},"调":{"docs":{},"用":{"docs":{},"p":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"或":{"docs":{},"者":{"docs":{},"m":{"docs":{},"i":{"docs":{},"n":{"docs":{},"(":{"docs":{},")":{"docs":{},"或":{"docs":{},"者":{"docs":{},"t":{"docs":{},"o":{"docs":{},"p":{"docs":{},"(":{"docs":{},")":{"docs":{},"方":{"docs":{},"法":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"状":{"docs":{},"态":{"docs":{},"转":{"docs":{},"移":{"docs":{},"方":{"docs":{},"程":{"docs":{},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"的":{"docs":{},"和":{"docs":{},"最":{"docs":{},"大":{"docs":{},"，":{"docs":{},"为":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"数":{"docs":{},"字":{"docs":{},"有":{"1":{"docs":{},"、":{"1":{"0":{"docs":{},"、":{"1":{"1":{"docs":{},"和":{"1":{"2":{"docs":{},"，":{"1":{"docs":{},"一":{"docs":{},"共":{"docs":{},"出":{"docs":{},"现":{"docs":{},"了":{"5":{"docs":{},"次":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"docs":{}}}}}}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}},"docs":{}}},"docs":{}}}}},"示":{"docs":{},"例":{"1":{"docs":{},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0032701111837802484}}}},"第":{"docs":{},"三":{"docs":{},"次":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"，":{"docs":{},"拆":{"docs":{},"分":{"docs":{},"链":{"docs":{},"表":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}},"一":{"docs":{},"遍":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"，":{"docs":{},"k":{"docs":{},"e":{"docs":{},"y":{"docs":{},"作":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"值":{"docs":{},"，":{"docs":{},"v":{"docs":{},"a":{"docs":{},"l":{"docs":{},"u":{"docs":{},"e":{"docs":{},"作":{"docs":{},"为":{"docs":{},"数":{"docs":{},"组":{"docs":{},"下":{"docs":{},"标":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}}}}}},"二":{"docs":{},"遍":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"，":{"docs":{},"根":{"docs":{},"据":{"docs":{},"目":{"docs":{},"标":{"docs":{},"做":{"docs":{},"减":{"docs":{},"法":{"docs":{},"，":{"docs":{},"减":{"docs":{},"法":{"docs":{},"所":{"docs":{},"得":{"docs":{},"值":{"docs":{},"在":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{},"中":{"docs":{},"查":{"docs":{},"询":{"docs":{},"o":{"docs":{},"(":{"1":{"docs":{},")":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"有":{"docs":{},"就":{"docs":{},"返":{"docs":{},"回":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"结":{"docs":{},"束":{"docs":{},"节":{"docs":{},"点":{"docs":{},"是":{"docs":{},"一":{"docs":{},"个":{"docs":{},"叶":{"docs":{},"子":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"实":{"docs":{},"现":{"docs":{},"为":{"docs":{},"代":{"docs":{},"码":{"docs":{},"就":{"docs":{},"是":{"docs":{},"n":{"docs":{},"o":{"docs":{},"d":{"docs":{},"e":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}},"构":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"而":{"docs":{},"是":{"docs":{},"计":{"docs":{},"数":{"docs":{},"为":{"docs":{},"主":{"docs":{},";":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"肯":{"docs":{},"定":{"docs":{},"要":{"docs":{},"直":{"docs":{},"接":{"docs":{},"算":{"docs":{},"上":{"1":{"0":{"docs":{},"个":{"1":{"docs":{},"；":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}}},"docs":{}},"docs":{}}}}}}}},"著":{"docs":{},"作":{"docs":{},"权":{"docs":{},"归":{"docs":{},"领":{"docs":{},"扣":{"docs":{},"网":{"docs":{},"络":{"docs":{},"所":{"docs":{},"有":{"docs":{},"。":{"docs":{},"商":{"docs":{},"业":{"docs":{},"转":{"docs":{},"载":{"docs":{},"请":{"docs":{},"联":{"docs":{},"系":{"docs":{},"官":{"docs":{},"方":{"docs":{},"授":{"docs":{},"权":{"docs":{},"，":{"docs":{},"非":{"docs":{},"商":{"docs":{},"业":{"docs":{},"转":{"docs":{},"载":{"docs":{},"请":{"docs":{},"注":{"docs":{},"明":{"docs":{},"出":{"docs":{},"处":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"要":{"docs":{},"求":{"docs":{},"时":{"docs":{},"间":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"度":{"docs":{},"为":{"docs":{},"o":{"docs":{},"(":{"docs":{},"n":{"docs":{},")":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}},"解":{"docs":{},"决":{"docs":{},"思":{"docs":{},"路":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}},"方":{"docs":{},"法":{"1":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}}}},"法":{"1":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},":":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}}},"2":{"docs":{},"：":{"docs":{},"堆":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"摩":{"docs":{},"尔":{"docs":{},"投":{"docs":{},"票":{"docs":{},"法":{"docs":{},"：":{"docs":{},"核":{"docs":{},"心":{"docs":{},"思":{"docs":{},"想":{"docs":{},"就":{"docs":{},"是":{"docs":{},"投":{"docs":{},"票":{"docs":{},"，":{"docs":{},"出":{"docs":{},"现":{"docs":{},"相":{"docs":{},"同":{"docs":{},"的":{"docs":{},"加":{"docs":{},"票":{"docs":{},"，":{"docs":{},"出":{"docs":{},"现":{"docs":{},"不":{"docs":{},"同":{"docs":{},"的":{"docs":{},"减":{"docs":{},"票":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"遍":{"docs":{},"哈":{"docs":{},"希":{"docs":{},"表":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}},":":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"解":{"docs":{},"决":{"docs":{},"这":{"docs":{},"道":{"docs":{},"题":{"docs":{},"目":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}},"释":{"docs":{},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"输":{"docs":{},"入":{"docs":{},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"一":{"docs":{},"个":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"（":{"docs":{},"每":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"中":{"docs":{},"有":{"docs":{},"节":{"docs":{},"点":{"docs":{},"值":{"docs":{},"，":{"docs":{},"以":{"docs":{},"及":{"docs":{},"两":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"，":{"docs":{},"一":{"docs":{},"个":{"docs":{},"指":{"docs":{},"向":{"docs":{},"下":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"，":{"docs":{},"另":{"docs":{},"一":{"docs":{},"个":{"docs":{},"特":{"docs":{},"殊":{"docs":{},"指":{"docs":{},"针":{"docs":{},"指":{"docs":{},"向":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"节":{"docs":{},"点":{"docs":{},"）":{"docs":{},"，":{"docs":{},"返":{"docs":{},"回":{"docs":{},"结":{"docs":{},"果":{"docs":{},"为":{"docs":{},"复":{"docs":{},"制":{"docs":{},"后":{"docs":{},"复":{"docs":{},"杂":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"。":{"docs":{},"（":{"docs":{},"注":{"docs":{},"意":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"结":{"docs":{},"果":{"docs":{},"中":{"docs":{},"请":{"docs":{},"不":{"docs":{},"要":{"docs":{},"返":{"docs":{},"回":{"docs":{},"参":{"docs":{},"数":{"docs":{},"中":{"docs":{},"的":{"docs":{},"节":{"docs":{},"点":{"docs":{},"引":{"docs":{},"用":{"docs":{},"，":{"docs":{},"否":{"docs":{},"则":{"docs":{},"判":{"docs":{},"题":{"docs":{},"程":{"docs":{},"序":{"docs":{},"会":{"docs":{},"直":{"docs":{},"接":{"docs":{},"返":{"docs":{},"回":{"docs":{},"空":{"docs":{},"）":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},",":{"docs":{},"按":{"docs":{},"字":{"docs":{},"典":{"docs":{},"序":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"该":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"中":{"docs":{},"字":{"docs":{},"符":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"排":{"docs":{},"列":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"输":{"docs":{},"入":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},",":{"docs":{},"则":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"由":{"docs":{},"字":{"docs":{},"符":{"docs":{},"a":{"docs":{},",":{"docs":{},"b":{"docs":{},",":{"docs":{},"c":{"docs":{},"所":{"docs":{},"能":{"docs":{},"排":{"docs":{},"列":{"docs":{},"出":{"docs":{},"来":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"字":{"docs":{},"符":{"docs":{},"串":{"docs":{},"a":{"docs":{},"b":{"docs":{},"c":{"docs":{},",":{"docs":{},"a":{"docs":{},"c":{"docs":{},"b":{"docs":{},",":{"docs":{},"b":{"docs":{},"a":{"docs":{},"c":{"docs":{},",":{"docs":{},"b":{"docs":{},"c":{"docs":{},"a":{"docs":{},",":{"docs":{},"c":{"docs":{},"a":{"docs":{},"b":{"docs":{},"和":{"docs":{},"c":{"docs":{},"b":{"docs":{},"a":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"整":{"docs":{},"型":{"docs":{},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"数":{"docs":{},"组":{"docs":{},"里":{"docs":{},"有":{"docs":{},"正":{"docs":{},"数":{"docs":{},"也":{"docs":{},"有":{"docs":{},"负":{"docs":{},"数":{"docs":{},"。":{"docs":{},"数":{"docs":{},"组":{"docs":{},"中":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"或":{"docs":{},"连":{"docs":{},"续":{"docs":{},"多":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"组":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"。":{"docs":{},"求":{"docs":{},"所":{"docs":{},"有":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"和":{"docs":{},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"值":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"数":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"数":{"docs":{},"组":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"该":{"docs":{},"数":{"docs":{},"组":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"某":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"的":{"docs":{},"后":{"docs":{},"序":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"的":{"docs":{},"结":{"docs":{},"果":{"docs":{},"。":{"docs":{},"如":{"docs":{},"果":{"docs":{},"是":{"docs":{},"则":{"docs":{},"输":{"docs":{},"出":{"docs":{},"y":{"docs":{},"e":{"docs":{},"s":{"docs":{},",":{"docs":{},"否":{"docs":{},"则":{"docs":{},"输":{"docs":{},"出":{"docs":{},"n":{"docs":{},"o":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"输":{"docs":{},"入":{"docs":{},"的":{"docs":{},"数":{"docs":{},"组":{"docs":{},"的":{"docs":{},"任":{"docs":{},"意":{"docs":{},"两":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"都":{"docs":{},"互":{"docs":{},"不":{"docs":{},"相":{"docs":{},"同":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"矩":{"docs":{},"阵":{"docs":{},"，":{"docs":{},"按":{"docs":{},"照":{"docs":{},"从":{"docs":{},"外":{"docs":{},"向":{"docs":{},"里":{"docs":{},"以":{"docs":{},"顺":{"docs":{},"时":{"docs":{},"针":{"docs":{},"的":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"依":{"docs":{},"次":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"每":{"docs":{},"一":{"docs":{},"个":{"docs":{},"数":{"docs":{},"字":{"docs":{},"，":{"docs":{},"例":{"docs":{},"如":{"docs":{},"，":{"docs":{},"如":{"docs":{},"果":{"docs":{},"输":{"docs":{},"入":{"docs":{},"如":{"docs":{},"下":{"4":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"反":{"docs":{},"转":{"docs":{},"链":{"docs":{},"表":{"docs":{},"后":{"docs":{},"，":{"docs":{},"输":{"docs":{},"出":{"docs":{},"新":{"docs":{},"链":{"docs":{},"表":{"docs":{},"的":{"docs":{},"表":{"docs":{},"头":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"，":{"docs":{},"将":{"docs":{},"该":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"树":{"docs":{},"转":{"docs":{},"换":{"docs":{},"成":{"docs":{},"一":{"docs":{},"个":{"docs":{},"排":{"docs":{},"序":{"docs":{},"的":{"docs":{},"双":{"docs":{},"向":{"docs":{},"链":{"docs":{},"表":{"docs":{},"。":{"docs":{},"要":{"docs":{},"求":{"docs":{},"不":{"docs":{},"能":{"docs":{},"创":{"docs":{},"建":{"docs":{},"任":{"docs":{},"何":{"docs":{},"新":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"，":{"docs":{},"只":{"docs":{},"能":{"docs":{},"调":{"docs":{},"整":{"docs":{},"树":{"docs":{},"中":{"docs":{},"结":{"docs":{},"点":{"docs":{},"指":{"docs":{},"针":{"docs":{},"的":{"docs":{},"指":{"docs":{},"向":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"颗":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"节":{"docs":{},"点":{"docs":{},"和":{"docs":{},"一":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"，":{"docs":{},"打":{"docs":{},"印":{"docs":{},"出":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"中":{"docs":{},"结":{"docs":{},"点":{"docs":{},"值":{"docs":{},"的":{"docs":{},"和":{"docs":{},"为":{"docs":{},"输":{"docs":{},"入":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{},"路":{"docs":{},"径":{"docs":{},"定":{"docs":{},"义":{"docs":{},"为":{"docs":{},"从":{"docs":{},"树":{"docs":{},"的":{"docs":{},"根":{"docs":{},"结":{"docs":{},"点":{"docs":{},"开":{"docs":{},"始":{"docs":{},"往":{"docs":{},"下":{"docs":{},"一":{"docs":{},"直":{"docs":{},"到":{"docs":{},"叶":{"docs":{},"结":{"docs":{},"点":{"docs":{},"所":{"docs":{},"经":{"docs":{},"过":{"docs":{},"的":{"docs":{},"结":{"docs":{},"点":{"docs":{},"形":{"docs":{},"成":{"docs":{},"一":{"docs":{},"条":{"docs":{},"路":{"docs":{},"径":{"docs":{},"。":{"docs":{},"(":{"docs":{},"注":{"docs":{},"意":{"docs":{},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"两":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"第":{"docs":{},"一":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"表":{"docs":{},"示":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"压":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"请":{"docs":{},"判":{"docs":{},"断":{"docs":{},"第":{"docs":{},"二":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"是":{"docs":{},"否":{"docs":{},"可":{"docs":{},"能":{"docs":{},"为":{"docs":{},"该":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"。":{"docs":{},"假":{"docs":{},"设":{"docs":{},"压":{"docs":{},"入":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"所":{"docs":{},"有":{"docs":{},"数":{"docs":{},"字":{"docs":{},"均":{"docs":{},"不":{"docs":{},"相":{"docs":{},"等":{"docs":{},"。":{"docs":{},"例":{"docs":{},"如":{"docs":{},"序":{"docs":{},"列":{"1":{"docs":{},",":{"2":{"docs":{},",":{"3":{"docs":{},",":{"4":{"docs":{},",":{"5":{"docs":{},"是":{"docs":{},"某":{"docs":{},"栈":{"docs":{},"的":{"docs":{},"压":{"docs":{},"入":{"docs":{},"顺":{"docs":{},"序":{"docs":{},"，":{"docs":{},"序":{"docs":{},"列":{"4":{"docs":{},",":{"5":{"docs":{},",":{"3":{"docs":{},",":{"2":{"docs":{},",":{"1":{"docs":{},"是":{"docs":{},"该":{"docs":{},"压":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"对":{"docs":{},"应":{"docs":{},"的":{"docs":{},"一":{"docs":{},"个":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"序":{"docs":{},"列":{"docs":{},"，":{"docs":{},"但":{"4":{"docs":{},",":{"3":{"docs":{},",":{"5":{"docs":{},",":{"1":{"docs":{},",":{"2":{"docs":{},"就":{"docs":{},"不":{"docs":{},"可":{"docs":{},"能":{"docs":{},"是":{"docs":{},"该":{"docs":{},"压":{"docs":{},"栈":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"弹":{"docs":{},"出":{"docs":{},"序":{"docs":{},"列":{"docs":{},"。":{"docs":{},"（":{"docs":{},"注":{"docs":{},"意":{"docs":{},"：":{"docs":{},"这":{"docs":{},"两":{"docs":{},"个":{"docs":{},"序":{"docs":{},"列":{"docs":{},"的":{"docs":{},"长":{"docs":{},"度":{"docs":{},"是":{"docs":{},"相":{"docs":{},"等":{"docs":{},"的":{"docs":{},"）":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}},"docs":{}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"棵":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{},"a":{"docs":{},"，":{"docs":{},"b":{"docs":{},"，":{"docs":{},"判":{"docs":{},"断":{"docs":{},"b":{"docs":{},"是":{"docs":{},"不":{"docs":{},"是":{"docs":{},"a":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"。":{"docs":{},"（":{"docs":{},"p":{"docs":{},"s":{"docs":{},"：":{"docs":{},"我":{"docs":{},"们":{"docs":{},"约":{"docs":{},"定":{"docs":{},"空":{"docs":{},"树":{"docs":{},"不":{"docs":{},"是":{"docs":{},"任":{"docs":{},"意":{"docs":{},"一":{"docs":{},"个":{"docs":{},"树":{"docs":{},"的":{"docs":{},"子":{"docs":{},"结":{"docs":{},"构":{"docs":{},"）":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"判":{"docs":{},"空":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"描":{"docs":{},"述":{"docs":{},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"整":{"docs":{},"数":{"docs":{},"数":{"docs":{},"组":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}},"：":{"docs":{},"a":{"docs":{},"r":{"docs":{},"r":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}},"n":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}}}},"出":{"docs":{},":":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0013080444735120995}}},"：":{"5":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"6":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}},"docs":{},"[":{"0":{"docs":{},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"1":{"docs":{},",":{"2":{"docs":{},"]":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}}},"docs":{}}}}},"边":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"连":{"docs":{},"续":{"docs":{},"子":{"docs":{},"数":{"docs":{},"组":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}},"的":{"docs":{},"最":{"docs":{},"大":{"docs":{},"和":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}},"递":{"docs":{},"归":{"docs":{},"的":{"docs":{},"设":{"docs":{},"计":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}},"重":{"docs":{},"复":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"就":{"docs":{},"是":{"docs":{},"动":{"docs":{},"态":{"docs":{},"规":{"docs":{},"划":{"docs":{},"表":{"docs":{},"的":{"docs":{},"每":{"docs":{},"一":{"docs":{},"次":{"docs":{},"求":{"docs":{},"值":{"docs":{},"，":{"docs":{},"可":{"docs":{},"能":{"docs":{},"会":{"docs":{},"依":{"docs":{},"赖":{"docs":{},"前":{"docs":{},"一":{"docs":{},"个":{"docs":{},"表":{"docs":{},"项":{"docs":{},"的":{"docs":{},"值":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}},"（":{"docs":{},"后":{"docs":{},"续":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"求":{"docs":{},"解":{"docs":{},"，":{"docs":{},"需":{"docs":{},"要":{"docs":{},"重":{"docs":{},"复":{"docs":{},"求":{"docs":{},"解":{"docs":{},"前":{"docs":{},"面":{"docs":{},"子":{"docs":{},"问":{"docs":{},"题":{"docs":{},"的":{"docs":{},"解":{"docs":{},"）":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"镜":{"docs":{},"像":{"docs":{},"二":{"docs":{},"叉":{"docs":{},"树":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}},"限":{"docs":{},"制":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"面":{"docs":{},"试":{"docs":{},"题":{"4":{"3":{"docs":{},".":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}},"docs":{}},"docs":{}}}},"顺":{"docs":{},"时":{"docs":{},"针":{"docs":{},"打":{"docs":{},"印":{"docs":{},"矩":{"docs":{},"阵":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"题":{"docs":{},"解":{"docs":{},"：":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}},"首":{"docs":{},"先":{"docs":{},"想":{"docs":{},"到":{"docs":{},"的":{"docs":{},"办":{"docs":{},"法":{"docs":{},"是":{"docs":{},"直":{"docs":{},"接":{"docs":{},"遍":{"docs":{},"历":{"docs":{},"一":{"docs":{},"遍":{"docs":{},"，":{"docs":{},"把":{"docs":{},"指":{"docs":{},"针":{"docs":{},"关":{"docs":{},"系":{"docs":{},"记":{"docs":{},"录":{"docs":{},"下":{"docs":{},"来":{"docs":{},"，":{"docs":{},"复":{"docs":{},"制":{"docs":{},"的":{"docs":{},"时":{"docs":{},"候":{"docs":{},"再":{"docs":{},"把":{"docs":{},"指":{"docs":{},"针":{"docs":{},"关":{"docs":{},"系":{"docs":{},"恢":{"docs":{},"复":{"docs":{},"上":{"docs":{},"去":{"docs":{},"；":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"排":{"docs":{},"除":{"docs":{},"暴":{"docs":{},"力":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"，":{"docs":{},"已":{"docs":{},"验":{"docs":{},"证":{"docs":{},"会":{"docs":{},"超":{"docs":{},"时":{"docs":{},"；":{"docs":{},"这":{"docs":{},"种":{"docs":{},"题":{"docs":{},"看":{"docs":{},"起":{"docs":{},"来":{"docs":{},"像":{"docs":{},"是":{"docs":{},"d":{"docs":{},"p":{"docs":{},"可":{"docs":{},"以":{"docs":{},"做":{"docs":{},"的":{"docs":{},"题":{"docs":{},"，":{"docs":{},"但":{"docs":{},"实":{"docs":{},"际":{"docs":{},"上":{"docs":{},"并":{"docs":{},"太":{"docs":{},"好":{"docs":{},"用":{"docs":{},"d":{"docs":{},"p":{"docs":{},"去":{"docs":{},"做":{"docs":{},",":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"稳":{"docs":{},"妥":{"docs":{},"地":{"docs":{},"把":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{},"保":{"docs":{},"存":{"docs":{},"为":{"docs":{},"h":{"docs":{},"e":{"docs":{},"a":{"docs":{},"d":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}},"，":{"docs":{},"找":{"docs":{},"出":{"docs":{},"其":{"docs":{},"中":{"docs":{},"最":{"docs":{},"小":{"docs":{},"的":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"求":{"1":{"docs":{},"～":{"docs":{},"n":{"docs":{},"这":{"docs":{},"n":{"docs":{},"个":{"docs":{},"整":{"docs":{},"数":{"docs":{},"的":{"docs":{},"十":{"docs":{},"进":{"docs":{},"制":{"docs":{},"表":{"docs":{},"示":{"docs":{},"中":{"1":{"docs":{},"出":{"docs":{},"现":{"docs":{},"的":{"docs":{},"次":{"docs":{},"数":{"docs":{},"。":{"docs":{"coding_practice/sword_offer/resolution.html":{"ref":"coding_practice/sword_offer/resolution.html","tf":0.0006540222367560497}}}}}}}}},"docs":{}}}}}}}}}}}}}}}},"docs":{}}},"'":{"docs":{},"c":{"docs":{},"'":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},")":{"docs":{},")":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"r":{"docs":{},"e":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"d":{"docs":{},"'":{"docs":{},")":{"docs":{},"r":{"docs":{},"e":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"|":{"docs":{},"|":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{}}}}}}}}},"i":{"docs":{},"'":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"l":{"docs":{},"'":{"docs":{},")":{"docs":{},"r":{"docs":{},"e":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}},"|":{"docs":{},"|":{"docs":{},"s":{"docs":{},"[":{"docs":{},"i":{"docs":{},"+":{"1":{"docs":{},"]":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"docs":{}}}}}}}}},"m":{"docs":{},"'":{"docs":{},")":{"docs":{},")":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"r":{"docs":{},"e":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"v":{"docs":{},"'":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},")":{"docs":{},"r":{"docs":{},"e":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"x":{"docs":{},"'":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}},")":{"docs":{},")":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}},"r":{"docs":{},"e":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}},"y":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.002770083102493075}}},"处":{"docs":{},"理":{"docs":{},"思":{"docs":{},"路":{"docs":{},"的":{"docs":{},"关":{"docs":{},"注":{"docs":{},"点":{"docs":{},"是":{"docs":{},"将":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}},"字":{"docs":{},"符":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"存":{"docs":{},"储":{"docs":{},"每":{"docs":{},"个":{"docs":{},"位":{"docs":{},"的":{"docs":{},"数":{"docs":{},"字":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}},"搜":{"docs":{},"索":{"docs":{},"插":{"docs":{},"入":{"docs":{},"位":{"docs":{},"置":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}},"暴":{"docs":{},"力":{"docs":{},"搜":{"docs":{},"索":{"docs":{},"法":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}},"然":{"docs":{},"后":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"环":{"docs":{},"形":{"docs":{},"链":{"docs":{},"表":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}},"罗":{"docs":{},"马":{"docs":{},"数":{"docs":{},"字":{"docs":{},"转":{"docs":{},"整":{"docs":{},"数":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}},"考":{"docs":{},"虑":{"docs":{},"循":{"docs":{},"环":{"docs":{},"结":{"docs":{},"束":{"docs":{},"时":{"docs":{},"候":{"docs":{},"的":{"docs":{},"边":{"docs":{},"界":{"docs":{},"条":{"docs":{},"件":{"docs":{},"，":{"docs":{},"注":{"docs":{},"意":{"docs":{},"是":{"docs":{},"c":{"docs":{},"u":{"docs":{},"r":{"docs":{},"—":{"docs":{},">":{"docs":{},"n":{"docs":{},"e":{"docs":{},"x":{"docs":{},"t":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}}}},"链":{"docs":{},"表":{"docs":{},"丢":{"docs":{},"失":{"docs":{},"的":{"docs":{},"问":{"docs":{},"题":{"docs":{},"先":{"docs":{},"存":{"docs":{},"个":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}},"需":{"docs":{},"要":{"docs":{},"依":{"docs":{},"次":{"docs":{},"处":{"docs":{},"理":{"docs":{},"整":{"docs":{},"个":{"docs":{},"链":{"docs":{},"表":{"docs":{},"，":{"docs":{},"所":{"docs":{},"以":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},"v":{"docs":{},"和":{"docs":{},"t":{"docs":{},"m":{"docs":{},"p":{"docs":{},"节":{"docs":{},"点":{"docs":{},"都":{"docs":{},"需":{"docs":{},"要":{"docs":{},"往":{"docs":{},"后":{"docs":{},"滑":{"docs":{},"动":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}}},"这":{"docs":{},"个":{"docs":{},"没":{"docs":{},"什":{"docs":{},"么":{"docs":{},"难":{"docs":{},"的":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}},"迭":{"docs":{},"代":{"docs":{},"：":{"4":{"docs":{},"个":{"docs":{},"指":{"docs":{},"针":{"docs":{},"来":{"docs":{},"操":{"docs":{},"作":{"docs":{},"，":{"docs":{},"p":{"docs":{},"r":{"docs":{},"e":{"docs":{},",":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}},"docs":{}}}},"（":{"docs":{},"s":{"docs":{},"t":{"docs":{},"d":{"docs":{},":":{"docs":{},":":{"docs":{},"d":{"docs":{},"i":{"docs":{},"s":{"docs":{},"t":{"docs":{},"a":{"docs":{},"n":{"docs":{},"c":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}},"v":{"docs":{},"e":{"docs":{},"c":{"docs":{},"t":{"docs":{},"o":{"docs":{},"r":{"docs":{},":":{"docs":{},":":{"docs":{},"e":{"docs":{},"r":{"docs":{},"a":{"docs":{},"s":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}}}}}}}}}}}}}}}}}},"）":{"docs":{"coding_practice/leetcode/resolution.html":{"ref":"coding_practice/leetcode/resolution.html","tf":0.0013850415512465374}}}},"length":1155},"corpusTokens":["!=","!=0)","%","&","&&","&a,","&arr,","&list)","&res,","&str,","'c'","'c'))","'c')re","'d')re","'d'||s[i+1]","'i'","'l')re","'l'||s[i+1]","'m'))","'m')re","'v'","'v')re","'x'","'x'))","'x')re","(!phead)","((hi","(arr.size()","(cur","(cur)","(high","(int","(lo","(low","(matrix.size()));","(node","(p","(p1","(p2","(pre","(proot","(root","(s[i+1]","(start","(下标从0开始)","(下标从1开始)","(从个位往高位分析)",")","*","*/","*=","*arr,","*cur","*cur,","*head)","*left;","*newcur","*newhead","*next,","*next,*cur;","*next;","*node","*p1","*p1,","*p1=head,","*p2","*p2=head","*p;","*pre","*pre,","*prev,","*proot)","*ptemp","*random;","*right;","*tmp;","+","++i)","+1","+=","+high*dight+digit","+high*dight+low*1","+high*digit","+low=4","/","/*","/**","//","//1.第一次更新，复制节点","//2.第二次遍历，更新random指针","//3.","//begin位置","//k是堆的元素个数，i是堆化的对象","//path数组记录节点","//下标i从0开始，","//下沉堆化操作有些难以理解","//不能被递归，也不满足和值条件，就弹出该节点","//中序遍历，并把节点存储到数组中","//为了循环中","//为了循环中++i操作后，得到arr[i]","//交换","//依次存储各个位置上的数字","//分治递归检查","//初始化大顶堆","//初始化：","//判断是否可以后移","//判断是否有环","//压入一个，尝试弹出一次，如果最后能够全部弹出，就说明是弹出序列","//原因是经过循环里的","//堆化操作的开始节点,用下标的方式寻找最大","//堆顶和最后一个元素进行交换","//对堆顶进行一次下沉堆化操作","//弹出堆顶元素，并堆化","//循环结束后一定是","//把数组中的节点处理成双向链表","//拆分步骤需要思考：其实就是依次更新原链表和新链表的next指针，然后再迭代遍历链表","//操作节点","//操作节点的前驱","//操作节点的后继","//最后一个非叶子节点的下标怎么计算的？是一个证明题，暂且记住是len/2","//最后一次循环的边界条件，避免访问空指针","//注意，有几位数字，bcount就有几个0","//用于辅助做剪枝","//目标节点a[i]比两个子节点都大，直接返回","//移除最大元素","//第一个节点的后继指向第二个节点","//第一步先保存后边未操作的链表，因为要对cur","//第三步prev指针后移","//第二个节点的前驱指向第一个节点","//第二步就是将当前节点从“向后指”改变为“向前指”；","//第四步cur指针后移","//继续走读","//该条件说明数组遍历结束，符合有序","//返回的是切分值的坐标，目的就是把小的数丢到左边，大的数丢到右边，然后为pivot找个位置并返回坐标","//这个地方非常细节，为什么要arr[j]和arr[low]交换？","//递归算法","//需要处理所有节点，但要判断第一个和第二个节点","/=","0","0)","0);","0,","0;","0;i","0;i=","1","1)","1)/2","1);","1,","1,2,1,","1,2,1]","1.","1.搜索路径，应该想到是一个dfs问题，递归处理","1.遍历第一遍，在原始链表的每个节点后面插入一个新的节点","10","10,11,12,...,19,20","100","1000","1000;","100;","10;","10==>","11","11,12,13,14","12","13","13.","14","141.","15","16","17","170","175","1750","1753","1:","1;","1]","1]&","1];","1]>0时","1个数的最大值","1，后面数字就是有序的","1，此时应当把字符串存起来；","1：","1；票数减到0就说明干掉这个数字了，让新的数字上任：","1～n整数中1出现的次数","2","2,","2,1,","2.","2.然后让快慢指针后移，快指针后移两个，慢指针后移一个，不过移动之前需要检查条件，免得指针指空，但是如果指针可以指空那就说明没有环","2.边界条件的考虑：路径符合题意的话需要满足","2.遍历第二遍，用random指针来遍历，将每个节点的后继节点的random指向本节点random节点的next；","2020.3.10","2020.3.27","206.","23","234","2345","23456，分解成高位high=234","24.","26.","27.","2:","2]","2：","3","3,","3,4,","3.","3.快速排序","3.拆分链表，其实就是依次更新原链表和新链表的next指针，然后再迭代遍历链表；注意边界条件，不要访问到空指针","35.","38","38.字符串的排列","39.","4","4,","4.","40.","400;","40;","41.数据流中的中位数","42.","456","4;","4矩阵：","5","5,","5,4]","5.归并排序","50","500","500;","50;","56","5;","6","6.","6。","7","7.","8","9","9.","900;","90;","9;",":",";","=","=234个1","==","==0)","==>",">",">=",">label);",">left",">left)",">left);",">left,",">left,list);",">left;",">next",">next)",">next,",">next;",">next;p2",">next先保存两个节点，然后交换他们p1",">next动手脚，所以先保存下来",">next就搞定了，但是对于前面的节点而言，需要先让它指向p2：pr",">next指向prev，也就是第二步。但是需要考虑一下几点：",">next；",">random",">random)",">right",">right)",">right);",">right,",">right,list);",">right;",">val",">val)",">val);",">val){","[","[0,1,2,1],","[1,","[2,1]","[3,2,1],","[4,","[toc]","[x]","\\","]","a[","a[],","a[end])","a[end];);","a[son])","a[son]);","abcd，a分别和b,c,d交换，这是第一层递归；固定a，用b依次与c,d交换，这是第二次递归；固定ab，用c和d交换，这是第三次递归；轮到d时，d的下标就是长度n","add","arr","arr,","arr.size()","arr[++i]","arr[],","arr[high]","arr[i])","arr[j]","arr[lo];","arr[low+1]","arr[low];","array","array/","aux,","aux[],","aux[len];","a的关系，例如a是b，suv是汽车；猫是动物","bcount","bcount/10;","begin)","begin;","bool","break;","bubble_sort(int","bubl","build_heap(arr,","build_heap(int","by/","b不知道a；","c","cache.push_back(x%10);","cache;","chuan","class","clone(randomlistnode*","cn.com/problems/lian","cn.com/problems/numb","cn.com/problems/zi","continue;","convert(p","convert(prootoftree,","convert(treenode*","copy(matrix);","copy[0].size()","countdigitone(int","cur","cur*dight;","cur,","cur;","cur=0时，无影响，不加1；","cur=1时，还要考虑low位的影响，有low+1个1（从0数到low）；","cur==0:","cur==1:","cur>1时，考虑10，11，12，...，19","cur>1：","d","da","de","definit","dfs+回溯+剪枝","dfsfind(nod","dfsfind(root,","dfsfind(treenode*","dfs的剪枝可以用一个set辅助来做，如abbcd，用下标为1的b依次与bcd交换时，和自己相同的b就不做交换","dight","digit","digit;","digit从个位开始","dp(nums.size(),0);","dp[0]","dp[i","dp[i]","dp[i];","duplic","element","end","end)","end1","end2","end;","expectnumber)","expectnumber);","fa","false;","findpath(treenode*","for(int","for(pivot","fu","getleastnumbers(vector&","hascycle(listnod","hash;","hassubtree(proot1","hassubtree(treenode*","head","head)","head;","head；","heap","heap_sort(int","help_set;","helper(res,","helper(vector","hi)","hi);","hi+1;","hi;","high","high%10","high)","high);","high){","high*digit","high*digit;","high+1;","high/10","https://leetcod","https://leetcode.com/problems/remov","https://leetcode.com/problems/two","hui","i)","i);","i++;","i;","i=","i=0;","i=0;i","i=1;ileft","if(!res)","if(2*i+1","if(a[i]","if(arr.size()","if(begin","if(cur","if(dp[i","if(head","if(i","if(newcur","if(nums.empty()){","if(nums.size()==0)","if(nums[mid]","if(p","if(p1","if(proot1","if(prootoftre","if(s[i+1]","if(s[i]","if(s_min.empty()","if(sequence.size()==0)","if(x","insert","insert_sort(int","int","int_max","introduct","isbst(a,","isbst(sequence,","isbst(vector","ispalindrome(int","ispoporder(vector","issubtree(p1","issubtree(proot1,proot2);","issubtree(treenod","j","j)","j+1,","j;","j=0;","j=1;j","j操作后，arr[j]右边的数组都比pivot大，arr[j]左边的数字逗比pivot小","j操作后，得到arr[j]","k","k)","k,","key","l","label(x),","label;","lcof","lcof/solution/mian","leetcod","leetecod","left","left(null),","len","len)","len);","len){","len,","len/2","len/2)","lie","line.front();","line.pop();","line.push(p","line.push(root);","line;","link","list)","list);","list.","list.push_back(p);","list;","list[0];","listnod","listnode(int","listnode*","lo","lo)>>1)","lo,","lo;","long","low","low,","low;","lru算法","m","major","majorityelement(vector&","map;","map['c']","map['d']","map['i']","map['l']","map['m']","map['v']","map['x']","map[s[i]];","matrix)","matrix[0].size()","max","max)","max;","maxpo","merg","merge(arr,","merge(int","merge_sort(int","mid","mid);","mid+1,","mid,","mid;","mirror(proot","mirror(treenod","n","n%10,","n)","n/10,","new","newcur","newhead;","next","next(null)","next(null),","next;","node","node,","node;","note","null","null)","null;","null；","num","nums)","nums,","nums.end()),nums.end());","nums.end());","nums.end(),","nums.erase(std::remove(nums.begin(),nums.end(),val),","nums.erase(std::unique(nums.begin(),","nums.size()","nums.size();","nums[0];","nums[i]+dp[i","nums[i];","o(nlogk)","o(nlogn)","one/","oth","p","p,","p1","p1,","p1;","p1=cur,p2","p2","p2)","p2,","p2;","p2，然后再让前面的几点pre=p1","pai","partition(arr,","partition(vector","path.pop_back();","path.push_back(nod","path;","patterns.readthedocs.io/zh_cn/latest/read_uml.html#id2","permutation(str","phead","phead)","phead;","pivot","pivot)","pivot);","pivot+1,","pivot;","pivot]","popv)","pre","pre;","prev","prev;","prev这一步ok以后才算大功告成，","pre用来衔接前驱，p1和p2用来交换操作，cur用来走读链表","printfromtoptobottom(treenode*","printmatrix(vector","priority_queu","processlist(list);","processlist(vector","proot","proot1,","proot2","proot2)","proot2);","prootoftree)","ptemp;","public:","push(int","pushv,vector","que.pop();","que.push(arr[i]);","que;","queue","quick","quick_partial(arr,","quick_partial(int","quick_sort(arr,","quick_sort(arr,0,len","quick_sort(int","random(null)","randomlistnod","randomlistnode(cur","randomlistnode(int","randomlistnode*","re","remov","removeduplicates(vector&","removeelement(vector&","res(matrix[0].size(),","res.end());","res.push_back(p","res.push_back(path);","res.push_back(str);","res;","resolut","return","return;","reverse(int","reverselist(listnode*","review","right","right(null)","romantoint(str","root)","root,int","rotate(vector","s)","s,","s.length();","s.push(value);","s;","s[i+1]","s_min;","searchinsert(vector&","select","select_sort(int","sequence)","sequence.size()","set","shi","shu","singli","sink1(int","sink2(arr,","solut","son;","sort","sort(arr,","sort(res.begin(),","stack","start,","start1","start2","static","std::distance(nums.begin(),","std::remov","std::remove(nums.begin(),","std::remove）","std:unique删除重复元素","str.length())","string","struct","su","sum","sum)","sum/","swap(a[i],","swap(arr[0],arr[k]);","swap(arr[i],arr[j]);","swap(arr[lo],arr[j]);","swap(arr[low],arr[j]);","swappairs(listnode*","target)","temp;","ti","tmp","tmp;","todo","todo:","top","treenod","treenode(int","treenode*","true;","twosum(vector&","uml和设计模式","uml的表示方法","uml笔记","unordered_map","v","val(x),","val)","val));","val;","valu","value)","vector","vector>","verifysquenceofbst(vector","void","vote","while(!line.empty())","while(++i","while(1)","while(copy.size()","while(left","while(p1","while(pivot","while(start1","while(tmp)","while(true)","while(x)","x","x)","xu","y","zi","zu","zui","{","{}","||","}","};","};*/","一个数字分成三部分：高位high，","不是叶子节点就继续递归，直到递归到叶子节点为止。","不是叶子节点，继续递归","与关联关系不同的是，它是一种临时性的关系，通常在运行期间产生，并且随着运行时的变化；","两两交换链表中的数字","两个下标（减法结果值下标，轮询值下标）","两个有序的链表合并","两数之和","个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。","个结点","为什么high和cur都为0才是边界条件","为什么加1?","为什么加digit？","为什么加low?","为什么要让前面的节点这样做呢？p1和p2交换了位置，所以pre必须指向p2；而p1指向的又是后面两个新的可迭代处理的节点，所以需要pre当然是后面两个节点的pre；","二分查找，但是边界条件需要非常仔细地考虑清楚","二叉搜索树与双向链表","二叉搜索树的后序遍历序列","二叉树中和为某一值的路径","二叉树的镜像","二叉树的镜像定义：源二叉树","从上往下打印出二叉树的每个节点，同层节点从左至右打印。","从个位到高位逐位分析：例如","代码","以后做题遇到计数类的题目还是不要用dp了；","优先级队列","但是指针的指向关系是原始链表的指向关系，复制到新链表的话还是指向原始链表；","位因子digit=1","位因子digit=10的x次方","低位依赖高位！所以先处理低位再处理高位：","你可以假设数组是非空的，并且给定的数组总是存在多数元素。","例如学生和学校，乘车人和车票；","例如输入3571，需要对比1753，那怎么构造呢？","例如，输入12，1～12这些整数中包含1","依次fanzhuan","依次从数组中取出二叉树的节点串成双向链表","依次将数字乘以位数后翻转","依赖关系(dependency)","依赖关系也可能发生变化；","先对二叉树进行中序遍历，把中序遍历的结果存储到一个数组中，","先把节点记录到path数组","关联关系(association)","关联关系默认不强调方向，表示对象间相互知道；","关键是前面的节点和后面的节点怎么维护呢？实际上后面的节点p1","冒泡排序","分别有两种解法，迭代和递归","分析cur=1时已经覆盖该情况；","分析cur位的影响：","分析high位的影响：","分析low位影响：","分析每位出现1的次数，依次从个位分析到高位","则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.","初始化堆：将数组看成一个堆的结构，从后往前遍历非叶子节点，对每个叶子节点做下沉操作","初始化的时候就得做了，在循环里是不太好操作的","删除堆顶元素：把堆顶元素与最后一个元素进行交换，再把数组临时长度n","删除链表倒数第","判断依据是快指针和慢指针","判断是否为叶子节点，且满足和值条件","判断是否到达叶子节点，如果到达叶子节点，是否满足和值条件","前面求和是正贡献，加起来","剑指offer","加上结束节点的值恰好等于期望的sum值，这里需要从根节点递归到叶子节点，每递归一个节点，sum值减去节点的val，直到减去最后的叶子节点恰好等于0，条件等价于","动态规划题","包含min函数的栈","单链表反转","即","参考来自：https://design","双向链表","双指针法","反转链表","反转链表需要使用三个临时变量来解决","只有10个","只有high和cur同时为0时，才会使low覆盖到最高位","可以看看注释里的状态转移方程表示了递推关系，从正贡献和负贡献的角度去思考：","哈希法，找到出现数组长度二分之一的数字就返回","回忆一下动态规划三要素：","回文数判断","因为不满足最优子结构条件,","在最终代码中，依赖关系体现为类构造方法及类方法的传入参数，箭头的指向为调用关系；依赖关系除了临时知道对方外，还是“使用”对方的方法和属性；","在返回值的list中，数组长度大的数组靠前)","堆化收敛：对执行一次下沉操作，即可保持堆的有序化","堆排序","堆排序（假设需要从小到大的堆排序）","堆的应用","堆的数据结构和特性","处理思路的关注点是将cur","复杂链表的复制","如何迭代：","如果没有继续递归，也没有满足和值条件，那么从path数组中弹出这个节点","如果特别强调方向，如下图，表示a知道b，但","子问题：第i个数对应状态的最大值，需要累加第i","字符","存储每个位的数字","它一般用来定义对象之间静态的、天然的结构；","它是一种静态关系，","定义栈的数据结构，请在该类型中实现一个能够得到栈中所含最小元素的min函数（时间复杂度应为o（1））。","实现关系(realize)","实现关系为实现抽象类（”车“就是c++中的抽象类，小汽车和自行车都是具体子类）","实际上是利用数学归纳法来做","实际上是通过跟踪旧链表random的指向来更新新链表的random指针","对应到该题中：","对应的位置就是pivot,","寻找切分点，从后往前寻找","左子树+右子树+根节点","左子节点下标为2i+1，右子节点下标为2i+2，父亲节点下标为(i","当前位cur=5","当前位cur，低位low，","循环体：","循环链表","快慢指针还是不错的","快排","思路1：先初始化大顶堆，然后循环==>(删除堆顶元素+堆化收敛)，直到堆空为止","思路：从头开始，用一个元素依次和字符串的每个元素交换，比如","思路：初始化一个大小为k的优先队列（大顶堆），然后遍历数组，比堆顶小的数就入堆，数组遍历结束后，堆里的k个数字就是最小的k个数字","我的理解是：逐个比较，遇到和自己相同的票数+1，遇到和自己不同的票数","或者","所以有三个逻辑处理分支：","所以，关联关系是一种“强关联”的关系；","排序","插入排序","搜索插入位置","操作给定的二叉树，将其变换为源二叉树的镜像。","数值","数据结构","数据结构与算法之美","数据结构和算法","数组中出现次数超过一半的数字","数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。","数组长度n*堆的删除插入logk","整数翻转","整理链表相关知识点","无后效型可以理解为动态规划表中只关注第i个数字之前的表项，而和第i个数字之后的没关系","无后效性（求解下一个状态只依赖前一个状态），","无论如何都会有234\\*digit","显然，依赖也有方向，双向依赖是一种非常糟糕的结构，我们总是应该保持单向依赖，杜绝双向依赖的产生；","暴力搜索法","最优子结构就是找到累加起来的最大值；","最优子结构（最优解就是一个子问题）","最低位low=6","最后琢磨一个小时做不出来还是看了题解，看题解都费很大劲，思路各异；我选择推荐题解来理解一下，也算是做这种题目的一种思路吧！","最后返回一个排序的双向链表，因此：","最小的k个数","有缘再续，做到现在感觉做了后面的忘了前面的，接下来我想分类刷题4个月看看效果如何","本题是一个dfs算法题，每层递归处理一个字符，字符串的长度就是递归的层数，可以画一棵多叉树来分析。递归的遍历情况可以画一个树来表示，leetcode的题解有图，可以看看","来源：力扣（leetcode）","极客时间","栈的压入、弹出序列","树的子结构","检查前半段数字是否都是符合小于根节点","检查是否溢出","欢迎来到主页","此时的arr[j]","每个阶段/状态：数组中从第i个数往前累加取得最大值的状态，只需记录最大值，无需记录其实下标","求","求中位数","求链表的中间结点","泛化关系(generalization)","注意：保证测试中不会当栈为空的时候，对栈调用pop()或者min()或者top()方法。","然后","状态转移方程:","环形链表","用一套带箭头的虚线表示，描述一个对象在运行期间会用到另一个对象的关系；","用实心菱形箭头的直线表示，表示a组成b，或者说b由a组成；","用实线+空心箭头表示","用带空心箭头的虚线表示","用带空心菱形箭头的直线表示，表示a聚合到b上，或者说b由a组成；","用带箭头的直线表示，用来描述不同类的对象之间的结构关系；","的和最大，为","的数字有1、10、11和12，1一共出现了5次。","示例","示例1:","第一遍哈希表，key作为数组值，value作为数组下标","第三次遍历，拆分链表","第二遍哈希表，根据目标做减法，减法所得值在哈希表中查询o(1)，如果有就返回","算法","类之间的关系","约瑟夫环问题","组合关系(composition)","组合关系是强依赖的，b不存在以后a也不存在了，整体不存在了，部分也不存在了","结束节点是一个叶子节点，实现为代码就是node","结构：","罗马数字转整数","考虑循环结束时候的边界条件，注意是cur—>next","考虑链表丢失的问题先存个tmp","考虑需要依次处理整个链表，所以prev和tmp节点都需要往后滑动","而是计数为主;","聚合关系(aggregation)","聚合关系不是强依赖的，b不存在后a仍然可以存在，比如员工聚合成了部门，但部门不存在了以后员工仍然存在","肯定要直接算上10个1；","著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。","表示i","要求时间复杂度为o(n)。","解决思路：","解决方法1：","解法1:","解法1：","解法2:","解法2：两遍哈希表","解法2：堆","解法2：摩尔投票法：核心思想就是投票，出现相同的加票，出现不同的减票","解法：","解法：动态规划解决这道题目","解释:","跳表","输入:","输入一个复杂链表（每个节点中有节点值，以及两个指针，一个指向下一个节点，另一个特殊指针指向任意一个节点），返回结果为复制后复杂链表的head。（注意，输出结果中请不要返回参数中的节点引用，否则判题程序会直接返回空）","输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串abc,则打印出由字符a,b,c所能排列出来的所有字符串abc,acb,bac,bca,cab和cba。","输入一个整型数组，数组里有正数也有负数。数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。","输入一个整数","输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。如果是则输出yes,否则输出no。假设输入的数组的任意两个数字都互不相同。","输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，例如，如果输入如下4","输入一个链表，反转链表后，输出新链表的表头","输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。","输入一颗二叉树的根节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。(注意:","输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，序列4,5,3,2,1是该压栈序列对应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列。（注意：这两个序列的长度是相等的）","输入两棵二叉树a，b，判断b是不是a的子结构。（ps：我们约定空树不是任意一个树的子结构）","输入判空","输入描述:","输入整数数组","输入：arr","输入：n","输出:","输出：5","输出：6","输出：[0]","输出：[1,2]","边界条件：","这个没什么难的","连续子数组","连续子数组的最大和","迭代：4个指针来操作，pre,","选择排序","递归的设计：","通常与运行状态无关，一般由常识等因素决定的；","重复子问题就是动态规划表的每一次求值，可能会依赖前一个表项的值","重复子问题（后续子问题的求解，需要重复求解前面子问题的解）","链接：https://leetcod","链表","链表中环的检测","链表反转","镜像二叉树","限制：","面试题43.","顺时针打印矩阵","题解：","首先想到的办法是直接遍历一遍，把指针关系记录下来，复制的时候再把指针关系恢复上去；","首先排除暴力搜索，已验证会超时；这种题看起来像是dp可以做的题，但实际上并太好用dp去做,","首先需要稳妥地把head保存为head","（std::distanc","（std::vector::eras","）","，找出其中最小的","，求1～n这n个整数的十进制表示中1出现的次数。"],"pipeline":["stopWordFilter","stemmer"]},"store":{"./":{"url":"./","title":"Introduction","keywords":"","body":"欢迎来到主页\n"},"datastructure_and_algorithm/":{"url":"datastructure_and_algorithm/","title":"数据结构和算法","keywords":"","body":"数据结构和算法\n数据结构\n链表\nTODO:\n\n整理链表相关知识点\n双向链表-LRU算法\n循环链表-约瑟夫环问题\n\n[x] 单链表反转\n\n[ ] 链表中环的检测\n[ ] 两个有序的链表合并\n[ ] 删除链表倒数第 n 个结点\n[ ] 求链表的中间结点\n\n极客时间-数据结构与算法之美-链表\n跳表\n算法\n堆的应用\n\n[x]  优先级队列\n[x]  求 Top K \n[x] 求中位数\n\n"},"datastructure_and_algorithm/sort.html":{"url":"datastructure_and_algorithm/sort.html","title":"排序","keywords":"","body":"排序\n1. 冒泡排序\nvoid bubble_sort(int arr[], int len) {\n    int temp;\n\n    for(int i = 0;i= 0; i--) {\n        for (int j = 0; j \n2. 选择排序\nvoid select_sort(int arr[], int len) {\n    for(int i = 0; i \n3.快速排序\n//返回的是切分值的坐标，目的就是把小的数丢到左边，大的数丢到右边，然后为pivot找个位置并返回坐标\nint quick_partial(int arr[], int low, int high){\n    int pivot = arr[low];\n    int i = low;        //为了循环中++i操作后，得到arr[i] = arr[low+1]\n    int j = high+1;     //为了循环中--j操作后，得到arr[j] = arr[high]\n    while(1) {\n        while(pivot >= arr[++i] && i != high);\n        while(pivot = j) break;  //循环结束后一定是 i > j\n        swap(arr[i],arr[j]);\n    }\n    swap(arr[low],arr[j]);  //这个地方非常细节，为什么要arr[j]和arr[low]交换？\n                            //原因是经过循环里的--j操作后，arr[j]右边的数组都比pivot大，arr[j]左边的数字逗比pivot小\n    return j;       // j 对应的位置就是pivot, 此时的arr[j] == pivot\n}\n\nvoid quick_sort(int arr[], int low, int high) {\n    if (low >= high) {\n        return;\n    }\n    int mid = quick_partial(arr, low, high);\n    quick_sort(arr, low, mid-1);\n    quick_sort(arr, mid+1, high);\n}\n\nvoid quick_sort(int arr[], int len){\n    quick_sort(arr,0,len-1);\n}\n\n4. 插入排序\nvoid insert_sort(int arr[], int len) {\n    for (int i=0; i= 0 && key \n5.归并排序\nvoid merge(int arr[], int aux[], int lo, int mid, int hi) {\n\n    int k = lo;\n    int start1 = lo, end1 = mid, start2 = mid+1, end2 = hi;\n    while(start1 = hi) {\n        return;\n    }\n    int mid = ((hi-lo)>>1) + lo;\n    sort(arr, aux, lo, mid);\n    sort(arr, aux, mid+1, hi);\n    merge(arr, aux, lo, mid, hi);\n}\n\nvoid merge_sort(int arr[], int len){\n    int aux[len];\n    sort(arr, aux, 0, len-1);\n}\n\n6. 堆排序\n堆的数据结构和特性\n堆排序（假设需要从小到大的堆排序）\n思路1：先初始化大顶堆，然后循环==>(删除堆顶元素+堆化收敛)，直到堆空为止\n\n初始化堆：将数组看成一个堆的结构，从后往前遍历非叶子节点，对每个叶子节点做下沉操作\n删除堆顶元素：把堆顶元素与最后一个元素进行交换，再把数组临时长度N-1，后面数字就是有序的\n堆化收敛：对执行一次下沉操作，即可保持堆的有序化\n\n//下沉堆化操作有些难以理解\n//k是堆的元素个数，i是堆化的对象\nvoid sink1(int a[], int len, int i) {\n    while(true) {\n        int maxpos = i; //堆化操作的开始节点,用下标的方式寻找最大\n        if(2*i+1  a[son]) break;  //目标节点a[i]比两个子节点都大，直接返回\n        swap(a[i], a[son]);\n        i = son;\n    }\n}\n//初始化大顶堆\nstatic void build_heap(int *arr, int k, int len) {\n    //最后一个非叶子节点的下标怎么计算的？是一个证明题，暂且记住是len/2 - 1 (下标从0开始)    len/2 (下标从1开始)\n    for(int i = len/2 - 1; i >= 0; i--) {\n        sink2(arr, k, i);\n    }\n}\n\n//下标i从0开始， 左子节点下标为2i+1，右子节点下标为2i+2，父亲节点下标为(i-1)/2\nvoid heap_sort(int arr[], int len) {\n    int k = len-1;\n    //初始化大顶堆\n    build_heap(arr, k, len);\n    //弹出堆顶元素，并堆化\n    for(int i = len - 1; i >= 0; i--) {\n        swap(arr[0],arr[k]); //堆顶和最后一个元素进行交换\n        k--;    //移除最大元素\n        sink2(arr, k, 0);   //对堆顶进行一次下沉堆化操作\n    }\n}\n\n"},"datastructure_and_algorithm/list.html":{"url":"datastructure_and_algorithm/list.html","title":"链表","keywords":"","body":"链表\n"},"datastructure_and_algorithm/code/":{"url":"datastructure_and_algorithm/code/","title":"代码","keywords":"","body":"TODO:\n\n[x] buble sort\n[x] quick sort\n[x] insert sort\n[x] select sort\n[x] merge sort\n[x] heap sort  add 2020.3.27\n\n\n[x] quick sort  review  2020.3.10\n[x] buble sort review 2020.3.10\n[ ] insert sort review\n[ ] select sort review\n[ ] merge sort review\n[ ] heap sort review\n\n"},"uml_and_design_pattern/":{"url":"uml_and_design_pattern/","title":"UML和设计模式","keywords":"","body":"UML和设计模式\n"},"uml_and_design_pattern/UML.html":{"url":"uml_and_design_pattern/UML.html","title":"UML笔记","keywords":"","body":"UML的表示方法\n类之间的关系\n泛化关系(generalization)\n用实线+空心箭头表示\n\n表示is-a的关系，例如A是B，suv是汽车；猫是动物\n\n\n实现关系(realize)\n用带空心箭头的虚线表示\n\n实现关系为实现抽象类（”车“就是C++中的抽象类，小汽车和自行车都是具体子类）\n\n\n聚合关系(aggregation)\n用带空心菱形箭头的直线表示，表示A聚合到B上，或者说B由A组成；\n\n聚合关系不是强依赖的，B不存在后A仍然可以存在，比如员工聚合成了部门，但部门不存在了以后员工仍然存在\n\n\n组合关系(composition)\n用实心菱形箭头的直线表示，表示A组成B，或者说B由A组成；\n\n组合关系是强依赖的，B不存在以后A也不存在了，整体不存在了，部分也不存在了\n\n\n关联关系(association)\n用带箭头的直线表示，用来描述不同类的对象之间的结构关系；\n\n它是一种静态关系， 通常与运行状态无关，一般由常识等因素决定的；\n它一般用来定义对象之间静态的、天然的结构； 所以，关联关系是一种“强关联”的关系；\n例如学生和学校，乘车人和车票；\n关联关系默认不强调方向，表示对象间相互知道；\n如果特别强调方向，如下图，表示A知道B，但 B不知道A；\n\n\n依赖关系(dependency)\n用一套带箭头的虚线表示，描述一个对象在运行期间会用到另一个对象的关系；\n\n与关联关系不同的是，它是一种临时性的关系，通常在运行期间产生，并且随着运行时的变化； 依赖关系也可能发生变化；\n显然，依赖也有方向，双向依赖是一种非常糟糕的结构，我们总是应该保持单向依赖，杜绝双向依赖的产生；\n在最终代码中，依赖关系体现为类构造方法及类方法的传入参数，箭头的指向为调用关系；依赖关系除了临时知道对方外，还是“使用”对方的方法和属性；\n\n\n参考来自：https://design-patterns.readthedocs.io/zh_CN/latest/read_uml.html#id2\n"},"coding_practice/sword_offer/resolution.html":{"url":"coding_practice/sword_offer/resolution.html","title":"剑指offer","keywords":"","body":"剑指Offer\n[TOC]\n反转链表\n输入一个链表，反转链表后，输出新链表的表头\n/*\nstruct ListNode {\n    int val;\n    struct ListNode *next;\n    ListNode(int x) :\n            val(x), next(NULL) {\n    }\n};*/\nclass Solution {\npublic:\n    ListNode* ReverseList(ListNode* pHead) {\n        ListNode *pre, *next,*cur;\n        pre = NULL;\n        cur = pHead;\n        next = NULL;\n        while (cur != NULL) {\n            next = cur->next;\n            cur->next = pre;\n            pre = cur;\n            cur = next;\n        }\n        return pre;\n    }\n};\n\n树的子结构\n输入两棵二叉树A，B，判断B是不是A的子结构。（ps：我们约定空树不是任意一个树的子结构）\n/*\nstruct TreeNode {\n    int val;\n    struct TreeNode *left;\n    struct TreeNode *right;\n    TreeNode(int x) :\n            val(x), left(NULL), right(NULL) {\n    }\n};*/\nclass Solution {\npublic:\n    bool HasSubtree(TreeNode* pRoot1, TreeNode* pRoot2)\n    {\n        bool res = false;\n        if(pRoot1 != NULL && pRoot2 != NULL) {\n            if(pRoot1->val == pRoot2->val) {\n                res = isSubtree(pRoot1,pRoot2);\n            }\n            if(!res) {\n                res = HasSubtree(pRoot1->left, pRoot2);\n            }\n            if(!res) {\n                res = HasSubtree(pRoot1->right, pRoot2);\n            }\n        }\n        return res;\n    }\n    bool isSubtree(TreeNode *p1, TreeNode* p2) {\n        if (p2 == NULL) {\n            return true;\n        }\n        if (p1 == NULL) {\n            return false;\n        }\n        if(p1->val != p2->val){\n            return false;\n        } \n        return isSubtree(p1->left, p2->left) && isSubtree(p1->right, p2->right);\n    }\n};\n\n二叉树的镜像\n操作给定的二叉树，将其变换为源二叉树的镜像。\n输入描述:\n二叉树的镜像定义：源二叉树 \n            8\n           /  \\\n          6   10\n         / \\  / \\\n        5  7 9 11\n        镜像二叉树\n            8\n           /  \\\n          10   6\n         / \\  / \\\n        11 9 7  5\n/*\nstruct TreeNode {\n    int val;\n    struct TreeNode *left;\n    struct TreeNode *right;\n    TreeNode(int x) :\n            val(x), left(NULL), right(NULL) {\n    }\n};*/\nclass Solution {\npublic:\n    void Mirror(TreeNode *pRoot) {\n        if (pRoot == NULL) {\n            return;\n        }\n        TreeNode *pTemp = pRoot->right;\n        pRoot->right = pRoot->left;\n        pRoot->left = pTemp;\n        if (pRoot->left) {\n            Mirror(pRoot->left);\n        }\n        if (pRoot->right) {\n            Mirror(pRoot->right);\n        }\n        return;\n    }\n};\n\n顺时针打印矩阵\n输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字，例如，如果输入如下4 X 4矩阵： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 则依次打印出数字1,2,3,4,8,12,16,15,14,13,9,5,6,7,11,10.\nclass Solution {\npublic:\n    vector printMatrix(vector > matrix) {\n        vector > copy(matrix);\n        vector res;\n        while(copy.size() != 0 && copy[0].size() !=0) {\n            for (int i = 0; i > rotate(vector > matrix) {\n        vector  > res(matrix[0].size(), vector (matrix.size()));\n        int m = 0;\n        int n = 0;\n        for (int i = matrix[0].size() - 1; i >= 0; --i) {\n            for (int j = 0; j \n包含min函数的栈\n定义栈的数据结构，请在该类型中实现一个能够得到栈中所含最小元素的min函数（时间复杂度应为O（1））。\n注意：保证测试中不会当栈为空的时候，对栈调用pop()或者min()或者top()方法。\nclass Solution {\npublic:\n    void push(int value) {\n        s.push(value);\n        if(s_min.empty() || value  s;\n    stack  s_min;\n\n};\n\n栈的压入、弹出序列\n输入两个整数序列，第一个序列表示栈的压入顺序，请判断第二个序列是否可能为该栈的弹出顺序。假设压入栈的所有数字均不相等。例如序列1,2,3,4,5是某栈的压入顺序，序列4,5,3,2,1是该压栈序列对应的一个弹出序列，但4,3,5,1,2就不可能是该压栈序列的弹出序列。（注意：这两个序列的长度是相等的）\nclass Solution {\npublic:\n    bool IsPopOrder(vector pushV,vector popV) {\n        //压入一个，尝试弹出一次，如果最后能够全部弹出，就说明是弹出序列\n        stack s;\n        for (int i = 0, j = 0; i \n从上往下打印出二叉树的每个节点，同层节点从左至右打印。\n/*\nstruct TreeNode {\n    int val;\n    struct TreeNode *left;\n    struct TreeNode *right;\n    TreeNode(int x) :\n            val(x), left(NULL), right(NULL) {\n    }\n};*/\nclass Solution {\npublic:\n    vector PrintFromTopToBottom(TreeNode* root) {\n        queue line;\n        vector res;\n        if (root == NULL) {\n            return res;\n        }\n        TreeNode *p;\n        line.push(root);\n        while(!line.empty()) {\n            p = line.front();\n            res.push_back(p->val);\n            if (p->left != NULL) {\n                line.push(p->left);\n            }\n            if (p->right != NULL) {\n                line.push(p->right);\n            }\n            line.pop();\n        }\n        return res;\n\n    }\n};\n\n二叉搜索树的后序遍历序列\n输入一个整数数组，判断该数组是不是某二叉搜索树的后序遍历的结果。如果是则输出Yes,否则输出No。假设输入的数组的任意两个数字都互不相同。\nclass Solution {\npublic:\n    bool IsBST(vector &a, int start, int end) {\n        // 结构：  左子树+右子树+根节点\n        if (start >= end) {                //该条件说明数组遍历结束，符合有序\n            return true;\n        }\n        int pivot;\n        for(pivot = end; a[--pivot] > a[end];);  // 寻找切分点，从后往前寻找\n        for(int i = pivot; i >= 0; i--) {        // 检查前半段数字是否都是符合小于根节点\n            if(a[i] > a[end]) return false;\n        }\n        return IsBST(a, start, pivot) && IsBST(a, pivot+1, end-1);    //分治递归检查\n\n    }\n    bool VerifySquenceOfBST(vector sequence) {\n        if(sequence.size()==0) return false;\n        return IsBST(sequence, 0, sequence.size()-1);\n    }\n\n};\n\n二叉树中和为某一值的路径\n输入一颗二叉树的根节点和一个整数，打印出二叉树中结点值的和为输入整数的所有路径。路径定义为从树的根结点开始往下一直到叶结点所经过的结点形成一条路径。(注意: 在返回值的list中，数组长度大的数组靠前)\n\n解决思路： \n  1.搜索路径，应该想到是一个dfs问题，递归处理\n  2.边界条件的考虑：路径符合题意的话需要满足\n  * 结束节点是一个叶子节点，实现为代码就是node->left == NULL && node->right == NULL\n  * 加上结束节点的值恰好等于期望的sum值，这里需要从根节点递归到叶子节点，每递归一个节点，sum值减去节点的val，直到减去最后的叶子节点恰好等于0，条件等价于 sum == node->val\n\n递归的设计：\n\n输入判空\n先把节点记录到path数组\n判断是否到达叶子节点，如果到达叶子节点，是否满足和值条件\n不是叶子节点就继续递归，直到递归到叶子节点为止。\n如果没有继续递归，也没有满足和值条件，那么从path数组中弹出这个节点\n\n\n\n/*\nstruct TreeNode {\n    int val;\n    struct TreeNode *left;\n    struct TreeNode *right;\n    TreeNode(int x) :\n            val(x), left(NULL), right(NULL) {\n    }\n};*/\nclass Solution {\npublic:\n    vector> res;\n    vector path;\n    void dfsFind(TreeNode* node, int sum) {\n        if (node == NULL) {\n            return;\n        }\n        path.push_back(node->val);        //path数组记录节点\n          // 判断是否为叶子节点，且满足和值条件\n        if (node->left == NULL && node->right == NULL && sum == node->val) {\n            res.push_back(path);\n        } else {    // 不是叶子节点，继续递归\n            if (node->left) {\n                dfsFind(node->left, sum - node->val);\n            }\n            if (node->right) {\n                dfsFind(node->right, sum - node->val);\n            }\n        }\n        path.pop_back();     //不能被递归，也不满足和值条件，就弹出该节点\n    }\n\n    vector > FindPath(TreeNode* root,int expectNumber) {\n        dfsFind(root, expectNumber);\n        return res;\n    }\n};\n\n复杂链表的复制\n输入一个复杂链表（每个节点中有节点值，以及两个指针，一个指向下一个节点，另一个特殊指针指向任意一个节点），返回结果为复制后复杂链表的head。（注意，输出结果中请不要返回参数中的节点引用，否则判题程序会直接返回空）\n/*\nstruct RandomListNode {\n    int label;\n    struct RandomListNode *next, *random;\n    RandomListNode(int x) :\n            label(x), next(NULL), random(NULL) {\n    }\n};\n*/\n/*\n首先想到的办法是直接遍历一遍，把指针关系记录下来，复制的时候再把指针关系恢复上去；\n但是指针的指向关系是原始链表的指向关系，复制到新链表的话还是指向原始链表；\n解决方法1：\n1.遍历第一遍，在原始链表的每个节点后面插入一个新的节点\n2.遍历第二遍，用random指针来遍历，将每个节点的后继节点的random指向本节点random节点的next；\n    实际上是通过跟踪旧链表random的指向来更新新链表的random指针\n3.拆分链表，其实就是依次更新原链表和新链表的next指针，然后再迭代遍历链表；注意边界条件，不要访问到空指针\n*/\nclass Solution {\npublic:\n    RandomListNode* Clone(RandomListNode* pHead)\n    {\n        if (!pHead) return NULL;\n        RandomListNode *cur = pHead;\n        //1.第一次更新，复制节点\n        while (cur) {\n            RandomListNode *node = new RandomListNode(cur->label);\n            node->next = cur->next;\n            cur->next = node;\n            cur = node->next;\n        }\n        //2.第二次遍历，更新random指针\n        cur = pHead;\n        while (cur) {\n            RandomListNode *node = cur->next;\n            if(cur->random) {\n                node->random = cur->random->next;\n            }\n            cur = node->next;\n        }\n        //3. 第三次遍历，拆分链表\n        //拆分步骤需要思考：其实就是依次更新原链表和新链表的next指针，然后再迭代遍历链表\n        RandomListNode *newhead = pHead->next;\n        RandomListNode *newcur =  newhead;\n        cur = pHead;\n        while (cur) {\n            cur->next = cur->next->next;\n            if(newcur->next)    //最后一次循环的边界条件，避免访问空指针\n                newcur->next = newcur->next->next;\n            cur = cur->next;\n            newcur = newcur->next;\n        }\n        return newhead;\n    }\n};\n\n二叉搜索树与双向链表\n输入一棵二叉搜索树，将该二叉搜索树转换成一个排序的双向链表。要求不能创建任何新的结点，只能调整树中结点指针的指向。\n解决思路： 最后返回一个排序的双向链表，因此：\n\n先对二叉树进行中序遍历，把中序遍历的结果存储到一个数组中，\n依次从数组中取出二叉树的节点串成双向链表\n\n/*\nstruct TreeNode {\n    int val;\n    struct TreeNode *left;\n    struct TreeNode *right;\n    TreeNode(int x) :\n            val(x), left(NULL), right(NULL) {\n    }\n};*/\nclass Solution {\npublic:\n    TreeNode* Convert(TreeNode* pRootOfTree)\n    {\n        if(pRootOfTree == NULL) {\n            return NULL;\n        }\n        vector list;\n        Convert(pRootOfTree, list);        //中序遍历，并把节点存储到数组中\n        return ProcessList(list);            //把数组中的节点处理成双向链表\n    }\n\n    void Convert(TreeNode* p, vector &list) {\n        if(p != NULL) {\n            Convert(p->left,list);\n            list.push_back(p);\n            Convert(p->right,list);\n        }\n\n    }\n    TreeNode* ProcessList(vector list) {\n        TreeNode * head = list[0];\n        TreeNode * cur = head;\n        for(int i=1;ileft = cur;                //第二个节点的前驱指向第一个节点\n            cur->right = temp;            //第一个节点的后继指向第二个节点\n            cur = temp;\n        }\n        return head;\n    }\n};\n\n38.字符串的排列\n\nDFS+回溯+剪枝\n\n输入一个字符串,按字典序打印出该字符串中字符的所有排列。例如输入字符串abc,则打印出由字符a,b,c所能排列出来的所有字符串abc,acb,bac,bca,cab和cba。\n思路：从头开始，用一个元素依次和字符串的每个元素交换，比如 abcd，a分别和b,c,d交换，这是第一层递归；固定a，用b依次与c,d交换，这是第二次递归；固定ab，用c和d交换，这是第三次递归；轮到d时，d的下标就是长度n-1，此时应当把字符串存起来；\n本题是一个DFS算法题，每层递归处理一个字符，字符串的长度就是递归的层数，可以画一棵多叉树来分析。递归的遍历情况可以画一个树来表示，leetcode的题解有图，可以看看\n\n\nDFS的剪枝可以用一个set辅助来做，如abbcd，用下标为1的b依次与bcd交换时，和自己相同的b就不做交换\n\n\n题解：\nhttps://leetcode-cn.com/problems/zi-fu-chuan-de-pai-lie-lcof/solution/mian-shi-ti-38-zi-fu-chuan-de-pai-lie-hui-su-fa-by/\n//递归算法\nclass Solution {\npublic:\n    vector permutation(string s) {\n        vector res;\n        helper(res, s, 0);\n        sort(res.begin(), res.end());\n        return res;\n    }\n    void helper(vector &res, string &str, int begin) {\n        if(begin == str.length()) {     //begin位置\n            res.push_back(str);\n            return;\n        }\n        set help_set;    //用于辅助做剪枝\n        for(int i = begin; i \n39. 数组中出现次数超过一半的数字\n数组中有一个数字出现的次数超过数组长度的一半，请找出这个数字。 \n你可以假设数组是非空的，并且给定的数组总是存在多数元素。 \n示例 1:\n    输入: [1, 2, 3, 2, 2, 2, 5, 4, 2]\n    输出: 2\n解法1：  哈希法，找到出现数组长度二分之一的数字就返回\nclass Solution {\npublic:\n    int majorityElement(vector& nums) {\n        unordered_map hash;\n        int res = 0; \n        int len = nums.size();\n        for(int i = 0; i len/2) {\n                res = nums[i];\n                return res;\n            }  \n        }\n        return res;\n    }\n};\n\n解法2：摩尔投票法：核心思想就是投票，出现相同的加票，出现不同的减票\n我的理解是：逐个比较，遇到和自己相同的票数+1，遇到和自己不同的票数-1；票数减到0就说明干掉这个数字了，让新的数字上任：\nclass Solution {\npublic:\n    int majorityElement(vector& nums) {\n        int vote = 0, major = 0;\n        for (int i = 0 ; i\n40. 最小的k个数\n输入整数数组 arr ，找出其中最小的 k 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4。\n示例 1：\n    输入：arr = [3,2,1], k = 2\n    输出：[1,2] 或者 [2,1]\n示例 2：\n    输入：arr = [0,1,2,1], k = 1\n    输出：[0]\n解法1： 快排 O(nlogn)\nclass Solution {\npublic:\n    vector getLeastNumbers(vector& arr, int k) {\n        vector res;\n        if (arr.size() == 0 || k == 0) {\n            return res;\n        }\n        quick_sort(arr, 0, arr.size()-1);\n        for(int i = 0; i & arr, int lo, int hi) {\n        if (lo >= hi) {\n            return;\n        }\n        int j = partition(arr, lo, hi);\n        quick_sort(arr, lo, j-1);\n        quick_sort(arr, j+1, hi);\n\n    }\n\n    int partition(vector &arr, int lo, int hi) {\n        int pivot = arr[lo];\n        int i = lo, j = hi+1;\n        while(true) {\n            while(++i = lo && arr[j] > pivot);\n            if(i >= j) break;\n            swap(arr[i],arr[j]);\n        }\n        swap(arr[lo],arr[j]);\n        return j;\n    }\n};\n\n解法2：堆 O(nlogk)  数组长度n*堆的删除插入logk\n思路：初始化一个大小为k的优先队列（大顶堆），然后遍历数组，比堆顶小的数就入堆，数组遍历结束后，堆里的k个数字就是最小的k个数字\nclass Solution {\npublic:\n    vector getLeastNumbers(vector& arr, int k) {\n        vector res;\n        if(arr.size() == 0 || k ==0) {\n            return res;\n        }\n        priority_queue que;\n        for(int i = 0; i arr[i]) {\n                que.pop();\n                que.push(arr[i]);\n            }\n        }\n        for(int i = 0; i\n41.数据流中的中位数 TODO\n42. 连续子数组的最大和\n输入一个整型数组，数组里有正数也有负数。数组中的一个或连续多个整数组成一个子数组。求所有子数组的和的最大值。\n要求时间复杂度为O(n)。\n示例1:\n输入: nums = [-2,1,-3,4,-1,2,1,-5,4]\n输出: 6\n解释: 连续子数组 [4,-1,2,1] 的和最大，为 6。\n来源：力扣（LeetCode）\n链接：https://leetcode-cn.com/problems/lian-xu-zi-shu-zu-de-zui-da-he-lcof\n著作权归领扣网络所有。商业转载请联系官方授权，非商业转载请注明出处。\n解法：动态规划解决这道题目\n回忆一下动态规划三要素：\n\n最优子结构（最优解就是一个子问题）\n重复子问题（后续子问题的求解，需要重复求解前面子问题的解）\n无后效性（求解下一个状态只依赖前一个状态），\n\n对应到该题中：\n\n最优子结构就是找到累加起来的最大值；\n\n重复子问题就是动态规划表的每一次求值，可能会依赖前一个表项的值\n\n无后效型可以理解为动态规划表中只关注第i个数字之前的表项，而和第i个数字之后的没关系\n\n\n可以看看注释里的状态转移方程表示了递推关系，从正贡献和负贡献的角度去思考：\n// 动态规划题\n// 每个阶段/状态：数组中从第i个数往前累加取得最大值的状态，只需记录最大值，无需记录其实下标\n// 子问题：第i个数对应状态的最大值，需要累加第i-1个数的最大值\n// 状态转移方程:    dp[i-1]>0时 dp[i] = nums[i]+dp[i-1]   前面求和是正贡献，加起来\n//                dp[i-1]& nums) {\n        vector dp(nums.size(),0);\n        int max = nums[0];\n        dp[0] = nums[0];\n        for(int i = 1; i  0) {\n                dp[i] = nums[i]+dp[i-1];\n            } else if(dp[i-1]  max) {\n                max = dp[i];\n            }\n        }\n        return max; \n    }\n};\n\n面试题43. 1～n整数中1出现的次数\n输入一个整数 n ，求1～n这n个整数的十进制表示中1出现的次数。\n例如，输入12，1～12这些整数中包含1 的数字有1、10、11和12，1一共出现了5次。\n示例 1：\n输入：n = 12\n输出：5\n示例 2：\n输入：n = 13\n输出：6\n限制：\n1 https://leetcode-cn.com/problems/number-of-digit-one/\n解法： 首先排除暴力搜索，已验证会超时；这种题看起来像是DP可以做的题，但实际上并太好用DP去做, 因为不满足最优子结构条件, 而是计数为主; 以后做题遇到计数类的题目还是不要用DP了；\n最后琢磨一个小时做不出来还是看了题解，看题解都费很大劲，思路各异；我选择推荐题解来理解一下，也算是做这种题目的一种思路吧！\n从个位到高位逐位分析：例如 23456，分解成高位high=234  当前位cur=5  最低位low=6  位因子digit=1 (从个位往高位分析)\n\n\n\ndight\nhigh\ncur\nlow\n\n\n\n\n1\n2345\n6\n0\n\n\n10\n234\n5\n6\n\n\n100\n23\n4\n56\n\n\n1000\n2\n3\n456\n\n\n\n分析high位的影响：\n        无论如何都会有234\\*digit =234个1\n分析cur位的影响：\n        cur=0时，无影响，不加1；\n        cur=1时，还要考虑low位的影响，有low+1个1（从0数到low）；\n        cur>1时，考虑10，11，12，...，19 肯定要直接算上10个1；\n分析low位影响：\n        分析cur=1时已经覆盖该情况；\n\n所以有三个逻辑处理分支：\n1. cur==0: +high*digit\n2. cur==1: +high*dight+low*1\n3. cur>1： +high*dight+digit\n\n如何迭代：\n低位依赖高位！所以先处理低位再处理高位：\nlow = low + cur*dight;\ncur = high%10\nhigh = high/10\n\n边界条件：\nhigh != 0 || cur != 0  即  high == 0 && cur == 0\n为什么high和cur都为0才是边界条件\n只有high和cur同时为0时，才会使low覆盖到最高位\nclass Solution {\npublic:\n    int countDigitOne(int n) {\n        long digit = 1, res = 0;\n        long high = n/10, cur = n%10, low = 0;\n        // 分析每位出现1的次数，依次从个位分析到高位\n        // 一个数字分成三部分：高位high， 当前位cur，低位low， 位因子digit=10的x次方\n        while (high != 0 || cur != 0) {  // digit从个位开始\n            if (cur == 0) {\n                res += high*digit;\n            } else if (cur == 1) {\n                res += high*digit + low + 1;    // 为什么加low? 11,12,13,14 ==> +low=4   为什么加1? 10==> +1\n            } else {\n                res += high * digit + digit;      // 为什么加digit？ 10,11,12,...,19,20 ==> 只有10个\n            }\n            low += cur * digit;\n            cur = high % 10;\n            high /= 10;\n            digit *= 10;\n        }\n        return res;\n    }\n};\n\n有缘再续，做到现在感觉做了后面的忘了前面的，接下来我想分类刷题4个月看看效果如何\n"},"coding_practice/leetcode/resolution.html":{"url":"coding_practice/leetcode/resolution.html","title":"leetecode","keywords":"","body":"Leetcode note\n[TOC]\n1. 两数之和\nhttps://leetcode.com/problems/two-sum/\n解法1: 暴力搜索法\nclass Solution {\npublic:\n    vector twoSum(vector& nums, int target) {\n        vector res;\n        for(int i=0;i\n\n解法2：两遍哈希表\n第一遍哈希表，key作为数组值，value作为数组下标\n第二遍哈希表，根据目标做减法，减法所得值在哈希表中查询O(1)，如果有就返回 两个下标（减法结果值下标，轮询值下标）\n\nclass Solution {\npublic:\n    vector twoSum(vector& nums, int target) {\n        vector res;\n        unordered_map hash;\n        int oth = 0;\n        for(int i = 0;i \n7. 整数翻转\n\n存储每个位的数字\n依次fanzhuan\n检查是否溢出\nclass Solution {\npublic:\n  int reverse(int x) {\n\n      long bcount = 1;\n      long y = 0;\n      vector cache;\n\n      //依次存储各个位置上的数字\n      while(x) {\n          cache.push_back(x%10);  \n          x /= 10;\n          bcount *= 10;   //注意，有几位数字，bcount就有几个0\n      }        \n\n      // 依次将数字乘以位数后翻转\n      bcount = bcount/10;\n      for(int i=0;i INT_MAX || y \n\n\n9. 回文数判断\n实际上是利用数学归纳法来做\n例如输入3571，需要对比1753，那怎么构造呢？\n1 = 1\n17 = 10 + 7\n175 = 170 + 5\n1753 = 1750 + 3\nclass Solution {\npublic:\n    bool isPalindrome(int x) {\n        if(x 13. 罗马数字转整数\n字符          数值\nI             1\nV             5\nX             10\nL             50\nC             100\nD             500\nM             1000\nclass Solution {\npublic:\n    int romanToInt(string s) {\n        unordered_map map;\n        map['I'] = 1;\n        map['V'] = 5;\n        map['X'] = 10;\n        map['L'] = 50;\n        map['C'] = 100;\n        map['D'] = 500;\n        map['M'] = 1000;\n\n        int res = 0;\n        for(int i = 0; i != s.length(); ++i)\n        {\n            if(s[i] == 'I' && (s[i+1] == 'V' || s[i+1] == 'X')) {\n                if(s[i+1] == 'V')res += 4;\n                if(s[i+1] == 'X')res += 9;\n                i++;\n                continue;\n            }\n            if(s[i] == 'X' && (s[i+1] == 'L'||s[i+1] == 'C')) {\n                if(s[i+1] == 'L')res += 40;\n                if(s[i+1] == 'C')res += 90;\n                i++;\n                continue;\n            }\n            if(s[i] == 'C' && (s[i+1] == 'D'||s[i+1] == 'M')) {\n                if(s[i+1] == 'D')res += 400;\n                if(s[i+1] == 'M')res += 900;\n                i++;\n                continue;\n            }\n            res += map[s[i]];\n        }\n        return res;\n    }\n};\n\n24. 两两交换链表中的数字\n分别有两种解法，迭代和递归\n迭代：4个指针来操作，pre, p1, p2, cur,\n\npre用来衔接前驱，p1和p2用来交换操作，cur用来走读链表\n首先需要稳妥地把head保存为head->next, 初始化的时候就得做了，在循环里是不太好操作的\n然后 p1=cur,p2 = p1->next先保存两个节点，然后交换他们p1->next = p2->next;p2->next = p1; 这个没什么难的\n关键是前面的节点和后面的节点怎么维护呢？实际上后面的节点p1->next = p2->next就搞定了，但是对于前面的节点而言，需要先让它指向p2：pre->next = p2，然后再让前面的几点pre=p1\n为什么要让前面的节点这样做呢？p1和p2交换了位置，所以pre必须指向p2；而p1指向的又是后面两个新的可迭代处理的节点，所以需要pre当然是后面两个节点的pre；\n\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* swapPairs(ListNode* head) {\n        if(head == NULL || head->next == NULL) {\n            return head;\n        }\n        ListNode *cur = head;\n        ListNode *pre = NULL;\n        head = head->next;\n        while (cur && cur->next) {  //需要处理所有节点，但要判断第一个和第二个节点\n            ListNode *p1 = cur;\n            ListNode *p2 = p1->next;\n\n            if (pre != NULL) {\n                pre->next = p2;\n            }\n            p1->next = p2->next;    //交换\n            p2->next = p1;          //交换\n            cur = p1->next;         //继续走读\n            pre = p1;\n        return head;\n    }\n};\n\n26. Remove Duplicates from Sorted Array\nhttps://leetcode.com/problems/remove-duplicates-from-sorted-array/\n解法1:  双指针法\nclass Solution {\npublic:\n    int removeDuplicates(vector& nums) {\n        if(nums.size()==0)\n            return 0;\n        int i = 0;\n        for(int j=1;j\n解法2: std:unique删除重复元素\nclass Solution {\npublic:\n    int removeDuplicates(vector& nums) {\n        nums.erase(std::unique(nums.begin(), nums.end()),nums.end());\n        return nums.size();\n    }\n};\n\n27. Remove Element\nResolution 1: 双指针法\nclass Solution {\npublic:\n    int removeElement(vector& nums, int val) {\n        int i=0;\n        for(int j=0; j\nResolution 2:  （std::distance + std::remove ） \nclass Solution {\npublic:\n    int removeElement(vector& nums, int val) {\n            return std::distance(nums.begin(), std::remove(nums.begin(), nums.end(), val));\n    }\n};\n\nResolution 2:   （std::vector::erase + std::remove） \nclass Solution { \npublic:\n    int removeElement(vector& nums, int val) {\n            nums.erase(std::remove(nums.begin(),nums.end(),val), nums.end());\n            return nums.size();\n    }\n};\n\n35. 搜索插入位置\n二分查找，但是边界条件需要非常仔细地考虑清楚\n\nclass Solution {\npublic:\n    int searchInsert(vector& nums, int target) {\n        if(nums.empty()){\n            return 0;\n        }\n        int left = 0;\n        int right = nums.size()-1;\n        int mid;\n        while(left target) {\n                right = mid-1;\n            }\n            if(nums[mid]\n141. 环形链表\n快慢指针还是不错的\n\n判断依据是快指针和慢指针\n2.然后让快慢指针后移，快指针后移两个，慢指针后移一个，不过移动之前需要检查条件，免得指针指空，但是如果指针可以指空那就说明没有环\n\nclass Solution {\npublic:\n    bool hasCycle(ListNode *head) {\n        if(head == NULL) {\n            return false;\n        }\n        ListNode *p1=head, *p2=head->next;\n        while(p1 && p2) {\n            if (p1 == p2) {     //判断是否有环\n                return true;\n            }\n            if (p1->next && p2->next && p2->next->next) { //判断是否可以后移\n                p1 = p1->next;\n                p2 = p2->next->next;\n            }\n            else {\n                return false;\n            }\n        }\n        return false;\n    }\n};\n\n206. 链表反转\n反转链表需要使用三个临时变量来解决\n//初始化：\nprev = NULL；   //操作节点的前驱\ncur = head；    //操作节点\ntmp = NULL；    //操作节点的后继\n循环体：\ntmp = cur->next     //第一步先保存后边未操作的链表，因为要对cur->next动手脚，所以先保存下来\ncur->next = prev    //第二步就是将当前节点从“向后指”改变为“向前指”；\nprev = cur          //第三步prev指针后移\ncur = tmp           //第四步cur指针后移\n\n处理思路的关注点是将cur->next指向prev，也就是第二步。但是需要考虑一下几点：\n\n考虑链表丢失的问题先存个tmp = cur->next；\n考虑需要依次处理整个链表，所以prev和tmp节点都需要往后滑动\n考虑循环结束时候的边界条件，注意是cur—>next = prev这一步ok以后才算大功告成，\n\n/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode(int x) : val(x), next(NULL) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* reverseList(ListNode* head) {\n        ListNode *cur, *prev, *tmp;\n        prev = NULL;\n        cur = head;\n        while(tmp) {\n            tmp = cur->next;\n            cur->next = prev;\n            prev = cur;\n            cur = tmp;\n        }\n\n        return prev;\n    }\n};\n\n \n"}}}